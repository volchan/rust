{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.2.0","program":"/Users/volchan/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","byte_tools","/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.2.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=5cfacc38c44ff1c3","-C","extra-filename=-5cfacc38c44ff1c3","--out-dir","/Users/volchan/code/volchan/udemy/rust/blockchain/target/rls/debug/deps","-L","dependency=/Users/volchan/code/volchan/udemy/rust/blockchain/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/Users/volchan/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/volchan/code/volchan/udemy/rust/blockchain/target/rls/debug/deps/libbyte_tools-5cfacc38c44ff1c3.rmeta"},"prelude":{"crate_id":{"name":"byte_tools","disambiguator":[2803318520684944961,746739050627427374]},"crate_root":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.2.0/src","external_crates":[{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.2.0/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[5902495869598878631,6483651549774204679]}},{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.2.0/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[12311488937759207811,9591695617658421232]}},{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.2.0/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[13642764918293034548,9567326413417207759]}}],"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.2.0/src/lib.rs","byte_start":0,"byte_end":733,"line_start":1,"line_end":37,"column_start":1,"column_end":2}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.2.0/src/lib.rs","byte_start":117,"byte_end":118,"line_start":9,"line_end":9,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.2.0/src/lib.rs","byte_start":117,"byte_end":118,"line_start":9,"line_end":9,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.2.0/src/lib.rs","byte_start":117,"byte_end":118,"line_start":9,"line_end":9,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.2.0/src/lib.rs","byte_start":117,"byte_end":118,"line_start":9,"line_end":9,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.2.0/src/lib.rs","byte_start":0,"byte_end":733,"line_start":1,"line_end":37,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.2.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":14},{"krate":0,"index":23},{"krate":0,"index":30},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"no_std","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.2.0/src/lib.rs","byte_start":0,"byte_end":10,"line_start":1,"line_end":1,"column_start":1,"column_end":11}}]},{"kind":"Function","id":{"krate":0,"index":10},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.2.0/src/read_single.rs","byte_start":1254,"byte_end":1265,"line_start":18,"line_end":18,"column_start":8,"column_end":19},"name":"read_u32_le","qualname":"::read_single::read_u32_le","value":"fn (src: &[u8]) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Read the value of a vector of bytes as a u32 value in little-endian format.\n","sig":null,"attributes":[{"value":"/ Read the value of a vector of bytes as a u32 value in little-endian format.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.2.0/src/read_single.rs","byte_start":1157,"byte_end":1236,"line_start":16,"line_end":16,"column_start":1,"column_end":80}},{"value":"inline","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.2.0/src/read_single.rs","byte_start":1237,"byte_end":1246,"line_start":17,"line_end":17,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":11},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.2.0/src/read_single.rs","byte_start":1421,"byte_end":1432,"line_start":24,"line_end":24,"column_start":8,"column_end":19},"name":"read_u32_be","qualname":"::read_single::read_u32_be","value":"fn (src: &[u8]) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Read the value of a vector of bytes as a u32 value in big-endian format.\n","sig":null,"attributes":[{"value":"/ Read the value of a vector of bytes as a u32 value in big-endian format.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.2.0/src/read_single.rs","byte_start":1327,"byte_end":1403,"line_start":22,"line_end":22,"column_start":1,"column_end":77}},{"value":"inline","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.2.0/src/read_single.rs","byte_start":1404,"byte_end":1413,"line_start":23,"line_end":23,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":12},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.2.0/src/read_single.rs","byte_start":1591,"byte_end":1602,"line_start":30,"line_end":30,"column_start":8,"column_end":19},"name":"read_u64_le","qualname":"::read_single::read_u64_le","value":"fn (src: &[u8]) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Read the value of a vector of bytes as a u64 value in little-endian format.\n","sig":null,"attributes":[{"value":"/ Read the value of a vector of bytes as a u64 value in little-endian format.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.2.0/src/read_single.rs","byte_start":1494,"byte_end":1573,"line_start":28,"line_end":28,"column_start":1,"column_end":80}},{"value":"inline","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.2.0/src/read_single.rs","byte_start":1574,"byte_end":1583,"line_start":29,"line_end":29,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":13},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.2.0/src/read_single.rs","byte_start":1758,"byte_end":1769,"line_start":36,"line_end":36,"column_start":8,"column_end":19},"name":"read_u64_be","qualname":"::read_single::read_u64_be","value":"fn (src: &[u8]) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Read the value of a vector of bytes as a u64 value in big-endian format.\n","sig":null,"attributes":[{"value":"/ Read the value of a vector of bytes as a u64 value in big-endian format.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.2.0/src/read_single.rs","byte_start":1664,"byte_end":1740,"line_start":34,"line_end":34,"column_start":1,"column_end":77}},{"value":"inline","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.2.0/src/read_single.rs","byte_start":1741,"byte_end":1750,"line_start":35,"line_end":35,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":19},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.2.0/src/write_single.rs","byte_start":2295,"byte_end":2307,"line_start":16,"line_end":16,"column_start":8,"column_end":20},"name":"write_u32_le","qualname":"::write_single::write_u32_le","value":"fn (dst: &mut [u8], n: u32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Write a u32 into a vector, which must be 4 bytes long. The value is written\n in little-endian format.\n","sig":null,"attributes":[{"value":"/ Write a u32 into a vector, which must be 4 bytes long. The value is written","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.2.0/src/write_single.rs","byte_start":2169,"byte_end":2248,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ in little-endian format.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.2.0/src/write_single.rs","byte_start":2249,"byte_end":2277,"line_start":14,"line_end":14,"column_start":1,"column_end":29}},{"value":"inline","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.2.0/src/write_single.rs","byte_start":2278,"byte_end":2287,"line_start":15,"line_end":15,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":20},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.2.0/src/write_single.rs","byte_start":2497,"byte_end":2509,"line_start":23,"line_end":23,"column_start":8,"column_end":20},"name":"write_u32_be","qualname":"::write_single::write_u32_be","value":"fn (dst: &mut [u8], n: u32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Write a u32 into a vector, which must be 4 bytes long. The value is written\n in big-endian format.\n","sig":null,"attributes":[{"value":"/ Write a u32 into a vector, which must be 4 bytes long. The value is written","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.2.0/src/write_single.rs","byte_start":2374,"byte_end":2453,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/ in big-endian format.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.2.0/src/write_single.rs","byte_start":2454,"byte_end":2479,"line_start":21,"line_end":21,"column_start":1,"column_end":26}},{"value":"inline","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.2.0/src/write_single.rs","byte_start":2480,"byte_end":2489,"line_start":22,"line_end":22,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":21},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.2.0/src/write_single.rs","byte_start":2702,"byte_end":2714,"line_start":30,"line_end":30,"column_start":8,"column_end":20},"name":"write_u64_le","qualname":"::write_single::write_u64_le","value":"fn (dst: &mut [u8], n: u64) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Write a u64 into a vector, which must be 8 bytes long. The value is written\n in little-endian format.\n","sig":null,"attributes":[{"value":"/ Write a u64 into a vector, which must be 8 bytes long. The value is written","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.2.0/src/write_single.rs","byte_start":2576,"byte_end":2655,"line_start":27,"line_end":27,"column_start":1,"column_end":80}},{"value":"/ in little-endian format.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.2.0/src/write_single.rs","byte_start":2656,"byte_end":2684,"line_start":28,"line_end":28,"column_start":1,"column_end":29}},{"value":"inline","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.2.0/src/write_single.rs","byte_start":2685,"byte_end":2694,"line_start":29,"line_end":29,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":22},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.2.0/src/write_single.rs","byte_start":2904,"byte_end":2916,"line_start":37,"line_end":37,"column_start":8,"column_end":20},"name":"write_u64_be","qualname":"::write_single::write_u64_be","value":"fn (dst: &mut [u8], n: u64) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Write a u64 into a vector, which must be 8 bytes long. The value is written\n in big-endian format.\n","sig":null,"attributes":[{"value":"/ Write a u64 into a vector, which must be 8 bytes long. The value is written","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.2.0/src/write_single.rs","byte_start":2781,"byte_end":2860,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/ in big-endian format.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.2.0/src/write_single.rs","byte_start":2861,"byte_end":2886,"line_start":35,"line_end":35,"column_start":1,"column_end":26}},{"value":"inline","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.2.0/src/write_single.rs","byte_start":2887,"byte_end":2896,"line_start":36,"line_end":36,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":26},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.2.0/src/read_slice.rs","byte_start":3506,"byte_end":3518,"line_start":21,"line_end":21,"column_start":8,"column_end":20},"name":"read_u32v_le","qualname":"::read_slice::read_u32v_le","value":"fn (dst: &mut [u32], src: &[u8]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Read a vector of bytes into a vector of u32s. The values are read in\n little-endian format.\n","sig":null,"attributes":[{"value":"/ Read a vector of bytes into a vector of u32s. The values are read in","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.2.0/src/read_slice.rs","byte_start":3390,"byte_end":3462,"line_start":18,"line_end":18,"column_start":1,"column_end":73}},{"value":"/ little-endian format.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.2.0/src/read_slice.rs","byte_start":3463,"byte_end":3488,"line_start":19,"line_end":19,"column_start":1,"column_end":26}},{"value":"inline","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.2.0/src/read_slice.rs","byte_start":3489,"byte_end":3498,"line_start":20,"line_end":20,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":27},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.2.0/src/read_slice.rs","byte_start":3703,"byte_end":3715,"line_start":28,"line_end":28,"column_start":8,"column_end":20},"name":"read_u32v_be","qualname":"::read_slice::read_u32v_be","value":"fn (dst: &mut [u32], src: &[u8]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Read a vector of bytes into a vector of u32s. The values are read in\n big-endian format.\n","sig":null,"attributes":[{"value":"/ Read a vector of bytes into a vector of u32s. The values are read in","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.2.0/src/read_slice.rs","byte_start":3590,"byte_end":3662,"line_start":25,"line_end":25,"column_start":1,"column_end":73}},{"value":"/ big-endian format.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.2.0/src/read_slice.rs","byte_start":3663,"byte_end":3685,"line_start":26,"line_end":26,"column_start":1,"column_end":23}},{"value":"inline","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.2.0/src/read_slice.rs","byte_start":3686,"byte_end":3695,"line_start":27,"line_end":27,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":28},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.2.0/src/read_slice.rs","byte_start":3903,"byte_end":3915,"line_start":35,"line_end":35,"column_start":8,"column_end":20},"name":"read_u64v_le","qualname":"::read_slice::read_u64v_le","value":"fn (dst: &mut [u64], src: &[u8]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Read a vector of bytes into a vector of u64s. The values are read in\n little-endian format.\n","sig":null,"attributes":[{"value":"/ Read a vector of bytes into a vector of u64s. The values are read in","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.2.0/src/read_slice.rs","byte_start":3787,"byte_end":3859,"line_start":32,"line_end":32,"column_start":1,"column_end":73}},{"value":"/ little-endian format.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.2.0/src/read_slice.rs","byte_start":3860,"byte_end":3885,"line_start":33,"line_end":33,"column_start":1,"column_end":26}},{"value":"inline","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.2.0/src/read_slice.rs","byte_start":3886,"byte_end":3895,"line_start":34,"line_end":34,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":29},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.2.0/src/read_slice.rs","byte_start":4100,"byte_end":4112,"line_start":42,"line_end":42,"column_start":8,"column_end":20},"name":"read_u64v_be","qualname":"::read_slice::read_u64v_be","value":"fn (dst: &mut [u64], src: &[u8]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Read a vector of bytes into a vector of u64s. The values are read in\n big-endian format.\n","sig":null,"attributes":[{"value":"/ Read a vector of bytes into a vector of u64s. The values are read in","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.2.0/src/read_slice.rs","byte_start":3987,"byte_end":4059,"line_start":39,"line_end":39,"column_start":1,"column_end":73}},{"value":"/ big-endian format.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.2.0/src/read_slice.rs","byte_start":4060,"byte_end":4082,"line_start":40,"line_end":40,"column_start":1,"column_end":23}},{"value":"inline","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.2.0/src/read_slice.rs","byte_start":4083,"byte_end":4092,"line_start":41,"line_end":41,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":35},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.2.0/src/write_slice.rs","byte_start":4859,"byte_end":4872,"line_start":23,"line_end":23,"column_start":8,"column_end":21},"name":"write_u32v_le","qualname":"::write_slice::write_u32v_le","value":"fn (dst: &mut [u8], src: &[u32]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Write a vector of u32s into a vector of bytes. The values are written in\n little-endian format.\n","sig":null,"attributes":[{"value":"/ Write a vector of u32s into a vector of bytes. The values are written in","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.2.0/src/write_slice.rs","byte_start":4739,"byte_end":4815,"line_start":20,"line_end":20,"column_start":1,"column_end":77}},{"value":"/ little-endian format.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.2.0/src/write_slice.rs","byte_start":4816,"byte_end":4841,"line_start":21,"line_end":21,"column_start":1,"column_end":26}},{"value":"inline","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.2.0/src/write_slice.rs","byte_start":4842,"byte_end":4851,"line_start":22,"line_end":22,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":36},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.2.0/src/write_slice.rs","byte_start":5067,"byte_end":5080,"line_start":30,"line_end":30,"column_start":8,"column_end":21},"name":"write_u32v_be","qualname":"::write_slice::write_u32v_be","value":"fn (dst: &mut [u8], src: &[u32]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Write a vector of u32s into a vector of bytes. The values are written in\n big-endian format.\n","sig":null,"attributes":[{"value":"/ Write a vector of u32s into a vector of bytes. The values are written in","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.2.0/src/write_slice.rs","byte_start":4950,"byte_end":5026,"line_start":27,"line_end":27,"column_start":1,"column_end":77}},{"value":"/ big-endian format.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.2.0/src/write_slice.rs","byte_start":5027,"byte_end":5049,"line_start":28,"line_end":28,"column_start":1,"column_end":23}},{"value":"inline","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.2.0/src/write_slice.rs","byte_start":5050,"byte_end":5059,"line_start":29,"line_end":29,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":37},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.2.0/src/write_slice.rs","byte_start":5278,"byte_end":5291,"line_start":37,"line_end":37,"column_start":8,"column_end":21},"name":"write_u64v_le","qualname":"::write_slice::write_u64v_le","value":"fn (dst: &mut [u8], src: &[u64]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Write a vector of u64s into a vector of bytes. The values are written in\n little-endian format.\n","sig":null,"attributes":[{"value":"/ Write a vector of u64s into a vector of bytes. The values are written in","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.2.0/src/write_slice.rs","byte_start":5158,"byte_end":5234,"line_start":34,"line_end":34,"column_start":1,"column_end":77}},{"value":"/ little-endian format.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.2.0/src/write_slice.rs","byte_start":5235,"byte_end":5260,"line_start":35,"line_end":35,"column_start":1,"column_end":26}},{"value":"inline","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.2.0/src/write_slice.rs","byte_start":5261,"byte_end":5270,"line_start":36,"line_end":36,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":38},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.2.0/src/write_slice.rs","byte_start":5489,"byte_end":5502,"line_start":44,"line_end":44,"column_start":8,"column_end":21},"name":"write_u64v_be","qualname":"::write_slice::write_u64v_be","value":"fn (dst: &mut [u8], src: &[u64]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Write a vector of u64s into a vector of bytes. The values are written in\n little-endian format.\n","sig":null,"attributes":[{"value":"/ Write a vector of u64s into a vector of bytes. The values are written in","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.2.0/src/write_slice.rs","byte_start":5369,"byte_end":5445,"line_start":41,"line_end":41,"column_start":1,"column_end":77}},{"value":"/ little-endian format.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.2.0/src/write_slice.rs","byte_start":5446,"byte_end":5471,"line_start":42,"line_end":42,"column_start":1,"column_end":26}},{"value":"inline","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.2.0/src/write_slice.rs","byte_start":5472,"byte_end":5481,"line_start":43,"line_end":43,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":43},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.2.0/src/lib.rs","byte_start":242,"byte_end":253,"line_start":16,"line_end":16,"column_start":8,"column_end":19},"name":"copy_memory","qualname":"::copy_memory","value":"fn (src: &[u8], dst: &mut [u8]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Copy bytes from src to dest\n","sig":null,"attributes":[{"value":"/ Copy bytes from src to dest","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.2.0/src/lib.rs","byte_start":193,"byte_end":224,"line_start":14,"line_end":14,"column_start":1,"column_end":32}},{"value":"inline","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.2.0/src/lib.rs","byte_start":225,"byte_end":234,"line_start":15,"line_end":15,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":44},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.2.0/src/lib.rs","byte_start":513,"byte_end":517,"line_start":27,"line_end":27,"column_start":8,"column_end":12},"name":"zero","qualname":"::zero","value":"fn (dst: &mut [u8]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Zero all bytes in dst\n","sig":null,"attributes":[{"value":"/ Zero all bytes in dst","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.2.0/src/lib.rs","byte_start":470,"byte_end":495,"line_start":25,"line_end":25,"column_start":1,"column_end":26}},{"value":"inline","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.2.0/src/lib.rs","byte_start":496,"byte_end":505,"line_start":26,"line_end":26,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":45},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.2.0/src/lib.rs","byte_start":618,"byte_end":621,"line_start":33,"line_end":33,"column_start":8,"column_end":11},"name":"set","qualname":"::set","value":"fn (dst: &mut [u8], value: u8) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets all bytes in `dst` equal to `value`\n","sig":null,"attributes":[{"value":"/ Sets all bytes in `dst` equal to `value`","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.2.0/src/lib.rs","byte_start":556,"byte_end":600,"line_start":31,"line_end":31,"column_start":1,"column_end":45}},{"value":"inline","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.2.0/src/lib.rs","byte_start":601,"byte_end":610,"line_start":32,"line_end":32,"column_start":1,"column_end":10}}]}],"impls":[],"refs":[],"macro_refs":[],"relations":[]}