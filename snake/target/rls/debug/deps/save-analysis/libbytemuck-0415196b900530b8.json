{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0","program":"/Users/volchan/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","bytemuck","--edition=2018","/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=0415196b900530b8","-C","extra-filename=-0415196b900530b8","--out-dir","/Users/volchan/code/volchan/udemy/rust/snake/target/rls/debug/deps","-L","dependency=/Users/volchan/code/volchan/udemy/rust/snake/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/Users/volchan/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/volchan/code/volchan/udemy/rust/snake/target/rls/debug/deps/libbytemuck-0415196b900530b8.rmeta"},"prelude":{"crate_id":{"name":"bytemuck","disambiguator":[3931247574009320173,721811448800577028]},"crate_root":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src","external_crates":[{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[5902495869598878631,6483651549774204679]}},{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[12311488937759207811,9591695617658421232]}},{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[13642764918293034548,9567326413417207759]}}],"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":0,"byte_end":13436,"line_start":1,"line_end":433,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":1,"index":0},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":1894,"byte_end":1898,"line_start":51,"line_end":51,"column_start":11,"column_end":15},"alias_span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":1902,"byte_end":1908,"line_start":51,"line_end":51,"column_start":19,"column_end":25},"name":"__core","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":1619,"byte_end":1620,"line_start":45,"line_end":45,"column_start":20,"column_end":21},"alias_span":null,"name":"*","value":"Zeroable","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":1619,"byte_end":1620,"line_start":45,"line_end":45,"column_start":20,"column_end":21},"alias_span":null,"name":"*","value":"Pod","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":1619,"byte_end":1620,"line_start":45,"line_end":45,"column_start":20,"column_end":21},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":1619,"byte_end":1620,"line_start":45,"line_end":45,"column_start":20,"column_end":21},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":1619,"byte_end":1620,"line_start":45,"line_end":45,"column_start":20,"column_end":21},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":0,"byte_end":13436,"line_start":1,"line_end":433,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":183},{"krate":0,"index":185},{"krate":0,"index":187},{"krate":0,"index":189},{"krate":0,"index":191},{"krate":0,"index":557},{"krate":0,"index":575},{"krate":0,"index":573},{"krate":0,"index":572},{"krate":0,"index":569},{"krate":0,"index":570},{"krate":0,"index":566},{"krate":0,"index":567},{"krate":0,"index":193},{"krate":0,"index":196},{"krate":0,"index":199},{"krate":0,"index":202},{"krate":0,"index":205},{"krate":0,"index":208},{"krate":0,"index":211},{"krate":0,"index":214},{"krate":0,"index":217},{"krate":0,"index":220},{"krate":0,"index":223},{"krate":0,"index":226}],"decl_id":null,"docs":" This crate gives small utilities for casting between plain data types.","sig":null,"attributes":[{"value":"no_std","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":0,"byte_end":10,"line_start":1,"line_end":1,"column_start":1,"column_end":11}},{"value":"warn(missing_docs)","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":11,"byte_end":33,"line_start":2,"line_end":2,"column_start":1,"column_end":23}},{"value":"! This crate gives small utilities for casting between plain data types.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":35,"byte_end":109,"line_start":4,"line_end":4,"column_start":1,"column_end":75}},{"value":"!","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":110,"byte_end":113,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"! ## Basics","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":114,"byte_end":127,"line_start":6,"line_end":6,"column_start":1,"column_end":14}},{"value":"!","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":128,"byte_end":131,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"! Data comes in five basic forms in Rust, so we have five basic casting","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":132,"byte_end":205,"line_start":8,"line_end":8,"column_start":1,"column_end":74}},{"value":"! functions:","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":206,"byte_end":220,"line_start":9,"line_end":9,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":221,"byte_end":224,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"! * `T` uses [`cast`]","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":225,"byte_end":248,"line_start":11,"line_end":11,"column_start":1,"column_end":24}},{"value":"! * `&T` uses [`cast_ref`]","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":249,"byte_end":277,"line_start":12,"line_end":12,"column_start":1,"column_end":29}},{"value":"! * `&mut T` uses [`cast_mut`]","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":278,"byte_end":310,"line_start":13,"line_end":13,"column_start":1,"column_end":33}},{"value":"! * `&[T]` uses [`cast_slice`]","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":311,"byte_end":343,"line_start":14,"line_end":14,"column_start":1,"column_end":33}},{"value":"! * `&mut [T]` uses [`cast_slice_mut`]","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":344,"byte_end":384,"line_start":15,"line_end":15,"column_start":1,"column_end":41}},{"value":"!","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":385,"byte_end":388,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"! Some casts will never fail (eg: `cast::<u32, f32>` always works), other","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":389,"byte_end":464,"line_start":17,"line_end":17,"column_start":1,"column_end":76}},{"value":"! casts might fail (eg: `cast_ref::<[u8; 4], u32>` will fail if the reference","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":465,"byte_end":544,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"! isn't already aligned to 4). Each casting function has a \"try\" version which","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":545,"byte_end":625,"line_start":19,"line_end":19,"column_start":1,"column_end":81}},{"value":"! will return a `Result`, and the \"normal\" version which will simply panic on","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":626,"byte_end":705,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"! invalid input.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":706,"byte_end":724,"line_start":21,"line_end":21,"column_start":1,"column_end":19}},{"value":"!","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":725,"byte_end":728,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"! ## Using Your Own Types","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":729,"byte_end":756,"line_start":23,"line_end":23,"column_start":1,"column_end":28}},{"value":"!","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":757,"byte_end":760,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"! All the functions here are guarded by the [`Pod`] trait, which is a","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":761,"byte_end":832,"line_start":25,"line_end":25,"column_start":1,"column_end":72}},{"value":"! sub-trait of the [`Zeroable`] trait.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":833,"byte_end":873,"line_start":26,"line_end":26,"column_start":1,"column_end":41}},{"value":"!","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":874,"byte_end":877,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"! If you're very sure that your type is eligible, you can implement those","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":878,"byte_end":953,"line_start":28,"line_end":28,"column_start":1,"column_end":76}},{"value":"! traits for your type and then they'll have full casting support. However,","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":954,"byte_end":1031,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"! these traits are `unsafe`, and you should carefully read the requirements","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":1032,"byte_end":1109,"line_start":30,"line_end":30,"column_start":1,"column_end":78}},{"value":"! before adding the them to your own types.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":1110,"byte_end":1155,"line_start":31,"line_end":31,"column_start":1,"column_end":46}},{"value":"!","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":1156,"byte_end":1159,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"! ## Features","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":1160,"byte_end":1175,"line_start":33,"line_end":33,"column_start":1,"column_end":16}},{"value":"!","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":1176,"byte_end":1179,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"! * This crate is core only by default, but if you're using Rust 1.36 or later","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":1180,"byte_end":1260,"line_start":35,"line_end":35,"column_start":1,"column_end":81}},{"value":"!   you can enable the `extern_crate_alloc` cargo feature for some additional","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":1261,"byte_end":1340,"line_start":36,"line_end":36,"column_start":1,"column_end":80}},{"value":"!   methods related to `Box` and `Vec`. Note that the `docs.rs` documentation","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":1341,"byte_end":1420,"line_start":37,"line_end":37,"column_start":1,"column_end":80}},{"value":"!   is always built with `extern_crate_alloc` cargo feature enabled.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":1421,"byte_end":1491,"line_start":38,"line_end":38,"column_start":1,"column_end":71}}]},{"kind":"Trait","id":{"krate":0,"index":14},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/zeroable.rs","byte_start":13911,"byte_end":13919,"line_start":15,"line_end":15,"column_start":18,"column_end":26},"name":"Zeroable","qualname":"::zeroable::Zeroable","value":"Zeroable: Sized","parent":null,"children":[{"krate":0,"index":15}],"decl_id":null,"docs":" Trait for types that can be safely created with\n [`zeroed`](core::mem::zeroed).","sig":null,"attributes":[{"value":"/ Trait for types that can be safely created with","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/zeroable.rs","byte_start":13453,"byte_end":13504,"line_start":3,"line_end":3,"column_start":1,"column_end":52}},{"value":"/ [`zeroed`](core::mem::zeroed).","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/zeroable.rs","byte_start":13505,"byte_end":13539,"line_start":4,"line_end":4,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/zeroable.rs","byte_start":13540,"byte_end":13543,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ An all-zeroes value may or may not be the same value as the","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/zeroable.rs","byte_start":13544,"byte_end":13607,"line_start":6,"line_end":6,"column_start":1,"column_end":64}},{"value":"/ [Default](core::default::Default) value of the type.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/zeroable.rs","byte_start":13608,"byte_end":13664,"line_start":7,"line_end":7,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/zeroable.rs","byte_start":13665,"byte_end":13668,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ ## Safety","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/zeroable.rs","byte_start":13669,"byte_end":13682,"line_start":9,"line_end":9,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/zeroable.rs","byte_start":13683,"byte_end":13686,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ * Your type must be inhabited (eg: no","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/zeroable.rs","byte_start":13687,"byte_end":13728,"line_start":11,"line_end":11,"column_start":1,"column_end":42}},{"value":"/   [Infallible](core::convert::Infallible)).","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/zeroable.rs","byte_start":13729,"byte_end":13776,"line_start":12,"line_end":12,"column_start":1,"column_end":48}},{"value":"/ * Your type must be allowed to be an \"all zeroes\" bit pattern (eg: no","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/zeroable.rs","byte_start":13777,"byte_end":13850,"line_start":13,"line_end":13,"column_start":1,"column_end":74}},{"value":"/   [`NonNull<T>`](core::ptr::NonNull)).","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/zeroable.rs","byte_start":13851,"byte_end":13893,"line_start":14,"line_end":14,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":15},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/zeroable.rs","byte_start":14199,"byte_end":14205,"line_start":22,"line_end":22,"column_start":6,"column_end":12},"name":"zeroed","qualname":"::zeroable::Zeroable::zeroed","value":"fn () -> Self","parent":{"krate":0,"index":14},"children":[],"decl_id":null,"docs":" Calls [`zeroed`](core::mem::zeroed).","sig":null,"attributes":[{"value":"/ Calls [`zeroed`](core::mem::zeroed).","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/zeroable.rs","byte_start":13931,"byte_end":13971,"line_start":16,"line_end":16,"column_start":3,"column_end":43}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/zeroable.rs","byte_start":13974,"byte_end":13977,"line_start":17,"line_end":17,"column_start":3,"column_end":6}},{"value":"/ This is a trait method so that you can write `MyType::zeroed()` in your","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/zeroable.rs","byte_start":13980,"byte_end":14055,"line_start":18,"line_end":18,"column_start":3,"column_end":78}},{"value":"/ code. It is a contract of this trait that if you implement it on your type","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/zeroable.rs","byte_start":14058,"byte_end":14136,"line_start":19,"line_end":19,"column_start":3,"column_end":81}},{"value":"/ you **must not** override this method.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/zeroable.rs","byte_start":14139,"byte_end":14181,"line_start":20,"line_end":20,"column_start":3,"column_end":45}},{"value":"inline","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/zeroable.rs","byte_start":14184,"byte_end":14193,"line_start":21,"line_end":21,"column_start":3,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":110},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/pod.rs","byte_start":19054,"byte_end":19057,"line_start":29,"line_end":29,"column_start":18,"column_end":21},"name":"Pod","qualname":"::pod::Pod","value":"Pod: Zeroable + Copy + 'static","parent":null,"children":[],"decl_id":null,"docs":" Marker trait for \"plain old data\".","sig":null,"attributes":[{"value":"/ Marker trait for \"plain old data\".","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/pod.rs","byte_start":17758,"byte_end":17796,"line_start":3,"line_end":3,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/pod.rs","byte_start":17797,"byte_end":17800,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ The point of this trait is that once something is marked \"plain old data\"","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/pod.rs","byte_start":17801,"byte_end":17878,"line_start":5,"line_end":5,"column_start":1,"column_end":78}},{"value":"/ you can really go to town with the bit fiddling and bit casting. Therefore,","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/pod.rs","byte_start":17879,"byte_end":17958,"line_start":6,"line_end":6,"column_start":1,"column_end":80}},{"value":"/ it's a relatively strong claim to make about a type. Do not add this to your","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/pod.rs","byte_start":17959,"byte_end":18039,"line_start":7,"line_end":7,"column_start":1,"column_end":81}},{"value":"/ type casually.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/pod.rs","byte_start":18040,"byte_end":18058,"line_start":8,"line_end":8,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/pod.rs","byte_start":18059,"byte_end":18062,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ **Reminder:** The results of casting around bytes between data types are","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/pod.rs","byte_start":18063,"byte_end":18139,"line_start":10,"line_end":10,"column_start":1,"column_end":77}},{"value":"/ _endian dependant_. Little-endian machines are the most common, but","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/pod.rs","byte_start":18140,"byte_end":18211,"line_start":11,"line_end":11,"column_start":1,"column_end":72}},{"value":"/ big-endian machines do exist (and big-endian is also used for \"network","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/pod.rs","byte_start":18212,"byte_end":18286,"line_start":12,"line_end":12,"column_start":1,"column_end":75}},{"value":"/ order\" bytes).","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/pod.rs","byte_start":18287,"byte_end":18305,"line_start":13,"line_end":13,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/pod.rs","byte_start":18306,"byte_end":18309,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ ## Safety","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/pod.rs","byte_start":18310,"byte_end":18323,"line_start":15,"line_end":15,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/pod.rs","byte_start":18324,"byte_end":18327,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ * The type must be inhabited (eg: no","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/pod.rs","byte_start":18328,"byte_end":18368,"line_start":17,"line_end":17,"column_start":1,"column_end":41}},{"value":"/   [Infallible](core::convert::Infallible)).","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/pod.rs","byte_start":18369,"byte_end":18416,"line_start":18,"line_end":18,"column_start":1,"column_end":48}},{"value":"/ * The type must allow any bit pattern (eg: no `bool` or `char`, which have","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/pod.rs","byte_start":18417,"byte_end":18495,"line_start":19,"line_end":19,"column_start":1,"column_end":79}},{"value":"/   illegal bit patterns).","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/pod.rs","byte_start":18496,"byte_end":18524,"line_start":20,"line_end":20,"column_start":1,"column_end":29}},{"value":"/ * The type must not contain any padding bytes, either in the middle or on","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/pod.rs","byte_start":18525,"byte_end":18602,"line_start":21,"line_end":21,"column_start":1,"column_end":78}},{"value":"/   the end (eg: no `#[repr(C)] struct Foo(u8, u16)`, which has padding in the","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/pod.rs","byte_start":18603,"byte_end":18683,"line_start":22,"line_end":22,"column_start":1,"column_end":81}},{"value":"/   middle, and also no `#[repr(C)] struct Foo(u16, u8)`, which has padding on","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/pod.rs","byte_start":18684,"byte_end":18764,"line_start":23,"line_end":23,"column_start":1,"column_end":81}},{"value":"/   the end).","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/pod.rs","byte_start":18765,"byte_end":18780,"line_start":24,"line_end":24,"column_start":1,"column_end":16}},{"value":"/ * The type needs to have all fields also be `Pod`.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/pod.rs","byte_start":18781,"byte_end":18835,"line_start":25,"line_end":25,"column_start":1,"column_end":55}},{"value":"/ * The type needs to be `repr(C)` or `repr(transparent)`. In the case of","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/pod.rs","byte_start":18836,"byte_end":18911,"line_start":26,"line_end":26,"column_start":1,"column_end":76}},{"value":"/   `repr(C)`, the `packed` and `align` repr modifiers can be used as long as","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/pod.rs","byte_start":18912,"byte_end":18991,"line_start":27,"line_end":27,"column_start":1,"column_end":80}},{"value":"/   all other rules end up being followed.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/pod.rs","byte_start":18992,"byte_end":19036,"line_start":28,"line_end":28,"column_start":1,"column_end":45}}]},{"kind":"Trait","id":{"krate":0,"index":162},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":24373,"byte_end":24383,"line_start":79,"line_end":79,"column_start":18,"column_end":28},"name":"Contiguous","qualname":"::contiguous::Contiguous","value":"Contiguous: Copy + 'static","parent":null,"children":[{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167}],"decl_id":null,"docs":" A trait indicating that:","sig":null,"attributes":[{"value":"/ A trait indicating that:","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":21405,"byte_end":21433,"line_start":4,"line_end":4,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":21434,"byte_end":21437,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ 1. A type has an equivalent representation to some known integral type.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":21438,"byte_end":21513,"line_start":6,"line_end":6,"column_start":1,"column_end":76}},{"value":"/ 2. All instances of this type fall in a fixed range of values.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":21514,"byte_end":21580,"line_start":7,"line_end":7,"column_start":1,"column_end":67}},{"value":"/ 3. Within that range, there are no gaps.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":21581,"byte_end":21625,"line_start":8,"line_end":8,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":21626,"byte_end":21629,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This is generally useful for fieldless enums (aka \"c-style\" enums), however","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":21630,"byte_end":21709,"line_start":10,"line_end":10,"column_start":1,"column_end":80}},{"value":"/ it's important that it only be used for those with an explicit `#[repr]`, as","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":21710,"byte_end":21790,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ `#[repr(Rust)]` fieldess enums have an unspecified layout.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":21791,"byte_end":21853,"line_start":12,"line_end":12,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":21854,"byte_end":21857,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Additionally, you shouldn't assume that all implementations are enums. Any","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":21858,"byte_end":21936,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"/ type which meets the requirements above while following the rules under","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":21937,"byte_end":22012,"line_start":15,"line_end":15,"column_start":1,"column_end":76}},{"value":"/ \"Safety\" below is valid.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":22013,"byte_end":22041,"line_start":16,"line_end":16,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":22042,"byte_end":22045,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":22046,"byte_end":22059,"line_start":18,"line_end":18,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":22060,"byte_end":22063,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":22064,"byte_end":22071,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # use bytemuck::Contiguous;","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":22072,"byte_end":22103,"line_start":21,"line_end":21,"column_start":1,"column_end":32}},{"value":"/ #[repr(u8)]","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":22104,"byte_end":22119,"line_start":22,"line_end":22,"column_start":1,"column_end":16}},{"value":"/ #[derive(Debug, Copy, Clone, PartialEq)]","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":22120,"byte_end":22164,"line_start":23,"line_end":23,"column_start":1,"column_end":45}},{"value":"/ enum Foo {","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":22165,"byte_end":22179,"line_start":24,"line_end":24,"column_start":1,"column_end":15}},{"value":"/   A = 0,","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":22180,"byte_end":22192,"line_start":25,"line_end":25,"column_start":1,"column_end":13}},{"value":"/   B = 1,","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":22193,"byte_end":22205,"line_start":26,"line_end":26,"column_start":1,"column_end":13}},{"value":"/   C = 2,","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":22206,"byte_end":22218,"line_start":27,"line_end":27,"column_start":1,"column_end":13}},{"value":"/   D = 3,","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":22219,"byte_end":22231,"line_start":28,"line_end":28,"column_start":1,"column_end":13}},{"value":"/   E = 4,","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":22232,"byte_end":22244,"line_start":29,"line_end":29,"column_start":1,"column_end":13}},{"value":"/ }","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":22245,"byte_end":22250,"line_start":30,"line_end":30,"column_start":1,"column_end":6}},{"value":"/ unsafe impl Contiguous for Foo {","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":22251,"byte_end":22287,"line_start":31,"line_end":31,"column_start":1,"column_end":37}},{"value":"/   type Int = u8;","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":22288,"byte_end":22308,"line_start":32,"line_end":32,"column_start":1,"column_end":21}},{"value":"/   const MIN_VALUE: u8 = Foo::A as u8;","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":22309,"byte_end":22350,"line_start":33,"line_end":33,"column_start":1,"column_end":42}},{"value":"/   const MAX_VALUE: u8 = Foo::E as u8;","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":22351,"byte_end":22392,"line_start":34,"line_end":34,"column_start":1,"column_end":42}},{"value":"/ }","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":22393,"byte_end":22398,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/ assert_eq!(Foo::from_integer(3).unwrap(), Foo::D);","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":22399,"byte_end":22453,"line_start":36,"line_end":36,"column_start":1,"column_end":55}},{"value":"/ assert_eq!(Foo::from_integer(8), None);","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":22454,"byte_end":22497,"line_start":37,"line_end":37,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(Foo::C.into_integer(), 2);","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":22498,"byte_end":22539,"line_start":38,"line_end":38,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":22540,"byte_end":22547,"line_start":39,"line_end":39,"column_start":1,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":22548,"byte_end":22560,"line_start":40,"line_end":40,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":22561,"byte_end":22564,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ This is an unsafe trait, and incorrectly implementing it is undefined","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":22565,"byte_end":22638,"line_start":42,"line_end":42,"column_start":1,"column_end":74}},{"value":"/ behavior.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":22639,"byte_end":22652,"line_start":43,"line_end":43,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":22653,"byte_end":22656,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ Informally, by implementing it, you're asserting that `C` is identical to","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":22657,"byte_end":22734,"line_start":45,"line_end":45,"column_start":1,"column_end":78}},{"value":"/ the integral type `C::Int`, and that every `C` falls between `C::MIN_VALUE`","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":22735,"byte_end":22814,"line_start":46,"line_end":46,"column_start":1,"column_end":80}},{"value":"/ and `C::MAX_VALUE` exactly once, without any gaps.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":22815,"byte_end":22869,"line_start":47,"line_end":47,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":22870,"byte_end":22873,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ Precisely, the guarantees you must uphold when implementing `Contiguous` for","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":22874,"byte_end":22954,"line_start":49,"line_end":49,"column_start":1,"column_end":81}},{"value":"/ some type `C` are:","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":22955,"byte_end":22977,"line_start":50,"line_end":50,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":22978,"byte_end":22981,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ 1. The size of `C` and `C::Int` must be the same, and neither may be a ZST.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":22982,"byte_end":23062,"line_start":52,"line_end":52,"column_start":1,"column_end":80}},{"value":"/    (Note: alignment is explicitly allowed to differ)","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":23063,"byte_end":23119,"line_start":53,"line_end":53,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":23120,"byte_end":23123,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ 2. `C::Int` must be a primitive integer, and not a wrapper type. In the","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":23124,"byte_end":23199,"line_start":55,"line_end":55,"column_start":1,"column_end":76}},{"value":"/    future, this may be lifted to include cases where the behavior is","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":23200,"byte_end":23272,"line_start":56,"line_end":56,"column_start":1,"column_end":73}},{"value":"/    identical for a relevant set of traits (Ord, arithmetic, ...).","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":23273,"byte_end":23342,"line_start":57,"line_end":57,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":23343,"byte_end":23346,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ 3. All `C::Int`s which are in the *inclusive* range between `C::MIN_VALUE`","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":23347,"byte_end":23425,"line_start":59,"line_end":59,"column_start":1,"column_end":79}},{"value":"/    and `C::MAX_VALUE` are bitwise identical to unique valid instances of","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":23426,"byte_end":23502,"line_start":60,"line_end":60,"column_start":1,"column_end":77}},{"value":"/    `C`.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":23503,"byte_end":23514,"line_start":61,"line_end":61,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":23515,"byte_end":23518,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ 4. There exist no instances of `C` such that their bitpatterns, when","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":23519,"byte_end":23591,"line_start":63,"line_end":63,"column_start":1,"column_end":73}},{"value":"/    interpreted as instances of `C::Int`, fall outside of the `MAX_VALUE` /","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":23592,"byte_end":23670,"line_start":64,"line_end":64,"column_start":1,"column_end":79}},{"value":"/    `MIN_VALUE` range -- It is legal for unsafe code to assume that if it","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":23671,"byte_end":23747,"line_start":65,"line_end":65,"column_start":1,"column_end":77}},{"value":"/    gets a `C` that implements `Contiguous`, it is in the appropriate range.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":23748,"byte_end":23827,"line_start":66,"line_end":66,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":23828,"byte_end":23831,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ 5. Finally, you promise not to provide overridden implementations of","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":23832,"byte_end":23904,"line_start":68,"line_end":68,"column_start":1,"column_end":73}},{"value":"/    `Contiguous::from_integer` and `Contiguous::into_integer`.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":23905,"byte_end":23970,"line_start":69,"line_end":69,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":23971,"byte_end":23974,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ For clarity, the following rules could be derived from the above, but are","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":23975,"byte_end":24052,"line_start":71,"line_end":71,"column_start":1,"column_end":78}},{"value":"/ listed explicitly:","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":24053,"byte_end":24075,"line_start":72,"line_end":72,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":24076,"byte_end":24079,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ - `C::MAX_VALUE` must be greater or equal to `C::MIN_VALUE` (therefore, `C`","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":24080,"byte_end":24159,"line_start":74,"line_end":74,"column_start":1,"column_end":80}},{"value":"/   must be an inhabited type).","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":24160,"byte_end":24193,"line_start":75,"line_end":75,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":24194,"byte_end":24197,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ - There exist no two values between `MIN_VALUE` and `MAX_VALUE` such that","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":24198,"byte_end":24275,"line_start":77,"line_end":77,"column_start":1,"column_end":78}},{"value":"/   when interpreted as a `C` they are considered identical (by, say, match).","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":24276,"byte_end":24355,"line_start":78,"line_end":78,"column_start":1,"column_end":80}}]},{"kind":"Type","id":{"krate":0,"index":163},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":25208,"byte_end":25211,"line_start":97,"line_end":97,"column_start":8,"column_end":11},"name":"Int","qualname":"::contiguous::Contiguous::Int","value":"type Int: Copy + Ord;","parent":{"krate":0,"index":162},"children":[],"decl_id":null,"docs":" The primitive integer type with an identical representation to this\n type.","sig":null,"attributes":[{"value":"/ The primitive integer type with an identical representation to this","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":24404,"byte_end":24475,"line_start":80,"line_end":80,"column_start":3,"column_end":74}},{"value":"/ type.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":24478,"byte_end":24487,"line_start":81,"line_end":81,"column_start":3,"column_end":12}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":24490,"byte_end":24493,"line_start":82,"line_end":82,"column_start":3,"column_end":6}},{"value":"/ Contiguous is broadly intended for use with fieldless enums, and for","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":24496,"byte_end":24568,"line_start":83,"line_end":83,"column_start":3,"column_end":75}},{"value":"/ these the correct integer type is easy: The enum should have a","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":24571,"byte_end":24637,"line_start":84,"line_end":84,"column_start":3,"column_end":69}},{"value":"/ `#[repr(Int)]` or `#[repr(C)]` attribute, (if it does not, it is","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":24640,"byte_end":24708,"line_start":85,"line_end":85,"column_start":3,"column_end":71}},{"value":"/ *unsound* to implement `Contiguous`!).","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":24711,"byte_end":24753,"line_start":86,"line_end":86,"column_start":3,"column_end":45}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":24756,"byte_end":24759,"line_start":87,"line_end":87,"column_start":3,"column_end":6}},{"value":"/ - For `#[repr(Int)]`, use the listed `Int`. e.g. `#[repr(u8)]` should","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":24762,"byte_end":24835,"line_start":88,"line_end":88,"column_start":3,"column_end":76}},{"value":"/   use `type Int = u8`.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":24838,"byte_end":24864,"line_start":89,"line_end":89,"column_start":3,"column_end":29}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":24867,"byte_end":24870,"line_start":90,"line_end":90,"column_start":3,"column_end":6}},{"value":"/ - For `#[repr(C)]`, use whichever type the C compiler will use to","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":24873,"byte_end":24942,"line_start":91,"line_end":91,"column_start":3,"column_end":72}},{"value":"/   represent the given enum. This is usually `c_int` (from `std::os::raw`","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":24945,"byte_end":25021,"line_start":92,"line_end":92,"column_start":3,"column_end":79}},{"value":"/   or `libc`), but it's up to you to make the determination as the","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":25024,"byte_end":25093,"line_start":93,"line_end":93,"column_start":3,"column_end":72}},{"value":"/   implementer of the unsafe trait.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":25096,"byte_end":25134,"line_start":94,"line_end":94,"column_start":3,"column_end":41}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":25137,"byte_end":25140,"line_start":95,"line_end":95,"column_start":3,"column_end":6}},{"value":"/ For precise rules, see the list under \"Safety\" above.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":25143,"byte_end":25200,"line_start":96,"line_end":96,"column_start":3,"column_end":60}}]},{"kind":"Const","id":{"krate":0,"index":164},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":25302,"byte_end":25311,"line_start":100,"line_end":100,"column_start":9,"column_end":18},"name":"MAX_VALUE","qualname":"::contiguous::Contiguous::MAX_VALUE","value":"Self::Int","parent":{"krate":0,"index":162},"children":[],"decl_id":null,"docs":" The upper *inclusive* bound for valid instances of this type.\n","sig":null,"attributes":[{"value":"/ The upper *inclusive* bound for valid instances of this type.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":25228,"byte_end":25293,"line_start":99,"line_end":99,"column_start":3,"column_end":68}}]},{"kind":"Const","id":{"krate":0,"index":165},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":25401,"byte_end":25410,"line_start":103,"line_end":103,"column_start":9,"column_end":18},"name":"MIN_VALUE","qualname":"::contiguous::Contiguous::MIN_VALUE","value":"Self::Int","parent":{"krate":0,"index":162},"children":[],"decl_id":null,"docs":" The lower *inclusive* bound for valid instances of this type.\n","sig":null,"attributes":[{"value":"/ The lower *inclusive* bound for valid instances of this type.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":25327,"byte_end":25392,"line_start":102,"line_end":102,"column_start":3,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":26075,"byte_end":26087,"line_start":120,"line_end":120,"column_start":6,"column_end":18},"name":"from_integer","qualname":"::contiguous::Contiguous::from_integer","value":"fn (value: Self::Int) -> Option<Self>","parent":{"krate":0,"index":162},"children":[],"decl_id":null,"docs":" If `value` is within the range for valid instances of this type,\n returns `Some(converted_value)`, otherwise, returns `None`.","sig":null,"attributes":[{"value":"/ If `value` is within the range for valid instances of this type,","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":25426,"byte_end":25494,"line_start":105,"line_end":105,"column_start":3,"column_end":71}},{"value":"/ returns `Some(converted_value)`, otherwise, returns `None`.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":25497,"byte_end":25560,"line_start":106,"line_end":106,"column_start":3,"column_end":66}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":25563,"byte_end":25566,"line_start":107,"line_end":107,"column_start":3,"column_end":6}},{"value":"/ This is a trait method so that you can write `value.into_integer()` in","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":25569,"byte_end":25643,"line_start":108,"line_end":108,"column_start":3,"column_end":77}},{"value":"/ your code. It is a contract of this trait that if you implement","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":25646,"byte_end":25713,"line_start":109,"line_end":109,"column_start":3,"column_end":70}},{"value":"/ `Contiguous` on your type you **must not** override this method.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":25716,"byte_end":25784,"line_start":110,"line_end":110,"column_start":3,"column_end":71}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":25787,"byte_end":25790,"line_start":111,"line_end":111,"column_start":3,"column_end":6}},{"value":"/ # Panics","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":25793,"byte_end":25805,"line_start":112,"line_end":112,"column_start":3,"column_end":15}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":25808,"byte_end":25811,"line_start":113,"line_end":113,"column_start":3,"column_end":6}},{"value":"/ We will not panic for any correct implementation of `Contiguous`, but","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":25814,"byte_end":25887,"line_start":114,"line_end":114,"column_start":3,"column_end":76}},{"value":"/ *may* panic if we detect an incorrect one.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":25890,"byte_end":25936,"line_start":115,"line_end":115,"column_start":3,"column_end":49}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":25939,"byte_end":25942,"line_start":116,"line_end":116,"column_start":3,"column_end":6}},{"value":"/ This is undefined behavior regardless, so it could have been the nasal","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":25945,"byte_end":26019,"line_start":117,"line_end":117,"column_start":3,"column_end":77}},{"value":"/ demons at that point anyway ;).","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":26022,"byte_end":26057,"line_start":118,"line_end":118,"column_start":3,"column_end":38}},{"value":"inline","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":26060,"byte_end":26069,"line_start":119,"line_end":119,"column_start":3,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":27638,"byte_end":27650,"line_start":155,"line_end":155,"column_start":6,"column_end":18},"name":"into_integer","qualname":"::contiguous::Contiguous::into_integer","value":"fn (self) -> Self::Int","parent":{"krate":0,"index":162},"children":[],"decl_id":null,"docs":" Perform the conversion from `C` into the underlying integral type. This\n mostly exists otherwise generic code would need unsafe for the `value as\n integer`","sig":null,"attributes":[{"value":"/ Perform the conversion from `C` into the underlying integral type. This","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":26954,"byte_end":27029,"line_start":139,"line_end":139,"column_start":3,"column_end":78}},{"value":"/ mostly exists otherwise generic code would need unsafe for the `value as","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":27032,"byte_end":27108,"line_start":140,"line_end":140,"column_start":3,"column_end":79}},{"value":"/ integer`","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":27111,"byte_end":27123,"line_start":141,"line_end":141,"column_start":3,"column_end":15}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":27126,"byte_end":27129,"line_start":142,"line_end":142,"column_start":3,"column_end":6}},{"value":"/ This is a trait method so that you can write `value.into_integer()` in","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":27132,"byte_end":27206,"line_start":143,"line_end":143,"column_start":3,"column_end":77}},{"value":"/ your code. It is a contract of this trait that if you implement","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":27209,"byte_end":27276,"line_start":144,"line_end":144,"column_start":3,"column_end":70}},{"value":"/ `Contiguous` on your type you **must not** override this method.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":27279,"byte_end":27347,"line_start":145,"line_end":145,"column_start":3,"column_end":71}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":27350,"byte_end":27353,"line_start":146,"line_end":146,"column_start":3,"column_end":6}},{"value":"/ # Panics","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":27356,"byte_end":27368,"line_start":147,"line_end":147,"column_start":3,"column_end":15}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":27371,"byte_end":27374,"line_start":148,"line_end":148,"column_start":3,"column_end":6}},{"value":"/ We will not panic for any correct implementation of `Contiguous`, but","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":27377,"byte_end":27450,"line_start":149,"line_end":149,"column_start":3,"column_end":76}},{"value":"/ *may* panic if we detect an incorrect one.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":27453,"byte_end":27499,"line_start":150,"line_end":150,"column_start":3,"column_end":49}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":27502,"byte_end":27505,"line_start":151,"line_end":151,"column_start":3,"column_end":6}},{"value":"/ This is undefined behavior regardless, so it could have been the nasal","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":27508,"byte_end":27582,"line_start":152,"line_end":152,"column_start":3,"column_end":77}},{"value":"/ demons at that point anyway ;).","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":27585,"byte_end":27620,"line_start":153,"line_end":153,"column_start":3,"column_end":38}},{"value":"inline","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":27623,"byte_end":27632,"line_start":154,"line_end":154,"column_start":3,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":175},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/transparent.rs","byte_start":36268,"byte_end":36286,"line_start":83,"line_end":83,"column_start":18,"column_end":36},"name":"TransparentWrapper","qualname":"::transparent::TransparentWrapper","value":"TransparentWrapper<Wrapped: ?Sized>","parent":null,"children":[{"krate":0,"index":177},{"krate":0,"index":178}],"decl_id":null,"docs":" A trait which indicates that a type is a `repr(transparent)` wrapper around\n the `Wrapped` value.","sig":null,"attributes":[{"value":"/ A trait which indicates that a type is a `repr(transparent)` wrapper around","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/transparent.rs","byte_start":33463,"byte_end":33542,"line_start":3,"line_end":3,"column_start":1,"column_end":80}},{"value":"/ the `Wrapped` value.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/transparent.rs","byte_start":33543,"byte_end":33567,"line_start":4,"line_end":4,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/transparent.rs","byte_start":33568,"byte_end":33571,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This allows safely creating references to `T` from those to the `Wrapped`","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/transparent.rs","byte_start":33572,"byte_end":33649,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/ type, using the `wrap_ref` and `wrap_mut` functions.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/transparent.rs","byte_start":33650,"byte_end":33706,"line_start":7,"line_end":7,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/transparent.rs","byte_start":33707,"byte_end":33710,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/transparent.rs","byte_start":33711,"byte_end":33723,"line_start":9,"line_end":9,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/transparent.rs","byte_start":33724,"byte_end":33727,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ The safety contract of `TransparentWrapper` is relatively simple:","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/transparent.rs","byte_start":33728,"byte_end":33797,"line_start":11,"line_end":11,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/transparent.rs","byte_start":33798,"byte_end":33801,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ For a given `Wrapper` which implements `TransparentWrapper<Wrapped>`:","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/transparent.rs","byte_start":33802,"byte_end":33875,"line_start":13,"line_end":13,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/transparent.rs","byte_start":33876,"byte_end":33879,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ 1. Wrapper must be a `#[repr(transparent)]` wrapper around `Wrapped`. This","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/transparent.rs","byte_start":33880,"byte_end":33958,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/    either means that it must be a `#[repr(transparent)]` struct which","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/transparent.rs","byte_start":33959,"byte_end":34032,"line_start":16,"line_end":16,"column_start":1,"column_end":74}},{"value":"/    contains a either a field of type `Wrapped` (or a field of some other","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/transparent.rs","byte_start":34033,"byte_end":34109,"line_start":17,"line_end":17,"column_start":1,"column_end":77}},{"value":"/    transparent wrapper for `Wrapped`) as the only non-ZST field.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/transparent.rs","byte_start":34110,"byte_end":34178,"line_start":18,"line_end":18,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/transparent.rs","byte_start":34179,"byte_end":34182,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ 2. Any fields *other* than the `Wrapped` field must be trivially","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/transparent.rs","byte_start":34183,"byte_end":34251,"line_start":20,"line_end":20,"column_start":1,"column_end":69}},{"value":"/    constructable ZSTs, for example `PhantomData`, `PhantomPinned`, etc.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/transparent.rs","byte_start":34252,"byte_end":34327,"line_start":21,"line_end":21,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/transparent.rs","byte_start":34328,"byte_end":34331,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ 3. The `Wrapper` may not impose additional alignment requirements over","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/transparent.rs","byte_start":34332,"byte_end":34406,"line_start":23,"line_end":23,"column_start":1,"column_end":75}},{"value":"/    `Wrapped`.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/transparent.rs","byte_start":34407,"byte_end":34424,"line_start":24,"line_end":24,"column_start":1,"column_end":18}},{"value":"/     - Note: this is currently guaranteed by repr(transparent), but there","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/transparent.rs","byte_start":34425,"byte_end":34501,"line_start":25,"line_end":25,"column_start":1,"column_end":77}},{"value":"/       have been discussions of lifting it, so it's stated here explictly.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/transparent.rs","byte_start":34502,"byte_end":34579,"line_start":26,"line_end":26,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/transparent.rs","byte_start":34580,"byte_end":34583,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ 4. The `wrap_ref` and `wrap_mut` functions on `TransparentWrapper` may not","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/transparent.rs","byte_start":34584,"byte_end":34662,"line_start":28,"line_end":28,"column_start":1,"column_end":79}},{"value":"/    be overridden.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/transparent.rs","byte_start":34663,"byte_end":34684,"line_start":29,"line_end":29,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/transparent.rs","byte_start":34685,"byte_end":34688,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ ## Caveats","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/transparent.rs","byte_start":34689,"byte_end":34703,"line_start":31,"line_end":31,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/transparent.rs","byte_start":34704,"byte_end":34707,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ If the wrapper imposes additional constraints upon the wrapped type which","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/transparent.rs","byte_start":34708,"byte_end":34785,"line_start":33,"line_end":33,"column_start":1,"column_end":78}},{"value":"/ are required for safety, it's responsible for ensuring those still hold --","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/transparent.rs","byte_start":34786,"byte_end":34864,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"/ this generally requires preventing access to instances of the wrapped type,","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/transparent.rs","byte_start":34865,"byte_end":34944,"line_start":35,"line_end":35,"column_start":1,"column_end":80}},{"value":"/ as implementing `TransparentWrapper<U> for T` means anybody can call","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/transparent.rs","byte_start":34945,"byte_end":35017,"line_start":36,"line_end":36,"column_start":1,"column_end":73}},{"value":"/ `T::cast_ref(any_instance_of_u)`.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/transparent.rs","byte_start":35018,"byte_end":35055,"line_start":37,"line_end":37,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/transparent.rs","byte_start":35056,"byte_end":35059,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ For example, it would be invalid to implement TransparentWrapper for `str`","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/transparent.rs","byte_start":35060,"byte_end":35138,"line_start":39,"line_end":39,"column_start":1,"column_end":79}},{"value":"/ to implement `TransparentWrapper` around `[u8]` because of this.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/transparent.rs","byte_start":35139,"byte_end":35207,"line_start":40,"line_end":40,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/transparent.rs","byte_start":35208,"byte_end":35211,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/transparent.rs","byte_start":35212,"byte_end":35226,"line_start":42,"line_end":42,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/transparent.rs","byte_start":35227,"byte_end":35230,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ ## Basic","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/transparent.rs","byte_start":35231,"byte_end":35243,"line_start":44,"line_end":44,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/transparent.rs","byte_start":35244,"byte_end":35247,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/transparent.rs","byte_start":35248,"byte_end":35255,"line_start":46,"line_end":46,"column_start":1,"column_end":8}},{"value":"/ use bytemuck::TransparentWrapper;","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/transparent.rs","byte_start":35256,"byte_end":35293,"line_start":47,"line_end":47,"column_start":1,"column_end":38}},{"value":"/ # #[derive(Default)]","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/transparent.rs","byte_start":35294,"byte_end":35318,"line_start":48,"line_end":48,"column_start":1,"column_end":25}},{"value":"/ # struct SomeStruct(u32);","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/transparent.rs","byte_start":35319,"byte_end":35348,"line_start":49,"line_end":49,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/transparent.rs","byte_start":35349,"byte_end":35352,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ #[repr(transparent)]","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/transparent.rs","byte_start":35353,"byte_end":35377,"line_start":51,"line_end":51,"column_start":1,"column_end":25}},{"value":"/ struct MyWrapper(SomeStruct);","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/transparent.rs","byte_start":35378,"byte_end":35411,"line_start":52,"line_end":52,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/transparent.rs","byte_start":35412,"byte_end":35415,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ unsafe impl TransparentWrapper<SomeStruct> for MyWrapper {}","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/transparent.rs","byte_start":35416,"byte_end":35479,"line_start":54,"line_end":54,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/transparent.rs","byte_start":35480,"byte_end":35483,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ // interpret a reference to &SomeStruct as a &MyWrapper","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/transparent.rs","byte_start":35484,"byte_end":35543,"line_start":56,"line_end":56,"column_start":1,"column_end":60}},{"value":"/ let thing = SomeStruct::default();","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/transparent.rs","byte_start":35544,"byte_end":35582,"line_start":57,"line_end":57,"column_start":1,"column_end":39}},{"value":"/ let wrapped_ref: &MyWrapper = MyWrapper::wrap_ref(&thing);","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/transparent.rs","byte_start":35583,"byte_end":35645,"line_start":58,"line_end":58,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/transparent.rs","byte_start":35646,"byte_end":35649,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ // Works with &mut too.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/transparent.rs","byte_start":35650,"byte_end":35677,"line_start":60,"line_end":60,"column_start":1,"column_end":28}},{"value":"/ let mut mut_thing = SomeStruct::default();","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/transparent.rs","byte_start":35678,"byte_end":35724,"line_start":61,"line_end":61,"column_start":1,"column_end":47}},{"value":"/ let wrapped_mut: &mut MyWrapper = MyWrapper::wrap_mut(&mut mut_thing);","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/transparent.rs","byte_start":35725,"byte_end":35799,"line_start":62,"line_end":62,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/transparent.rs","byte_start":35800,"byte_end":35803,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ # let _ = (wrapped_ref, wrapped_mut); // silence warnings","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/transparent.rs","byte_start":35804,"byte_end":35865,"line_start":64,"line_end":64,"column_start":1,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/transparent.rs","byte_start":35866,"byte_end":35873,"line_start":65,"line_end":65,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/transparent.rs","byte_start":35874,"byte_end":35877,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ ## Use with dynamically sized types","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/transparent.rs","byte_start":35878,"byte_end":35917,"line_start":67,"line_end":67,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/transparent.rs","byte_start":35918,"byte_end":35921,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/transparent.rs","byte_start":35922,"byte_end":35929,"line_start":69,"line_end":69,"column_start":1,"column_end":8}},{"value":"/ use bytemuck::TransparentWrapper;","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/transparent.rs","byte_start":35930,"byte_end":35967,"line_start":70,"line_end":70,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/transparent.rs","byte_start":35968,"byte_end":35971,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ #[repr(transparent)]","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/transparent.rs","byte_start":35972,"byte_end":35996,"line_start":72,"line_end":72,"column_start":1,"column_end":25}},{"value":"/ struct Slice<T>([T]);","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/transparent.rs","byte_start":35997,"byte_end":36022,"line_start":73,"line_end":73,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/transparent.rs","byte_start":36023,"byte_end":36026,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ unsafe impl<T> TransparentWrapper<[T]> for Slice<T> {}","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/transparent.rs","byte_start":36027,"byte_end":36085,"line_start":75,"line_end":75,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/transparent.rs","byte_start":36086,"byte_end":36089,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ let s = Slice::wrap_ref(&[1u32, 2, 3]);","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/transparent.rs","byte_start":36090,"byte_end":36133,"line_start":77,"line_end":77,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(&s.0, &[1, 2, 3]);","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/transparent.rs","byte_start":36134,"byte_end":36167,"line_start":78,"line_end":78,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/transparent.rs","byte_start":36168,"byte_end":36171,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ let mut buf = [1, 2, 3u8];","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/transparent.rs","byte_start":36172,"byte_end":36202,"line_start":80,"line_end":80,"column_start":1,"column_end":31}},{"value":"/ let sm = Slice::wrap_mut(&mut buf);","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/transparent.rs","byte_start":36203,"byte_end":36242,"line_start":81,"line_end":81,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/transparent.rs","byte_start":36243,"byte_end":36250,"line_start":82,"line_end":82,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/transparent.rs","byte_start":36661,"byte_end":36669,"line_start":91,"line_end":91,"column_start":6,"column_end":14},"name":"wrap_ref","qualname":"::transparent::TransparentWrapper::wrap_ref","value":"fn (s: &Wrapped) -> &Self","parent":{"krate":0,"index":175},"children":[],"decl_id":null,"docs":" Convert a reference to a wrapped type into a reference to the wrapper.","sig":null,"attributes":[{"value":"/ Convert a reference to a wrapped type into a reference to the wrapper.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/transparent.rs","byte_start":36308,"byte_end":36382,"line_start":84,"line_end":84,"column_start":3,"column_end":77}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/transparent.rs","byte_start":36385,"byte_end":36388,"line_start":85,"line_end":85,"column_start":3,"column_end":6}},{"value":"/ This is a trait method so that you can write `MyType::wrap_ref(...)` in","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/transparent.rs","byte_start":36391,"byte_end":36466,"line_start":86,"line_end":86,"column_start":3,"column_end":78}},{"value":"/ your code. It is part of the safety contract for this trait that if you","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/transparent.rs","byte_start":36469,"byte_end":36544,"line_start":87,"line_end":87,"column_start":3,"column_end":78}},{"value":"/ implement `TransparentWrapper<_>` for your type you **must not** override","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/transparent.rs","byte_start":36547,"byte_end":36624,"line_start":88,"line_end":88,"column_start":3,"column_end":80}},{"value":"/ this method.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/transparent.rs","byte_start":36627,"byte_end":36643,"line_start":89,"line_end":89,"column_start":3,"column_end":19}},{"value":"inline","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/transparent.rs","byte_start":36646,"byte_end":36655,"line_start":90,"line_end":90,"column_start":3,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":178},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/transparent.rs","byte_start":37818,"byte_end":37826,"line_start":116,"line_end":116,"column_start":6,"column_end":14},"name":"wrap_mut","qualname":"::transparent::TransparentWrapper::wrap_mut","value":"fn (s: &mut Wrapped) -> &mut Self","parent":{"krate":0,"index":175},"children":[],"decl_id":null,"docs":" Convert a mut reference to a wrapped type into a mut reference to the\n wrapper.","sig":null,"attributes":[{"value":"/ Convert a mut reference to a wrapped type into a mut reference to the","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/transparent.rs","byte_start":37457,"byte_end":37530,"line_start":109,"line_end":109,"column_start":3,"column_end":76}},{"value":"/ wrapper.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/transparent.rs","byte_start":37533,"byte_end":37545,"line_start":110,"line_end":110,"column_start":3,"column_end":15}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/transparent.rs","byte_start":37548,"byte_end":37551,"line_start":111,"line_end":111,"column_start":3,"column_end":6}},{"value":"/ This is a trait method so that you can write `MyType::wrap_mut(...)` in","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/transparent.rs","byte_start":37554,"byte_end":37629,"line_start":112,"line_end":112,"column_start":3,"column_end":78}},{"value":"/ your code. It is part of the safety contract for this trait that if you implement","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/transparent.rs","byte_start":37632,"byte_end":37717,"line_start":113,"line_end":113,"column_start":3,"column_end":88}},{"value":"/ `TransparentWrapper<_>` for your type you **must not** override this method.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/transparent.rs","byte_start":37720,"byte_end":37800,"line_start":114,"line_end":114,"column_start":3,"column_end":83}},{"value":"inline","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/transparent.rs","byte_start":37803,"byte_end":37812,"line_start":115,"line_end":115,"column_start":3,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":181},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":3467,"byte_end":3475,"line_start":108,"line_end":108,"column_start":8,"column_end":16},"name":"bytes_of","qualname":"::bytes_of","value":"fn <T> (t: &T) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Re-interprets `&T` as `&[u8]`.","sig":null,"attributes":[{"value":"/ Re-interprets `&T` as `&[u8]`.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":3258,"byte_end":3292,"line_start":103,"line_end":103,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":3293,"byte_end":3296,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ Any ZST becomes an empty slice, and in that case the pointer value of that","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":3297,"byte_end":3375,"line_start":105,"line_end":105,"column_start":1,"column_end":79}},{"value":"/ empty slice might not match the pointer value of the input reference.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":3376,"byte_end":3449,"line_start":106,"line_end":106,"column_start":1,"column_end":74}},{"value":"inline","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":3450,"byte_end":3459,"line_start":107,"line_end":107,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":183},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":3832,"byte_end":3844,"line_start":120,"line_end":120,"column_start":8,"column_end":20},"name":"bytes_of_mut","qualname":"::bytes_of_mut","value":"fn <T> (t: &mut T) -> &mut [u8]","parent":null,"children":[],"decl_id":null,"docs":" Re-interprets `&mut T` as `&mut [u8]`.","sig":null,"attributes":[{"value":"/ Re-interprets `&mut T` as `&mut [u8]`.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":3615,"byte_end":3657,"line_start":115,"line_end":115,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":3658,"byte_end":3661,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ Any ZST becomes an empty slice, and in that case the pointer value of that","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":3662,"byte_end":3740,"line_start":117,"line_end":117,"column_start":1,"column_end":79}},{"value":"/ empty slice might not match the pointer value of the input reference.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":3741,"byte_end":3814,"line_start":118,"line_end":118,"column_start":1,"column_end":74}},{"value":"inline","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":3815,"byte_end":3824,"line_start":119,"line_end":119,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":185},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":4126,"byte_end":4136,"line_start":133,"line_end":133,"column_start":8,"column_end":18},"name":"from_bytes","qualname":"::from_bytes","value":"fn <T> (s: &[u8]) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Re-interprets `&[u8]` as `&T`.","sig":null,"attributes":[{"value":"/ Re-interprets `&[u8]` as `&T`.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":3996,"byte_end":4030,"line_start":127,"line_end":127,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":4031,"byte_end":4034,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ ## Panics","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":4035,"byte_end":4048,"line_start":129,"line_end":129,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":4049,"byte_end":4052,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ This is [`try_from_bytes`] but will panic on error.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":4053,"byte_end":4108,"line_start":131,"line_end":131,"column_start":1,"column_end":56}},{"value":"inline","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":4109,"byte_end":4118,"line_start":132,"line_end":132,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":187},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":4409,"byte_end":4423,"line_start":146,"line_end":146,"column_start":8,"column_end":22},"name":"from_bytes_mut","qualname":"::from_bytes_mut","value":"fn <T> (s: &mut [u8]) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Re-interprets `&mut [u8]` as `&mut T`.","sig":null,"attributes":[{"value":"/ Re-interprets `&mut [u8]` as `&mut T`.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":4267,"byte_end":4309,"line_start":140,"line_end":140,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":4310,"byte_end":4313,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ ## Panics","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":4314,"byte_end":4327,"line_start":142,"line_end":142,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":4328,"byte_end":4331,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ This is [`try_from_bytes_mut`] but will panic on error.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":4332,"byte_end":4391,"line_start":144,"line_end":144,"column_start":1,"column_end":60}},{"value":"inline","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":4392,"byte_end":4401,"line_start":145,"line_end":145,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":189},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":4764,"byte_end":4778,"line_start":160,"line_end":160,"column_start":8,"column_end":22},"name":"try_from_bytes","qualname":"::try_from_bytes","value":"fn <T> (s: &[u8]) -> Result<&T, PodCastError>","parent":null,"children":[],"decl_id":null,"docs":" Re-interprets `&[u8]` as `&T`.","sig":null,"attributes":[{"value":"/ Re-interprets `&[u8]` as `&T`.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":4570,"byte_end":4604,"line_start":153,"line_end":153,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":4605,"byte_end":4608,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ ## Failure","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":4609,"byte_end":4623,"line_start":155,"line_end":155,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":4624,"byte_end":4627,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ * If the slice isn't aligned for the new type","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":4628,"byte_end":4677,"line_start":157,"line_end":157,"column_start":1,"column_end":50}},{"value":"/ * If the slice's length isn’t exactly the size of the new type","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":4678,"byte_end":4746,"line_start":158,"line_end":158,"column_start":1,"column_end":67}},{"value":"inline","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":4747,"byte_end":4756,"line_start":159,"line_end":159,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":191},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":5262,"byte_end":5280,"line_start":177,"line_end":177,"column_start":8,"column_end":26},"name":"try_from_bytes_mut","qualname":"::try_from_bytes_mut","value":"fn <T> (s: &mut [u8]) -> Result<&mut T, PodCastError>","parent":null,"children":[],"decl_id":null,"docs":" Re-interprets `&mut [u8]` as `&mut T`.","sig":null,"attributes":[{"value":"/ Re-interprets `&mut [u8]` as `&mut T`.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":5060,"byte_end":5102,"line_start":170,"line_end":170,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":5103,"byte_end":5106,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ ## Failure","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":5107,"byte_end":5121,"line_start":172,"line_end":172,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":5122,"byte_end":5125,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ * If the slice isn't aligned for the new type","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":5126,"byte_end":5175,"line_start":174,"line_end":174,"column_start":1,"column_end":50}},{"value":"/ * If the slice's length isn’t exactly the size of the new type","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":5176,"byte_end":5244,"line_start":175,"line_end":175,"column_start":1,"column_end":67}},{"value":"inline","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":5245,"byte_end":5254,"line_start":176,"line_end":176,"column_start":1,"column_end":10}}]},{"kind":"TupleVariant","id":{"krate":0,"index":558},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":5849,"byte_end":5889,"line_start":194,"line_end":194,"column_start":3,"column_end":43},"name":"TargetAlignmentGreaterAndInputNotAligned","qualname":"::PodCastError::TargetAlignmentGreaterAndInputNotAligned","value":"PodCastError::TargetAlignmentGreaterAndInputNotAligned","parent":{"krate":0,"index":557},"children":[],"decl_id":null,"docs":" You tried to cast a slice to an element type with a higher alignment\n requirement but the slice wasn't aligned.\n","sig":null,"attributes":[{"value":"/ You tried to cast a slice to an element type with a higher alignment","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":5726,"byte_end":5798,"line_start":192,"line_end":192,"column_start":3,"column_end":75}},{"value":"/ requirement but the slice wasn't aligned.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":5801,"byte_end":5846,"line_start":193,"line_end":193,"column_start":3,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":560},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":6075,"byte_end":6099,"line_start":198,"line_end":198,"column_start":3,"column_end":27},"name":"OutputSliceWouldHaveSlop","qualname":"::PodCastError::OutputSliceWouldHaveSlop","value":"PodCastError::OutputSliceWouldHaveSlop","parent":{"krate":0,"index":557},"children":[],"decl_id":null,"docs":" If the element size changes then the output slice changes length\n accordingly. If the output slice wouldn't be a whole number of elements\n then the conversion fails.\n","sig":null,"attributes":[{"value":"/ If the element size changes then the output slice changes length","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":5893,"byte_end":5961,"line_start":195,"line_end":195,"column_start":3,"column_end":71}},{"value":"/ accordingly. If the output slice wouldn't be a whole number of elements","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":5964,"byte_end":6039,"line_start":196,"line_end":196,"column_start":3,"column_end":78}},{"value":"/ then the conversion fails.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":6042,"byte_end":6072,"line_start":197,"line_end":197,"column_start":3,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":562},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":6320,"byte_end":6332,"line_start":202,"line_end":202,"column_start":3,"column_end":15},"name":"SizeMismatch","qualname":"::PodCastError::SizeMismatch","value":"PodCastError::SizeMismatch","parent":{"krate":0,"index":557},"children":[],"decl_id":null,"docs":" When casting a slice you can't convert between ZST elements and non-ZST\n elements. When casting an individual `T`, `&T`, or `&mut T` value the\n source size and destination size must be an exact match.\n","sig":null,"attributes":[{"value":"/ When casting a slice you can't convert between ZST elements and non-ZST","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":6103,"byte_end":6178,"line_start":199,"line_end":199,"column_start":3,"column_end":78}},{"value":"/ elements. When casting an individual `T`, `&T`, or `&mut T` value the","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":6181,"byte_end":6254,"line_start":200,"line_end":200,"column_start":3,"column_end":76}},{"value":"/ source size and destination size must be an exact match.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":6257,"byte_end":6317,"line_start":201,"line_end":201,"column_start":3,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":564},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":6447,"byte_end":6464,"line_start":205,"line_end":205,"column_start":3,"column_end":20},"name":"AlignmentMismatch","qualname":"::PodCastError::AlignmentMismatch","value":"PodCastError::AlignmentMismatch","parent":{"krate":0,"index":557},"children":[],"decl_id":null,"docs":" For this type of cast the alignments must be exactly the same and they\n were not so now you're sad.\n","sig":null,"attributes":[{"value":"/ For this type of cast the alignments must be exactly the same and they","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":6336,"byte_end":6410,"line_start":203,"line_end":203,"column_start":3,"column_end":77}},{"value":"/ were not so now you're sad.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":6413,"byte_end":6444,"line_start":204,"line_end":204,"column_start":3,"column_end":34}}]},{"kind":"Enum","id":{"krate":0,"index":557},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":5709,"byte_end":5721,"line_start":191,"line_end":191,"column_start":10,"column_end":22},"name":"PodCastError","qualname":"::PodCastError","value":"PodCastError::{TargetAlignmentGreaterAndInputNotAligned, OutputSliceWouldHaveSlop, SizeMismatch, AlignmentMismatch}","parent":null,"children":[{"krate":0,"index":558},{"krate":0,"index":560},{"krate":0,"index":562},{"krate":0,"index":564}],"decl_id":null,"docs":" The things that can go wrong when casting between [`Pod`] data forms.\n","sig":null,"attributes":[{"value":"/ The things that can go wrong when casting between [`Pod`] data forms.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":5581,"byte_end":5654,"line_start":189,"line_end":189,"column_start":1,"column_end":74}}]},{"kind":"Function","id":{"krate":0,"index":193},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":6580,"byte_end":6584,"line_start":214,"line_end":214,"column_start":8,"column_end":12},"name":"cast","qualname":"::cast","value":"fn <A, B> (a: A) -> B","parent":null,"children":[],"decl_id":null,"docs":" Cast `T` into `U`","sig":null,"attributes":[{"value":"/ Cast `T` into `U`","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":6469,"byte_end":6490,"line_start":208,"line_end":208,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":6491,"byte_end":6494,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"/ ## Panics","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":6495,"byte_end":6508,"line_start":210,"line_end":210,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":6509,"byte_end":6512,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/ This is [`try_cast`] but will panic on error.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":6513,"byte_end":6562,"line_start":212,"line_end":212,"column_start":1,"column_end":50}},{"value":"inline","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":6563,"byte_end":6572,"line_start":213,"line_end":213,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":196},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":7052,"byte_end":7060,"line_start":235,"line_end":235,"column_start":8,"column_end":16},"name":"cast_mut","qualname":"::cast_mut","value":"fn <A, B> (a: &mut A) -> &mut B","parent":null,"children":[],"decl_id":null,"docs":" Cast `&mut T` into `&mut U`.","sig":null,"attributes":[{"value":"/ Cast `&mut T` into `&mut U`.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":6926,"byte_end":6958,"line_start":229,"line_end":229,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":6959,"byte_end":6962,"line_start":230,"line_end":230,"column_start":1,"column_end":4}},{"value":"/ ## Panics","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":6963,"byte_end":6976,"line_start":231,"line_end":231,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":6977,"byte_end":6980,"line_start":232,"line_end":232,"column_start":1,"column_end":4}},{"value":"/ This is [`try_cast_mut`] but will panic on error.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":6981,"byte_end":7034,"line_start":233,"line_end":233,"column_start":1,"column_end":54}},{"value":"inline","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":7035,"byte_end":7044,"line_start":234,"line_end":234,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":199},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":7580,"byte_end":7588,"line_start":256,"line_end":256,"column_start":8,"column_end":16},"name":"cast_ref","qualname":"::cast_ref","value":"fn <A, B> (a: &A) -> &B","parent":null,"children":[],"decl_id":null,"docs":" Cast `&T` into `&U`.","sig":null,"attributes":[{"value":"/ Cast `&T` into `&U`.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":7462,"byte_end":7486,"line_start":250,"line_end":250,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":7487,"byte_end":7490,"line_start":251,"line_end":251,"column_start":1,"column_end":4}},{"value":"/ ## Panics","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":7491,"byte_end":7504,"line_start":252,"line_end":252,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":7505,"byte_end":7508,"line_start":253,"line_end":253,"column_start":1,"column_end":4}},{"value":"/ This is [`try_cast_ref`] but will panic on error.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":7509,"byte_end":7562,"line_start":254,"line_end":254,"column_start":1,"column_end":54}},{"value":"inline","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":7563,"byte_end":7572,"line_start":255,"line_end":255,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":202},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":8106,"byte_end":8116,"line_start":277,"line_end":277,"column_start":8,"column_end":18},"name":"cast_slice","qualname":"::cast_slice","value":"fn <A, B> (a: &[A]) -> &[B]","parent":null,"children":[],"decl_id":null,"docs":" Cast `&[T]` into `&[U]`.","sig":null,"attributes":[{"value":"/ Cast `&[T]` into `&[U]`.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":7982,"byte_end":8010,"line_start":271,"line_end":271,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":8011,"byte_end":8014,"line_start":272,"line_end":272,"column_start":1,"column_end":4}},{"value":"/ ## Panics","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":8015,"byte_end":8028,"line_start":273,"line_end":273,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":8029,"byte_end":8032,"line_start":274,"line_end":274,"column_start":1,"column_end":4}},{"value":"/ This is [`try_cast_slice`] but will panic on error.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":8033,"byte_end":8088,"line_start":275,"line_end":275,"column_start":1,"column_end":56}},{"value":"inline","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":8089,"byte_end":8098,"line_start":276,"line_end":276,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":205},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":8392,"byte_end":8406,"line_start":290,"line_end":290,"column_start":8,"column_end":22},"name":"cast_slice_mut","qualname":"::cast_slice_mut","value":"fn <A, B> (a: &mut [A]) -> &mut [B]","parent":null,"children":[],"decl_id":null,"docs":" Cast `&mut [T]` into `&mut [U]`.","sig":null,"attributes":[{"value":"/ Cast `&mut [T]` into `&mut [U]`.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":8256,"byte_end":8292,"line_start":284,"line_end":284,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":8293,"byte_end":8296,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"/ ## Panics","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":8297,"byte_end":8310,"line_start":286,"line_end":286,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":8311,"byte_end":8314,"line_start":287,"line_end":287,"column_start":1,"column_end":4}},{"value":"/ This is [`try_cast_slice_mut`] but will panic on error.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":8315,"byte_end":8374,"line_start":288,"line_end":288,"column_start":1,"column_end":60}},{"value":"inline","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":8375,"byte_end":8384,"line_start":289,"line_end":289,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":208},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":8637,"byte_end":8649,"line_start":299,"line_end":299,"column_start":8,"column_end":20},"name":"pod_align_to","qualname":"::pod_align_to","value":"fn <T, U> (vals: &[T]) -> (&[T], &[U], &[T])","parent":null,"children":[],"decl_id":null,"docs":" As `align_to`, but safe because of the [`Pod`] bound.\n","sig":null,"attributes":[{"value":"/ As `align_to`, but safe because of the [`Pod`] bound.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":8562,"byte_end":8619,"line_start":297,"line_end":297,"column_start":1,"column_end":58}},{"value":"inline","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":8620,"byte_end":8629,"line_start":298,"line_end":298,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":211},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":8818,"byte_end":8834,"line_start":305,"line_end":305,"column_start":8,"column_end":24},"name":"pod_align_to_mut","qualname":"::pod_align_to_mut","value":"fn <T, U> (vals: &mut [T]) -> (&mut [T], &mut [U], &mut [T])","parent":null,"children":[],"decl_id":null,"docs":" As `align_to_mut`, but safe because of the [`Pod`] bound.\n","sig":null,"attributes":[{"value":"/ As `align_to_mut`, but safe because of the [`Pod`] bound.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":8739,"byte_end":8800,"line_start":303,"line_end":303,"column_start":1,"column_end":62}},{"value":"inline","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":8801,"byte_end":8810,"line_start":304,"line_end":304,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":214},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":9075,"byte_end":9083,"line_start":317,"line_end":317,"column_start":8,"column_end":16},"name":"try_cast","qualname":"::try_cast","value":"fn <A, B> (a: A) -> Result<B, PodCastError>","parent":null,"children":[],"decl_id":null,"docs":" Try to cast `T` into `U`.","sig":null,"attributes":[{"value":"/ Try to cast `T` into `U`.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":8949,"byte_end":8978,"line_start":311,"line_end":311,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":8979,"byte_end":8982,"line_start":312,"line_end":312,"column_start":1,"column_end":4}},{"value":"/ ## Failure","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":8983,"byte_end":8997,"line_start":313,"line_end":313,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":8998,"byte_end":9001,"line_start":314,"line_end":314,"column_start":1,"column_end":4}},{"value":"/ * If the types don't have the same size this fails.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":9002,"byte_end":9057,"line_start":315,"line_end":315,"column_start":1,"column_end":56}},{"value":"inline","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":9058,"byte_end":9067,"line_start":316,"line_end":316,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":217},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":9733,"byte_end":9745,"line_start":338,"line_end":338,"column_start":8,"column_end":20},"name":"try_cast_ref","qualname":"::try_cast_ref","value":"fn <A, B> (a: &A) -> Result<&B, PodCastError>","parent":null,"children":[],"decl_id":null,"docs":" Try to convert a `&T` into `&U`.","sig":null,"attributes":[{"value":"/ Try to convert a `&T` into `&U`.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":9540,"byte_end":9576,"line_start":331,"line_end":331,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":9577,"byte_end":9580,"line_start":332,"line_end":332,"column_start":1,"column_end":4}},{"value":"/ ## Failure","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":9581,"byte_end":9595,"line_start":333,"line_end":333,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":9596,"byte_end":9599,"line_start":334,"line_end":334,"column_start":1,"column_end":4}},{"value":"/ * If the reference isn't aligned in the new type","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":9600,"byte_end":9652,"line_start":335,"line_end":335,"column_start":1,"column_end":53}},{"value":"/ * If the source type and target type aren't the same size.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":9653,"byte_end":9715,"line_start":336,"line_end":336,"column_start":1,"column_end":63}},{"value":"inline","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":9716,"byte_end":9725,"line_start":337,"line_end":337,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":220},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":10323,"byte_end":10335,"line_start":356,"line_end":356,"column_start":8,"column_end":20},"name":"try_cast_mut","qualname":"::try_cast_mut","value":"fn <A, B> (a: &mut A) -> Result<&mut B, PodCastError>","parent":null,"children":[],"decl_id":null,"docs":" Try to convert a `&mut T` into `&mut U`.","sig":null,"attributes":[{"value":"/ Try to convert a `&mut T` into `&mut U`.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":10221,"byte_end":10265,"line_start":352,"line_end":352,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":10266,"byte_end":10269,"line_start":353,"line_end":353,"column_start":1,"column_end":4}},{"value":"/ As [`try_cast_ref`], but `mut`.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":10270,"byte_end":10305,"line_start":354,"line_end":354,"column_start":1,"column_end":36}},{"value":"inline","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":10306,"byte_end":10315,"line_start":355,"line_end":355,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":223},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":11581,"byte_end":11595,"line_start":387,"line_end":387,"column_start":8,"column_end":22},"name":"try_cast_slice","qualname":"::try_cast_slice","value":"fn <A, B> (a: &[A]) -> Result<&[B], PodCastError>","parent":null,"children":[],"decl_id":null,"docs":" Try to convert `&[T]` into `&[U]` (possibly with a change in length).","sig":null,"attributes":[{"value":"/ Try to convert `&[T]` into `&[U]` (possibly with a change in length).","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":10817,"byte_end":10890,"line_start":370,"line_end":370,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":10891,"byte_end":10894,"line_start":371,"line_end":371,"column_start":1,"column_end":4}},{"value":"/ * `input.as_ptr() as usize == output.as_ptr() as usize`","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":10895,"byte_end":10954,"line_start":372,"line_end":372,"column_start":1,"column_end":60}},{"value":"/ * `input.len() * size_of::<A>() == output.len() * size_of::<B>()`","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":10955,"byte_end":11024,"line_start":373,"line_end":373,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":11025,"byte_end":11028,"line_start":374,"line_end":374,"column_start":1,"column_end":4}},{"value":"/ ## Failure","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":11029,"byte_end":11043,"line_start":375,"line_end":375,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":11044,"byte_end":11047,"line_start":376,"line_end":376,"column_start":1,"column_end":4}},{"value":"/ * If the target type has a greater alignment requirement and the input slice","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":11048,"byte_end":11128,"line_start":377,"line_end":377,"column_start":1,"column_end":81}},{"value":"/   isn't aligned.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":11129,"byte_end":11149,"line_start":378,"line_end":378,"column_start":1,"column_end":21}},{"value":"/ * If the target element type is a different size from the current element","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":11150,"byte_end":11227,"line_start":379,"line_end":379,"column_start":1,"column_end":78}},{"value":"/   type, and the output slice wouldn't be a whole number of elements when","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":11228,"byte_end":11304,"line_start":380,"line_end":380,"column_start":1,"column_end":77}},{"value":"/   accounting for the size change (eg: 3 `u16` values is 1.5 `u32` values, so","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":11305,"byte_end":11385,"line_start":381,"line_end":381,"column_start":1,"column_end":81}},{"value":"/   that's a failure).","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":11386,"byte_end":11410,"line_start":382,"line_end":382,"column_start":1,"column_end":25}},{"value":"/ * Similarly, you can't convert between a","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":11411,"byte_end":11455,"line_start":383,"line_end":383,"column_start":1,"column_end":45}},{"value":"/   [ZST](https://doc.rust-lang.org/nomicon/exotic-sizes.html#zero-sized-types-zsts)","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":11456,"byte_end":11542,"line_start":384,"line_end":384,"column_start":1,"column_end":87}},{"value":"/   and a non-ZST.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":11543,"byte_end":11563,"line_start":385,"line_end":385,"column_start":1,"column_end":21}},{"value":"inline","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":11564,"byte_end":11573,"line_start":386,"line_end":386,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":226},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":12554,"byte_end":12572,"line_start":410,"line_end":410,"column_start":8,"column_end":26},"name":"try_cast_slice_mut","qualname":"::try_cast_slice_mut","value":"fn <A, B> (a: &mut [A]) -> Result<&mut [B], PodCastError>","parent":null,"children":[],"decl_id":null,"docs":" Try to convert `&mut [T]` into `&mut [U]` (possibly with a change in length).","sig":null,"attributes":[{"value":"/ Try to convert `&mut [T]` into `&mut [U]` (possibly with a change in length).","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":12412,"byte_end":12493,"line_start":406,"line_end":406,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":12494,"byte_end":12497,"line_start":407,"line_end":407,"column_start":1,"column_end":4}},{"value":"/ As [`try_cast_slice`], but `&mut`.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":12498,"byte_end":12536,"line_start":408,"line_end":408,"column_start":1,"column_end":39}},{"value":"inline","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/lib.rs","byte_start":12537,"byte_end":12546,"line_start":409,"line_end":409,"column_start":1,"column_end":10}}]}],"impls":[{"id":16,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/zeroable.rs","byte_start":14846,"byte_end":14854,"line_start":43,"line_end":43,"column_start":39,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/zeroable.rs","byte_start":14887,"byte_end":14893,"line_start":45,"line_end":45,"column_start":26,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/zeroable.rs","byte_start":14933,"byte_end":14939,"line_start":46,"line_end":46,"column_start":26,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/zeroable.rs","byte_start":14980,"byte_end":14986,"line_start":47,"line_end":47,"column_start":26,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/zeroable.rs","byte_start":15027,"byte_end":15033,"line_start":48,"line_end":48,"column_start":26,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/zeroable.rs","byte_start":15074,"byte_end":15080,"line_start":49,"line_end":49,"column_start":26,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/zeroable.rs","byte_start":15122,"byte_end":15128,"line_start":50,"line_end":50,"column_start":26,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/zeroable.rs","byte_start":15171,"byte_end":15177,"line_start":51,"line_end":51,"column_start":26,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/zeroable.rs","byte_start":15217,"byte_end":15223,"line_start":52,"line_end":52,"column_start":26,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/zeroable.rs","byte_start":15264,"byte_end":15270,"line_start":53,"line_end":53,"column_start":26,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/zeroable.rs","byte_start":15311,"byte_end":15317,"line_start":54,"line_end":54,"column_start":26,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/zeroable.rs","byte_start":15358,"byte_end":15364,"line_start":55,"line_end":55,"column_start":26,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/zeroable.rs","byte_start":15406,"byte_end":15412,"line_start":56,"line_end":56,"column_start":26,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/zeroable.rs","byte_start":15537,"byte_end":15543,"line_start":60,"line_end":60,"column_start":29,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/zeroable.rs","byte_start":15597,"byte_end":15608,"line_start":61,"line_end":61,"column_start":39,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/zeroable.rs","byte_start":15653,"byte_end":15665,"line_start":62,"line_end":62,"column_start":39,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/zeroable.rs","byte_start":17358,"byte_end":17365,"line_start":132,"line_end":132,"column_start":34,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/zeroable.rs","byte_start":17433,"byte_end":17439,"line_start":134,"line_end":134,"column_start":34,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/zeroable.rs","byte_start":17507,"byte_end":17514,"line_start":136,"line_end":136,"column_start":34,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/zeroable.rs","byte_start":17582,"byte_end":17589,"line_start":138,"line_end":138,"column_start":34,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/zeroable.rs","byte_start":17657,"byte_end":17663,"line_start":140,"line_end":140,"column_start":34,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/zeroable.rs","byte_start":17731,"byte_end":17738,"line_start":142,"line_end":142,"column_start":34,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/pod.rs","byte_start":19525,"byte_end":19533,"line_start":46,"line_end":46,"column_start":29,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/pod.rs","byte_start":19561,"byte_end":19567,"line_start":48,"line_end":48,"column_start":21,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/pod.rs","byte_start":19602,"byte_end":19608,"line_start":49,"line_end":49,"column_start":21,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/pod.rs","byte_start":19644,"byte_end":19650,"line_start":50,"line_end":50,"column_start":21,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/pod.rs","byte_start":19686,"byte_end":19692,"line_start":51,"line_end":51,"column_start":21,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/pod.rs","byte_start":19728,"byte_end":19734,"line_start":52,"line_end":52,"column_start":21,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/pod.rs","byte_start":19771,"byte_end":19777,"line_start":53,"line_end":53,"column_start":21,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/pod.rs","byte_start":19815,"byte_end":19821,"line_start":54,"line_end":54,"column_start":21,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/pod.rs","byte_start":19856,"byte_end":19862,"line_start":55,"line_end":55,"column_start":21,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/pod.rs","byte_start":19898,"byte_end":19904,"line_start":56,"line_end":56,"column_start":21,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/pod.rs","byte_start":19940,"byte_end":19946,"line_start":57,"line_end":57,"column_start":21,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/pod.rs","byte_start":19982,"byte_end":19988,"line_start":58,"line_end":58,"column_start":21,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/pod.rs","byte_start":20025,"byte_end":20031,"line_start":59,"line_end":59,"column_start":21,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/pod.rs","byte_start":20168,"byte_end":20174,"line_start":63,"line_end":63,"column_start":33,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/pod.rs","byte_start":20218,"byte_end":20229,"line_start":64,"line_end":64,"column_start":29,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/pod.rs","byte_start":20264,"byte_end":20276,"line_start":65,"line_end":65,"column_start":29,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/pod.rs","byte_start":20988,"byte_end":20995,"line_start":89,"line_end":89,"column_start":29,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/pod.rs","byte_start":21058,"byte_end":21064,"line_start":91,"line_end":91,"column_start":29,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/pod.rs","byte_start":21127,"byte_end":21134,"line_start":93,"line_end":93,"column_start":29,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/pod.rs","byte_start":21197,"byte_end":21204,"line_start":95,"line_end":95,"column_start":29,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/pod.rs","byte_start":21267,"byte_end":21273,"line_start":97,"line_end":97,"column_start":29,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/pod.rs","byte_start":21336,"byte_end":21343,"line_start":99,"line_end":99,"column_start":29,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/zeroable.rs","byte_start":13921,"byte_end":13926,"line_start":15,"line_end":15,"column_start":28,"column_end":33},"kind":"SuperTrait","from":{"krate":1,"index":1909},"to":{"krate":0,"index":14}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/zeroable.rs","byte_start":14846,"byte_end":14854,"line_start":43,"line_end":43,"column_start":39,"column_end":47},"kind":{"Impl":{"id":16}},"from":{"krate":1,"index":11338},"to":{"krate":0,"index":14}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/zeroable.rs","byte_start":14887,"byte_end":14893,"line_start":45,"line_end":45,"column_start":26,"column_end":32},"kind":{"Impl":{"id":17}},"from":{"krate":1,"index":29547},"to":{"krate":0,"index":14}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/zeroable.rs","byte_start":14933,"byte_end":14939,"line_start":46,"line_end":46,"column_start":26,"column_end":32},"kind":{"Impl":{"id":18}},"from":{"krate":1,"index":29547},"to":{"krate":0,"index":14}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/zeroable.rs","byte_start":14980,"byte_end":14986,"line_start":47,"line_end":47,"column_start":26,"column_end":32},"kind":{"Impl":{"id":19}},"from":{"krate":1,"index":29547},"to":{"krate":0,"index":14}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/zeroable.rs","byte_start":15027,"byte_end":15033,"line_start":48,"line_end":48,"column_start":26,"column_end":32},"kind":{"Impl":{"id":20}},"from":{"krate":1,"index":29547},"to":{"krate":0,"index":14}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/zeroable.rs","byte_start":15074,"byte_end":15080,"line_start":49,"line_end":49,"column_start":26,"column_end":32},"kind":{"Impl":{"id":21}},"from":{"krate":1,"index":29547},"to":{"krate":0,"index":14}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/zeroable.rs","byte_start":15122,"byte_end":15128,"line_start":50,"line_end":50,"column_start":26,"column_end":32},"kind":{"Impl":{"id":22}},"from":{"krate":1,"index":29547},"to":{"krate":0,"index":14}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/zeroable.rs","byte_start":15171,"byte_end":15177,"line_start":51,"line_end":51,"column_start":26,"column_end":32},"kind":{"Impl":{"id":23}},"from":{"krate":1,"index":29547},"to":{"krate":0,"index":14}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/zeroable.rs","byte_start":15217,"byte_end":15223,"line_start":52,"line_end":52,"column_start":26,"column_end":32},"kind":{"Impl":{"id":24}},"from":{"krate":1,"index":29547},"to":{"krate":0,"index":14}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/zeroable.rs","byte_start":15264,"byte_end":15270,"line_start":53,"line_end":53,"column_start":26,"column_end":32},"kind":{"Impl":{"id":25}},"from":{"krate":1,"index":29547},"to":{"krate":0,"index":14}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/zeroable.rs","byte_start":15311,"byte_end":15317,"line_start":54,"line_end":54,"column_start":26,"column_end":32},"kind":{"Impl":{"id":26}},"from":{"krate":1,"index":29547},"to":{"krate":0,"index":14}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/zeroable.rs","byte_start":15358,"byte_end":15364,"line_start":55,"line_end":55,"column_start":26,"column_end":32},"kind":{"Impl":{"id":27}},"from":{"krate":1,"index":29547},"to":{"krate":0,"index":14}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/zeroable.rs","byte_start":15406,"byte_end":15412,"line_start":56,"line_end":56,"column_start":26,"column_end":32},"kind":{"Impl":{"id":28}},"from":{"krate":1,"index":29547},"to":{"krate":0,"index":14}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/zeroable.rs","byte_start":15537,"byte_end":15543,"line_start":60,"line_end":60,"column_start":29,"column_end":35},"kind":{"Impl":{"id":29}},"from":{"krate":1,"index":29547},"to":{"krate":0,"index":14}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/zeroable.rs","byte_start":15597,"byte_end":15608,"line_start":61,"line_end":61,"column_start":39,"column_end":50},"kind":{"Impl":{"id":30}},"from":{"krate":1,"index":1922},"to":{"krate":0,"index":14}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/zeroable.rs","byte_start":15653,"byte_end":15665,"line_start":62,"line_end":62,"column_start":39,"column_end":51},"kind":{"Impl":{"id":31}},"from":{"krate":1,"index":15386},"to":{"krate":0,"index":14}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/zeroable.rs","byte_start":17358,"byte_end":17365,"line_start":132,"line_end":132,"column_start":34,"column_end":41},"kind":{"Impl":{"id":32}},"from":{"krate":1,"index":34320},"to":{"krate":0,"index":14}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/zeroable.rs","byte_start":17433,"byte_end":17439,"line_start":134,"line_end":134,"column_start":34,"column_end":40},"kind":{"Impl":{"id":33}},"from":{"krate":1,"index":34329},"to":{"krate":0,"index":14}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/zeroable.rs","byte_start":17507,"byte_end":17514,"line_start":136,"line_end":136,"column_start":34,"column_end":41},"kind":{"Impl":{"id":34}},"from":{"krate":1,"index":34340},"to":{"krate":0,"index":14}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/zeroable.rs","byte_start":17582,"byte_end":17589,"line_start":138,"line_end":138,"column_start":34,"column_end":41},"kind":{"Impl":{"id":35}},"from":{"krate":1,"index":34349},"to":{"krate":0,"index":14}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/zeroable.rs","byte_start":17657,"byte_end":17663,"line_start":140,"line_end":140,"column_start":34,"column_end":40},"kind":{"Impl":{"id":36}},"from":{"krate":1,"index":34360},"to":{"krate":0,"index":14}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/zeroable.rs","byte_start":17731,"byte_end":17738,"line_start":142,"line_end":142,"column_start":34,"column_end":41},"kind":{"Impl":{"id":37}},"from":{"krate":1,"index":34375},"to":{"krate":0,"index":14}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/pod.rs","byte_start":19059,"byte_end":19067,"line_start":29,"line_end":29,"column_start":23,"column_end":31},"kind":"SuperTrait","from":{"krate":0,"index":14},"to":{"krate":0,"index":110}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/pod.rs","byte_start":19070,"byte_end":19074,"line_start":29,"line_end":29,"column_start":34,"column_end":38},"kind":"SuperTrait","from":{"krate":1,"index":1914},"to":{"krate":0,"index":110}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/pod.rs","byte_start":19525,"byte_end":19533,"line_start":46,"line_end":46,"column_start":29,"column_end":37},"kind":{"Impl":{"id":52}},"from":{"krate":1,"index":11338},"to":{"krate":0,"index":110}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/pod.rs","byte_start":19561,"byte_end":19567,"line_start":48,"line_end":48,"column_start":21,"column_end":27},"kind":{"Impl":{"id":53}},"from":{"krate":1,"index":29547},"to":{"krate":0,"index":110}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/pod.rs","byte_start":19602,"byte_end":19608,"line_start":49,"line_end":49,"column_start":21,"column_end":27},"kind":{"Impl":{"id":54}},"from":{"krate":1,"index":29547},"to":{"krate":0,"index":110}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/pod.rs","byte_start":19644,"byte_end":19650,"line_start":50,"line_end":50,"column_start":21,"column_end":27},"kind":{"Impl":{"id":55}},"from":{"krate":1,"index":29547},"to":{"krate":0,"index":110}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/pod.rs","byte_start":19686,"byte_end":19692,"line_start":51,"line_end":51,"column_start":21,"column_end":27},"kind":{"Impl":{"id":56}},"from":{"krate":1,"index":29547},"to":{"krate":0,"index":110}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/pod.rs","byte_start":19728,"byte_end":19734,"line_start":52,"line_end":52,"column_start":21,"column_end":27},"kind":{"Impl":{"id":57}},"from":{"krate":1,"index":29547},"to":{"krate":0,"index":110}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/pod.rs","byte_start":19771,"byte_end":19777,"line_start":53,"line_end":53,"column_start":21,"column_end":27},"kind":{"Impl":{"id":58}},"from":{"krate":1,"index":29547},"to":{"krate":0,"index":110}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/pod.rs","byte_start":19815,"byte_end":19821,"line_start":54,"line_end":54,"column_start":21,"column_end":27},"kind":{"Impl":{"id":59}},"from":{"krate":1,"index":29547},"to":{"krate":0,"index":110}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/pod.rs","byte_start":19856,"byte_end":19862,"line_start":55,"line_end":55,"column_start":21,"column_end":27},"kind":{"Impl":{"id":60}},"from":{"krate":1,"index":29547},"to":{"krate":0,"index":110}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/pod.rs","byte_start":19898,"byte_end":19904,"line_start":56,"line_end":56,"column_start":21,"column_end":27},"kind":{"Impl":{"id":61}},"from":{"krate":1,"index":29547},"to":{"krate":0,"index":110}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/pod.rs","byte_start":19940,"byte_end":19946,"line_start":57,"line_end":57,"column_start":21,"column_end":27},"kind":{"Impl":{"id":62}},"from":{"krate":1,"index":29547},"to":{"krate":0,"index":110}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/pod.rs","byte_start":19982,"byte_end":19988,"line_start":58,"line_end":58,"column_start":21,"column_end":27},"kind":{"Impl":{"id":63}},"from":{"krate":1,"index":29547},"to":{"krate":0,"index":110}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/pod.rs","byte_start":20025,"byte_end":20031,"line_start":59,"line_end":59,"column_start":21,"column_end":27},"kind":{"Impl":{"id":64}},"from":{"krate":1,"index":29547},"to":{"krate":0,"index":110}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/pod.rs","byte_start":20168,"byte_end":20174,"line_start":63,"line_end":63,"column_start":33,"column_end":39},"kind":{"Impl":{"id":65}},"from":{"krate":1,"index":29547},"to":{"krate":0,"index":110}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/pod.rs","byte_start":20218,"byte_end":20229,"line_start":64,"line_end":64,"column_start":29,"column_end":40},"kind":{"Impl":{"id":66}},"from":{"krate":1,"index":1922},"to":{"krate":0,"index":110}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/pod.rs","byte_start":20264,"byte_end":20276,"line_start":65,"line_end":65,"column_start":29,"column_end":41},"kind":{"Impl":{"id":67}},"from":{"krate":1,"index":15386},"to":{"krate":0,"index":110}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/pod.rs","byte_start":20988,"byte_end":20995,"line_start":89,"line_end":89,"column_start":29,"column_end":36},"kind":{"Impl":{"id":68}},"from":{"krate":1,"index":34320},"to":{"krate":0,"index":110}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/pod.rs","byte_start":21058,"byte_end":21064,"line_start":91,"line_end":91,"column_start":29,"column_end":35},"kind":{"Impl":{"id":69}},"from":{"krate":1,"index":34329},"to":{"krate":0,"index":110}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/pod.rs","byte_start":21127,"byte_end":21134,"line_start":93,"line_end":93,"column_start":29,"column_end":36},"kind":{"Impl":{"id":70}},"from":{"krate":1,"index":34340},"to":{"krate":0,"index":110}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/pod.rs","byte_start":21197,"byte_end":21204,"line_start":95,"line_end":95,"column_start":29,"column_end":36},"kind":{"Impl":{"id":71}},"from":{"krate":1,"index":34349},"to":{"krate":0,"index":110}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/pod.rs","byte_start":21267,"byte_end":21273,"line_start":97,"line_end":97,"column_start":29,"column_end":35},"kind":{"Impl":{"id":72}},"from":{"krate":1,"index":34360},"to":{"krate":0,"index":110}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/pod.rs","byte_start":21336,"byte_end":21343,"line_start":99,"line_end":99,"column_start":29,"column_end":36},"kind":{"Impl":{"id":73}},"from":{"krate":1,"index":34375},"to":{"krate":0,"index":110}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.2.0/src/contiguous.rs","byte_start":24385,"byte_end":24389,"line_start":79,"line_end":79,"column_start":30,"column_end":34},"kind":"SuperTrait","from":{"krate":1,"index":1914},"to":{"krate":0,"index":162}}]}