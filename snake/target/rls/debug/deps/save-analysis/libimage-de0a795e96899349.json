{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7","program":"/Users/volchan/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","image","--edition=2018","/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"bmp\"","--cfg","feature=\"dds\"","--cfg","feature=\"default\"","--cfg","feature=\"dxt\"","--cfg","feature=\"farbfeld\"","--cfg","feature=\"gif\"","--cfg","feature=\"hdr\"","--cfg","feature=\"ico\"","--cfg","feature=\"jpeg\"","--cfg","feature=\"jpeg_rayon\"","--cfg","feature=\"png\"","--cfg","feature=\"pnm\"","--cfg","feature=\"scoped_threadpool\"","--cfg","feature=\"tga\"","--cfg","feature=\"tiff\"","--cfg","feature=\"webp\"","-C","metadata=de0a795e96899349","-C","extra-filename=-de0a795e96899349","--out-dir","/Users/volchan/code/volchan/udemy/rust/snake/target/rls/debug/deps","-L","dependency=/Users/volchan/code/volchan/udemy/rust/snake/target/rls/debug/deps","--extern","bytemuck=/Users/volchan/code/volchan/udemy/rust/snake/target/rls/debug/deps/libbytemuck-0415196b900530b8.rmeta","--extern","byteorder=/Users/volchan/code/volchan/udemy/rust/snake/target/rls/debug/deps/libbyteorder-fa2027ee582e59ac.rmeta","--extern","gif=/Users/volchan/code/volchan/udemy/rust/snake/target/rls/debug/deps/libgif-8a70048c8a7cca1e.rmeta","--extern","jpeg=/Users/volchan/code/volchan/udemy/rust/snake/target/rls/debug/deps/libjpeg_decoder-8997f3a905ebaeb9.rmeta","--extern","num_iter=/Users/volchan/code/volchan/udemy/rust/snake/target/rls/debug/deps/libnum_iter-dd5ce347b0000356.rmeta","--extern","num_rational=/Users/volchan/code/volchan/udemy/rust/snake/target/rls/debug/deps/libnum_rational-39f2b9099921c860.rmeta","--extern","num_traits=/Users/volchan/code/volchan/udemy/rust/snake/target/rls/debug/deps/libnum_traits-24378a38155a8afd.rmeta","--extern","png=/Users/volchan/code/volchan/udemy/rust/snake/target/rls/debug/deps/libpng-d16cb4574606890f.rmeta","--extern","scoped_threadpool=/Users/volchan/code/volchan/udemy/rust/snake/target/rls/debug/deps/libscoped_threadpool-3e0fdf850191d7e3.rmeta","--extern","tiff=/Users/volchan/code/volchan/udemy/rust/snake/target/rls/debug/deps/libtiff-1bac6908ca52141a.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/volchan/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/volchan/code/volchan/udemy/rust/snake/target/rls/debug/deps/libimage-de0a795e96899349.rmeta"},"prelude":{"crate_id":{"name":"image","disambiguator":[5678225600604215466,5307409188772724673]},"crate_root":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src","external_crates":[{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","num":1,"id":{"name":"std","disambiguator":[12678783859402539130,11033699271647822562]}},{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","num":2,"id":{"name":"core","disambiguator":[5902495869598878631,6483651549774204679]}},{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[12311488937759207811,9591695617658421232]}},{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[13642764918293034548,9567326413417207759]}},{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[13989086203811079768,14781321679734955535]}},{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[18262239609673298908,5174085264251780333]}},{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[15596655843449967889,8729491543963844827]}},{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[8633493352746497996,3308549486174864674]}},{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[9090856330303166257,15266389826979080272]}},{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[10275868503320404072,15700038594031858524]}},{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[16931781941529345914,7757858263785678856]}},{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[17386117254425836477,8366695672852535875]}},{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[6497267535012603728,15523194060056832509]}},{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[5307688171077319232,12990389752959085457]}},{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/tiff.rs","num":15,"id":{"name":"tiff","disambiguator":[14371535728124085191,7776371061975745538]}},{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/bmp/decoder.rs","num":16,"id":{"name":"byteorder","disambiguator":[14304207904219818897,11685889464823151702]}},{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/tiff.rs","num":17,"id":{"name":"lzw","disambiguator":[17464248782046722261,11331060301197035751]}},{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/tiff.rs","num":18,"id":{"name":"miniz_oxide","disambiguator":[10368416114659325253,16388868465665878986]}},{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/tiff.rs","num":19,"id":{"name":"adler32","disambiguator":[13293343896968075565,15933565763958444885]}},{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/colorops.rs","num":20,"id":{"name":"num_traits","disambiguator":[6355795182957515524,15363809530608152821]}},{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/gif.rs","num":21,"id":{"name":"gif","disambiguator":[11416442898835135550,15830387684742956354]}},{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/gif.rs","num":22,"id":{"name":"color_quant","disambiguator":[1478083074048156213,13736273554209760458]}},{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/gif.rs","num":23,"id":{"name":"num_rational","disambiguator":[5468164166834893271,14239106703546919874]}},{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/gif.rs","num":24,"id":{"name":"num_integer","disambiguator":[15516917973214705950,8564723242181863834]}},{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","num":25,"id":{"name":"scoped_threadpool","disambiguator":[11286969192218099584,6537792757940083128]}},{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/jpeg/decoder.rs","num":26,"id":{"name":"jpeg_decoder","disambiguator":[10555340819303001823,1453649695353906710]}},{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/jpeg/decoder.rs","num":27,"id":{"name":"rayon","disambiguator":[1235897200788346434,18415308518808733562]}},{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/jpeg/decoder.rs","num":28,"id":{"name":"either","disambiguator":[12088048261173958959,4946779916439953345]}},{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/jpeg/decoder.rs","num":29,"id":{"name":"rayon_core","disambiguator":[6352897933868396461,2322628261031573448]}},{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/jpeg/decoder.rs","num":30,"id":{"name":"crossbeam_queue","disambiguator":[1063583866499296469,14983292461183963110]}},{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/jpeg/decoder.rs","num":31,"id":{"name":"cfg_if","disambiguator":[15180341436003802796,17175099231541996214]}},{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/jpeg/decoder.rs","num":32,"id":{"name":"maybe_uninit","disambiguator":[282585430212849508,16926077662290289788]}},{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/jpeg/decoder.rs","num":33,"id":{"name":"crossbeam_utils","disambiguator":[8765133821363280198,12450824007498106644]}},{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/jpeg/decoder.rs","num":34,"id":{"name":"lazy_static","disambiguator":[13299564837578056420,18366817922499744147]}},{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/jpeg/decoder.rs","num":35,"id":{"name":"crossbeam_deque","disambiguator":[5700128322531904887,15726756198076562317]}},{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/jpeg/decoder.rs","num":36,"id":{"name":"crossbeam_epoch","disambiguator":[17846488766402306483,10170822958282118628]}},{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/jpeg/decoder.rs","num":37,"id":{"name":"memoffset","disambiguator":[12525378603751139809,17103222457296808925]}},{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/jpeg/decoder.rs","num":38,"id":{"name":"scopeguard","disambiguator":[11701863461426297229,1937713316076678649]}},{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/jpeg/decoder.rs","num":39,"id":{"name":"num_cpus","disambiguator":[3516540055062398570,3648767985892539751]}},{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/jpeg/decoder.rs","num":40,"id":{"name":"libc","disambiguator":[1963465086797995637,17385733873163333621]}},{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/jpeg/encoder.rs","num":41,"id":{"name":"num_iter","disambiguator":[18362033416717406512,13701527985846999424]}},{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","num":42,"id":{"name":"png","disambiguator":[8730551401132595812,10721085845182905171]}},{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","num":43,"id":{"name":"bitflags","disambiguator":[15759524226023537416,6885336373221159335]}},{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","num":44,"id":{"name":"deflate","disambiguator":[12608661752333305470,15636106438886181642]}},{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","num":45,"id":{"name":"crc32fast","disambiguator":[16827045347043723859,154683399926879937]}},{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/tiff.rs","num":46,"id":{"name":"bytemuck","disambiguator":[3931247574009320173,721811448800577028]}}],"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":0,"byte_end":10148,"line_start":1,"line_end":274,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":5334},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":7029,"byte_end":7038,"line_start":139,"line_end":139,"column_start":24,"column_end":33},"alias_span":null,"name":"ColorType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5373},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":7040,"byte_end":7057,"line_start":139,"line_end":139,"column_start":35,"column_end":52},"alias_span":null,"name":"ExtendedColorType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5797},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":7084,"byte_end":7088,"line_start":141,"line_end":141,"column_start":24,"column_end":28},"alias_span":null,"name":"Luma","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5884},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":7090,"byte_end":7095,"line_start":141,"line_end":141,"column_start":30,"column_end":35},"alias_span":null,"name":"LumaA","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5739},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":7097,"byte_end":7100,"line_start":141,"line_end":141,"column_start":37,"column_end":40},"alias_span":null,"name":"Rgb","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5826},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":7102,"byte_end":7106,"line_start":141,"line_end":141,"column_start":42,"column_end":46},"alias_span":null,"name":"Rgba","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5768},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":7108,"byte_end":7111,"line_start":141,"line_end":141,"column_start":48,"column_end":51},"alias_span":null,"name":"Bgr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5855},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":7113,"byte_end":7117,"line_start":141,"line_end":141,"column_start":53,"column_end":57},"alias_span":null,"name":"Bgra","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3845},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":7144,"byte_end":7154,"line_start":143,"line_end":143,"column_start":24,"column_end":34},"alias_span":null,"name":"ImageError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":91},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":7156,"byte_end":7167,"line_start":143,"line_end":143,"column_start":36,"column_end":47},"alias_span":null,"name":"ImageResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3667},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":7194,"byte_end":7210,"line_start":145,"line_end":145,"column_start":24,"column_end":40},"alias_span":null,"name":"AnimationDecoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3698},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":7228,"byte_end":7240,"line_start":146,"line_end":146,"column_start":17,"column_end":29},"alias_span":null,"name":"GenericImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3685},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":7258,"byte_end":7274,"line_start":147,"line_end":147,"column_start":17,"column_end":33},"alias_span":null,"name":"GenericImageView","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3648},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":7292,"byte_end":7304,"line_start":148,"line_end":148,"column_start":17,"column_end":29},"alias_span":null,"name":"ImageDecoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3661},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":7322,"byte_end":7337,"line_start":149,"line_end":149,"column_start":17,"column_end":32},"alias_span":null,"name":"ImageDecoderExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3670},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":7355,"byte_end":7367,"line_start":150,"line_end":150,"column_start":17,"column_end":29},"alias_span":null,"name":"ImageEncoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5997},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":7385,"byte_end":7396,"line_start":151,"line_end":151,"column_start":17,"column_end":28},"alias_span":null,"name":"ImageFormat","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6040},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":7414,"byte_end":7431,"line_start":152,"line_end":152,"column_start":17,"column_end":34},"alias_span":null,"name":"ImageOutputFormat","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6076},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":7449,"byte_end":7457,"line_start":153,"line_end":153,"column_start":17,"column_end":25},"alias_span":null,"name":"Progress","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3672},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":7504,"byte_end":7510,"line_start":155,"line_end":155,"column_start":17,"column_end":23},"alias_span":null,"name":"Pixels","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3710},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":7528,"byte_end":7536,"line_start":156,"line_end":156,"column_start":17,"column_end":25},"alias_span":null,"name":"SubImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3231},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":7583,"byte_end":7597,"line_start":159,"line_end":159,"column_start":18,"column_end":32},"alias_span":null,"name":"GrayAlphaImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3230},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":7616,"byte_end":7625,"line_start":160,"line_end":160,"column_start":18,"column_end":27},"alias_span":null,"name":"GrayImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5303},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":7676,"byte_end":7687,"line_start":162,"line_end":162,"column_start":18,"column_end":29},"alias_span":null,"name":"ImageBuffer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3228},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":7706,"byte_end":7714,"line_start":163,"line_end":163,"column_start":18,"column_end":26},"alias_span":null,"name":"RgbImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3229},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":7733,"byte_end":7742,"line_start":164,"line_end":164,"column_start":18,"column_end":27},"alias_span":null,"name":"RgbaImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4038},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":7767,"byte_end":7778,"line_start":166,"line_end":166,"column_start":22,"column_end":33},"alias_span":null,"name":"FlatSamples","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3757},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":7815,"byte_end":7830,"line_start":169,"line_end":169,"column_start":25,"column_end":40},"alias_span":null,"name":"EncodableLayout","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3763},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":7832,"byte_end":7841,"line_start":169,"line_end":169,"column_start":42,"column_end":51},"alias_span":null,"name":"Primitive","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3785},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":7843,"byte_end":7848,"line_start":169,"line_end":169,"column_start":53,"column_end":58},"alias_span":null,"name":"Pixel","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":528},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":7918,"byte_end":7930,"line_start":172,"line_end":172,"column_start":37,"column_end":49},"alias_span":null,"name":"guess_format","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":515},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":7932,"byte_end":7936,"line_start":172,"line_end":172,"column_start":51,"column_end":55},"alias_span":null,"name":"load","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3589},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":7965,"byte_end":7981,"line_start":173,"line_end":173,"column_start":27,"column_end":43},"alias_span":null,"name":"load_from_memory","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3590},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":7983,"byte_end":8011,"line_start":173,"line_end":173,"column_start":45,"column_end":73},"alias_span":null,"name":"load_from_memory_with_format","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3581},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":8013,"byte_end":8017,"line_start":173,"line_end":173,"column_start":75,"column_end":79},"alias_span":null,"name":"open","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3585},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":8038,"byte_end":8049,"line_start":174,"line_end":174,"column_start":20,"column_end":31},"alias_span":null,"name":"save_buffer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3587},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":8051,"byte_end":8074,"line_start":174,"line_end":174,"column_start":33,"column_end":56},"alias_span":null,"name":"save_buffer_with_format","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3583},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":8076,"byte_end":8092,"line_start":174,"line_end":174,"column_start":58,"column_end":74},"alias_span":null,"name":"image_dimensions","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5964},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":8121,"byte_end":8133,"line_start":176,"line_end":176,"column_start":26,"column_end":38},"alias_span":null,"name":"DynamicImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5246},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":8163,"byte_end":8168,"line_start":178,"line_end":178,"column_start":28,"column_end":33},"alias_span":null,"name":"Delay","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5239},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":8170,"byte_end":8175,"line_start":178,"line_end":178,"column_start":35,"column_end":40},"alias_span":null,"name":"Frame","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2922},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":8177,"byte_end":8183,"line_start":178,"line_end":178,"column_start":42,"column_end":48},"alias_span":null,"name":"Frames","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3215},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":8406,"byte_end":8419,"line_start":187,"line_end":187,"column_start":9,"column_end":22},"alias_span":null,"name":"ConvertBuffer","value":"","parent":{"krate":0,"index":117}},{"kind":"Use","ref_id":{"krate":0,"index":5282},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":8429,"byte_end":8444,"line_start":188,"line_end":188,"column_start":9,"column_end":24},"alias_span":null,"name":"EnumeratePixels","value":"","parent":{"krate":0,"index":117}},{"kind":"Use","ref_id":{"krate":0,"index":3085},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":8454,"byte_end":8472,"line_start":189,"line_end":189,"column_start":9,"column_end":27},"alias_span":null,"name":"EnumeratePixelsMut","value":"","parent":{"krate":0,"index":117}},{"kind":"Use","ref_id":{"krate":0,"index":5293},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":8482,"byte_end":8495,"line_start":190,"line_end":190,"column_start":9,"column_end":22},"alias_span":null,"name":"EnumerateRows","value":"","parent":{"krate":0,"index":117}},{"kind":"Use","ref_id":{"krate":0,"index":3102},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":8505,"byte_end":8521,"line_start":191,"line_end":191,"column_start":9,"column_end":25},"alias_span":null,"name":"EnumerateRowsMut","value":"","parent":{"krate":0,"index":117}},{"kind":"Use","ref_id":{"krate":0,"index":5266},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":8531,"byte_end":8537,"line_start":192,"line_end":192,"column_start":9,"column_end":15},"alias_span":null,"name":"Pixels","value":"","parent":{"krate":0,"index":117}},{"kind":"Use","ref_id":{"krate":0,"index":3008},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":8547,"byte_end":8556,"line_start":193,"line_end":193,"column_start":9,"column_end":18},"alias_span":null,"name":"PixelsMut","value":"","parent":{"krate":0,"index":117}},{"kind":"Use","ref_id":{"krate":0,"index":5274},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":8566,"byte_end":8570,"line_start":194,"line_end":194,"column_start":9,"column_end":13},"alias_span":null,"name":"Rows","value":"","parent":{"krate":0,"index":117}},{"kind":"Use","ref_id":{"krate":0,"index":3044},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":8580,"byte_end":8587,"line_start":195,"line_end":195,"column_start":9,"column_end":16},"alias_span":null,"name":"RowsMut","value":"","parent":{"krate":0,"index":117}},{"kind":"Use","ref_id":{"krate":0,"index":3997},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/math/mod.rs","byte_start":27938,"byte_end":27942,"line_start":6,"line_end":6,"column_start":21,"column_end":25},"alias_span":null,"name":"Rect","value":"","parent":{"krate":0,"index":128}},{"kind":"Use","ref_id":{"krate":0,"index":4022},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/mod.rs","byte_start":45142,"byte_end":45152,"line_start":7,"line_end":7,"column_start":23,"column_end":33},"alias_span":null,"name":"FilterType","value":"","parent":{"krate":0,"index":175}},{"kind":"Use","ref_id":{"krate":0,"index":4027},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/mod.rs","byte_start":45190,"byte_end":45200,"line_start":9,"line_end":9,"column_start":36,"column_end":46},"alias_span":null,"name":"CatmullRom","value":"","parent":{"krate":0,"index":175}},{"kind":"Use","ref_id":{"krate":0,"index":4029},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/mod.rs","byte_start":45202,"byte_end":45210,"line_start":9,"line_end":9,"column_start":48,"column_end":56},"alias_span":null,"name":"Gaussian","value":"","parent":{"krate":0,"index":175}},{"kind":"Use","ref_id":{"krate":0,"index":4031},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/mod.rs","byte_start":45212,"byte_end":45220,"line_start":9,"line_end":9,"column_start":58,"column_end":66},"alias_span":null,"name":"Lanczos3","value":"","parent":{"krate":0,"index":175}},{"kind":"Use","ref_id":{"krate":0,"index":4023},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/mod.rs","byte_start":45222,"byte_end":45229,"line_start":9,"line_end":9,"column_start":68,"column_end":75},"alias_span":null,"name":"Nearest","value":"","parent":{"krate":0,"index":175}},{"kind":"Use","ref_id":{"krate":0,"index":4025},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/mod.rs","byte_start":45231,"byte_end":45239,"line_start":9,"line_end":9,"column_start":77,"column_end":85},"alias_span":null,"name":"Triangle","value":"","parent":{"krate":0,"index":175}},{"kind":"Use","ref_id":{"krate":0,"index":244},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/mod.rs","byte_start":45298,"byte_end":45313,"line_start":13,"line_end":13,"column_start":5,"column_end":20},"alias_span":null,"name":"flip_horizontal","value":"","parent":{"krate":0,"index":175}},{"kind":"Use","ref_id":{"krate":0,"index":256},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/mod.rs","byte_start":45315,"byte_end":45339,"line_start":13,"line_end":13,"column_start":22,"column_end":46},"alias_span":null,"name":"flip_horizontal_in_place","value":"","parent":{"krate":0,"index":175}},{"kind":"Use","ref_id":{"krate":0,"index":246},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/mod.rs","byte_start":45341,"byte_end":45354,"line_start":13,"line_end":13,"column_start":48,"column_end":61},"alias_span":null,"name":"flip_vertical","value":"","parent":{"krate":0,"index":175}},{"kind":"Use","ref_id":{"krate":0,"index":258},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/mod.rs","byte_start":45356,"byte_end":45378,"line_start":13,"line_end":13,"column_start":63,"column_end":85},"alias_span":null,"name":"flip_vertical_in_place","value":"","parent":{"krate":0,"index":175}},{"kind":"Use","ref_id":{"krate":0,"index":231},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/mod.rs","byte_start":45380,"byte_end":45389,"line_start":13,"line_end":13,"column_start":87,"column_end":96},"alias_span":null,"name":"rotate180","value":"","parent":{"krate":0,"index":175}},{"kind":"Use","ref_id":{"krate":0,"index":254},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/mod.rs","byte_start":45395,"byte_end":45413,"line_start":14,"line_end":14,"column_start":5,"column_end":23},"alias_span":null,"name":"rotate180_in_place","value":"","parent":{"krate":0,"index":175}},{"kind":"Use","ref_id":{"krate":0,"index":233},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/mod.rs","byte_start":45415,"byte_end":45424,"line_start":14,"line_end":14,"column_start":25,"column_end":34},"alias_span":null,"name":"rotate270","value":"","parent":{"krate":0,"index":175}},{"kind":"Use","ref_id":{"krate":0,"index":229},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/mod.rs","byte_start":45426,"byte_end":45434,"line_start":14,"line_end":14,"column_start":36,"column_end":44},"alias_span":null,"name":"rotate90","value":"","parent":{"krate":0,"index":175}},{"kind":"Use","ref_id":{"krate":0,"index":238},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/mod.rs","byte_start":45436,"byte_end":45448,"line_start":14,"line_end":14,"column_start":46,"column_end":58},"alias_span":null,"name":"rotate180_in","value":"","parent":{"krate":0,"index":175}},{"kind":"Use","ref_id":{"krate":0,"index":235},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/mod.rs","byte_start":45450,"byte_end":45461,"line_start":14,"line_end":14,"column_start":60,"column_end":71},"alias_span":null,"name":"rotate90_in","value":"","parent":{"krate":0,"index":175}},{"kind":"Use","ref_id":{"krate":0,"index":241},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/mod.rs","byte_start":45463,"byte_end":45475,"line_start":14,"line_end":14,"column_start":73,"column_end":85},"alias_span":null,"name":"rotate270_in","value":"","parent":{"krate":0,"index":175}},{"kind":"Use","ref_id":{"krate":0,"index":248},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/mod.rs","byte_start":45477,"byte_end":45495,"line_start":14,"line_end":14,"column_start":87,"column_end":105},"alias_span":null,"name":"flip_horizontal_in","value":"","parent":{"krate":0,"index":175}},{"kind":"Use","ref_id":{"krate":0,"index":251},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/mod.rs","byte_start":45497,"byte_end":45513,"line_start":14,"line_end":14,"column_start":107,"column_end":123},"alias_span":null,"name":"flip_vertical_in","value":"","parent":{"krate":0,"index":175}},{"kind":"Use","ref_id":{"krate":0,"index":407},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/mod.rs","byte_start":45560,"byte_end":45564,"line_start":18,"line_end":18,"column_start":24,"column_end":28},"alias_span":null,"name":"blur","value":"","parent":{"krate":0,"index":175}},{"kind":"Use","ref_id":{"krate":0,"index":400},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/mod.rs","byte_start":45566,"byte_end":45575,"line_start":18,"line_end":18,"column_start":30,"column_end":39},"alias_span":null,"name":"filter3x3","value":"","parent":{"krate":0,"index":175}},{"kind":"Use","ref_id":{"krate":0,"index":405},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/mod.rs","byte_start":45577,"byte_end":45583,"line_start":18,"line_end":18,"column_start":41,"column_end":47},"alias_span":null,"name":"resize","value":"","parent":{"krate":0,"index":175}},{"kind":"Use","ref_id":{"krate":0,"index":377},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/mod.rs","byte_start":45585,"byte_end":45594,"line_start":18,"line_end":18,"column_start":49,"column_end":58},"alias_span":null,"name":"thumbnail","value":"","parent":{"krate":0,"index":175}},{"kind":"Use","ref_id":{"krate":0,"index":410},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/mod.rs","byte_start":45596,"byte_end":45605,"line_start":18,"line_end":18,"column_start":60,"column_end":69},"alias_span":null,"name":"unsharpen","value":"","parent":{"krate":0,"index":175}},{"kind":"Use","ref_id":{"krate":0,"index":288},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/mod.rs","byte_start":45655,"byte_end":45663,"line_start":21,"line_end":21,"column_start":26,"column_end":34},"alias_span":null,"name":"brighten","value":"","parent":{"krate":0,"index":175}},{"kind":"Use","ref_id":{"krate":0,"index":283},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/mod.rs","byte_start":45665,"byte_end":45673,"line_start":21,"line_end":21,"column_start":36,"column_end":44},"alias_span":null,"name":"contrast","value":"","parent":{"krate":0,"index":175}},{"kind":"Use","ref_id":{"krate":0,"index":322},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/mod.rs","byte_start":45675,"byte_end":45681,"line_start":21,"line_end":21,"column_start":46,"column_end":52},"alias_span":null,"name":"dither","value":"","parent":{"krate":0,"index":175}},{"kind":"Use","ref_id":{"krate":0,"index":279},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/mod.rs","byte_start":45683,"byte_end":45692,"line_start":21,"line_end":21,"column_start":54,"column_end":63},"alias_span":null,"name":"grayscale","value":"","parent":{"krate":0,"index":175}},{"kind":"Use","ref_id":{"krate":0,"index":294},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/mod.rs","byte_start":45694,"byte_end":45703,"line_start":21,"line_end":21,"column_start":65,"column_end":74},"alias_span":null,"name":"huerotate","value":"","parent":{"krate":0,"index":175}},{"kind":"Use","ref_id":{"krate":0,"index":327},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/mod.rs","byte_start":45705,"byte_end":45717,"line_start":21,"line_end":21,"column_start":76,"column_end":88},"alias_span":null,"name":"index_colors","value":"","parent":{"krate":0,"index":175}},{"kind":"Use","ref_id":{"krate":0,"index":281},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/mod.rs","byte_start":45719,"byte_end":45725,"line_start":21,"line_end":21,"column_start":90,"column_end":96},"alias_span":null,"name":"invert","value":"","parent":{"krate":0,"index":175}},{"kind":"Use","ref_id":{"krate":0,"index":4017},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/mod.rs","byte_start":45752,"byte_end":45759,"line_start":22,"line_end":22,"column_start":26,"column_end":33},"alias_span":null,"name":"BiLevel","value":"","parent":{"krate":0,"index":175}},{"kind":"Use","ref_id":{"krate":0,"index":299},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/mod.rs","byte_start":45761,"byte_end":45769,"line_start":22,"line_end":22,"column_start":35,"column_end":43},"alias_span":null,"name":"ColorMap","value":"","parent":{"krate":0,"index":175}},{"kind":"Use","ref_id":{"krate":0,"index":450},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/mod.rs","byte_start":105097,"byte_end":105103,"line_start":5,"line_end":5,"column_start":23,"column_end":29},"alias_span":null,"name":"Reader","value":"","parent":{"krate":0,"index":428}},{"kind":"Use","ref_id":{"krate":0,"index":818},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/bmp/mod.rs","byte_start":187188,"byte_end":187198,"line_start":10,"line_end":10,"column_start":24,"column_end":34},"alias_span":null,"name":"BmpDecoder","value":"","parent":{"krate":0,"index":709}},{"kind":"Use","ref_id":{"krate":0,"index":937},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/bmp/mod.rs","byte_start":187223,"byte_end":187233,"line_start":11,"line_end":11,"column_start":24,"column_end":34},"alias_span":null,"name":"BMPEncoder","value":"","parent":{"krate":0,"index":709}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/mod.rs","byte_start":304868,"byte_end":304869,"line_start":14,"line_end":14,"column_start":24,"column_end":25},"alias_span":null,"name":"*","value":"SIGNATURE, rgbe8, RGBE8Pixel, HDRAdapter","parent":{"krate":0,"index":1230}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/mod.rs","byte_start":304868,"byte_end":304869,"line_start":14,"line_end":14,"column_start":24,"column_end":25},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":1230}},{"kind":"Use","ref_id":{"krate":0,"index":1498},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/ico/mod.rs","byte_start":355687,"byte_end":355697,"line_start":9,"line_end":9,"column_start":24,"column_end":34},"alias_span":null,"name":"IcoDecoder","value":"","parent":{"krate":0,"index":1454}},{"kind":"Use","ref_id":{"krate":0,"index":1562},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/ico/mod.rs","byte_start":355722,"byte_end":355732,"line_start":10,"line_end":10,"column_start":24,"column_end":34},"alias_span":null,"name":"ICOEncoder","value":"","parent":{"krate":0,"index":1454}},{"kind":"Use","ref_id":{"krate":0,"index":1602},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/jpeg/mod.rs","byte_start":372592,"byte_end":372603,"line_start":10,"line_end":10,"column_start":24,"column_end":35},"alias_span":null,"name":"JpegDecoder","value":"","parent":{"krate":0,"index":1578}},{"kind":"Use","ref_id":{"krate":0,"index":1715},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/jpeg/mod.rs","byte_start":372629,"byte_end":372640,"line_start":11,"line_end":11,"column_start":25,"column_end":36},"alias_span":null,"name":"JPEGEncoder","value":"","parent":{"krate":0,"index":1578}},{"kind":"Use","ref_id":{"krate":0,"index":4697},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/jpeg/mod.rs","byte_start":372642,"byte_end":372654,"line_start":11,"line_end":11,"column_start":38,"column_end":50},"alias_span":null,"name":"PixelDensity","value":"","parent":{"krate":0,"index":1578}},{"kind":"Use","ref_id":{"krate":0,"index":4679},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/jpeg/mod.rs","byte_start":372656,"byte_end":372672,"line_start":11,"line_end":11,"column_start":52,"column_end":68},"alias_span":null,"name":"PixelDensityUnit","value":"","parent":{"krate":0,"index":1578}},{"kind":"Use","ref_id":{"krate":0,"index":2032},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/mod.rs","byte_start":463563,"byte_end":463573,"line_start":7,"line_end":7,"column_start":24,"column_end":34},"alias_span":null,"name":"PnmDecoder","value":"","parent":{"krate":0,"index":1926}},{"kind":"Use","ref_id":{"krate":0,"index":2168},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/mod.rs","byte_start":463598,"byte_end":463608,"line_start":8,"line_end":8,"column_start":24,"column_end":34},"alias_span":null,"name":"PNMEncoder","value":"","parent":{"krate":0,"index":1926}},{"kind":"Use","ref_id":{"krate":0,"index":4977},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/mod.rs","byte_start":463665,"byte_end":463680,"line_start":10,"line_end":10,"column_start":24,"column_end":39},"alias_span":null,"name":"ArbitraryHeader","value":"","parent":{"krate":0,"index":1926}},{"kind":"Use","ref_id":{"krate":0,"index":4987},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/mod.rs","byte_start":463682,"byte_end":463699,"line_start":10,"line_end":10,"column_start":41,"column_end":58},"alias_span":null,"name":"ArbitraryTuplType","value":"","parent":{"krate":0,"index":1926}},{"kind":"Use","ref_id":{"krate":0,"index":4948},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/mod.rs","byte_start":463701,"byte_end":463713,"line_start":10,"line_end":10,"column_start":60,"column_end":72},"alias_span":null,"name":"BitmapHeader","value":"","parent":{"krate":0,"index":1926}},{"kind":"Use","ref_id":{"krate":0,"index":4957},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/mod.rs","byte_start":463715,"byte_end":463728,"line_start":10,"line_end":10,"column_start":74,"column_end":87},"alias_span":null,"name":"GraymapHeader","value":"","parent":{"krate":0,"index":1926}},{"kind":"Use","ref_id":{"krate":0,"index":4967},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/mod.rs","byte_start":463753,"byte_end":463765,"line_start":11,"line_end":11,"column_start":24,"column_end":36},"alias_span":null,"name":"PixmapHeader","value":"","parent":{"krate":0,"index":1926}},{"kind":"Use","ref_id":{"krate":0,"index":2267},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/mod.rs","byte_start":463791,"byte_end":463800,"line_start":12,"line_end":12,"column_start":24,"column_end":33},"alias_span":null,"name":"PNMHeader","value":"","parent":{"krate":0,"index":1926}},{"kind":"Use","ref_id":{"krate":0,"index":4924},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/mod.rs","byte_start":463802,"byte_end":463812,"line_start":12,"line_end":12,"column_start":35,"column_end":45},"alias_span":null,"name":"PNMSubtype","value":"","parent":{"krate":0,"index":1926}},{"kind":"Use","ref_id":{"krate":0,"index":4908},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/mod.rs","byte_start":463814,"byte_end":463828,"line_start":12,"line_end":12,"column_start":47,"column_end":61},"alias_span":null,"name":"SampleEncoding","value":"","parent":{"krate":0,"index":1926}},{"kind":"Use","ref_id":{"krate":0,"index":2350},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/tga/mod.rs","byte_start":551260,"byte_end":551270,"line_start":9,"line_end":9,"column_start":24,"column_end":34},"alias_span":null,"name":"TgaDecoder","value":"","parent":{"krate":0,"index":2314}},{"kind":"Use","ref_id":{"krate":0,"index":2416},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/tga/mod.rs","byte_start":551336,"byte_end":551346,"line_start":13,"line_end":13,"column_start":24,"column_end":34},"alias_span":null,"name":"TgaEncoder","value":"","parent":{"krate":0,"index":2314}},{"kind":"Use","ref_id":{"krate":0,"index":2590},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/webp/mod.rs","byte_start":587718,"byte_end":587729,"line_start":3,"line_end":3,"column_start":24,"column_end":35},"alias_span":null,"name":"WebPDecoder","value":"","parent":{"krate":0,"index":2550}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":0,"byte_end":10148,"line_start":1,"line_end":274,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":14},{"krate":0,"index":17},{"krate":0,"index":29},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":40},{"krate":0,"index":43},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":55},{"krate":0,"index":117},{"krate":0,"index":128},{"krate":0,"index":175},{"krate":0,"index":428},{"krate":0,"index":533},{"krate":0,"index":709},{"krate":0,"index":959},{"krate":0,"index":1012},{"krate":0,"index":1129},{"krate":0,"index":1230},{"krate":0,"index":1454},{"krate":0,"index":1578},{"krate":0,"index":1795},{"krate":0,"index":1926},{"krate":0,"index":2314},{"krate":0,"index":2479},{"krate":0,"index":2550},{"krate":0,"index":2822},{"krate":0,"index":2916},{"krate":0,"index":2956},{"krate":0,"index":3238},{"krate":0,"index":3436},{"krate":0,"index":3592},{"krate":0,"index":3743},{"krate":0,"index":3831},{"krate":0,"index":3843},{"krate":0,"index":6135},{"krate":0,"index":3844}],"decl_id":null,"docs":" This crate provides native rust implementations of\n image encoders and decoders and basic image manipulation\n functions.","sig":null,"attributes":[{"value":"! This crate provides native rust implementations of","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":0,"byte_end":54,"line_start":1,"line_end":1,"column_start":1,"column_end":55}},{"value":"! image encoders and decoders and basic image manipulation","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":55,"byte_end":115,"line_start":2,"line_end":2,"column_start":1,"column_end":61}},{"value":"! functions.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":116,"byte_end":130,"line_start":3,"line_end":3,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":131,"byte_end":134,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! Additional documentation can currently also be found in the","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":135,"byte_end":198,"line_start":5,"line_end":5,"column_start":1,"column_end":64}},{"value":"! [README.md file which is most easily viewed on github](https://github.com/image-rs/image/blob/master/README.md).","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":199,"byte_end":315,"line_start":6,"line_end":6,"column_start":1,"column_end":117}},{"value":"!","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":316,"byte_end":319,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"! [Jump forward to crate content](#reexports)","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":320,"byte_end":367,"line_start":8,"line_end":8,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":368,"byte_end":371,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"! # Overview","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":372,"byte_end":386,"line_start":10,"line_end":10,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":387,"byte_end":390,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"! There are two core problems for which this library provides solutions: a unified interface for image","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":391,"byte_end":495,"line_start":12,"line_end":12,"column_start":1,"column_end":105}},{"value":"! encodings and simple generic buffers for their content. It's possible to use either feature","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":496,"byte_end":591,"line_start":13,"line_end":13,"column_start":1,"column_end":96}},{"value":"! without the other. The focus is on a small and stable set of common operations that can be","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":592,"byte_end":686,"line_start":14,"line_end":14,"column_start":1,"column_end":95}},{"value":"! supplemented by other specialized crates. The library also prefers safe solutions with few","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":687,"byte_end":781,"line_start":15,"line_end":15,"column_start":1,"column_end":95}},{"value":"! dependencies.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":782,"byte_end":799,"line_start":16,"line_end":16,"column_start":1,"column_end":18}},{"value":"!","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":800,"byte_end":803,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"! | Format | Decoding | Encoding |","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":804,"byte_end":840,"line_start":18,"line_end":18,"column_start":1,"column_end":37}},{"value":"! | ------ | -------- | -------- |","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":841,"byte_end":877,"line_start":19,"line_end":19,"column_start":1,"column_end":37}},{"value":"! | PNG    | All supported color types | Same as decoding |","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":878,"byte_end":939,"line_start":20,"line_end":20,"column_start":1,"column_end":62}},{"value":"! | JPEG   | Baseline and progressive | Baseline JPEG |","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":940,"byte_end":997,"line_start":21,"line_end":21,"column_start":1,"column_end":58}},{"value":"! | GIF    | Yes | Yes |","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":998,"byte_end":1024,"line_start":22,"line_end":22,"column_start":1,"column_end":27}},{"value":"! | BMP    | Yes | RGB(8), RGBA(8), Gray(8), GrayA(8) |","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":1025,"byte_end":1082,"line_start":23,"line_end":23,"column_start":1,"column_end":58}},{"value":"! | ICO    | Yes | Yes |","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":1083,"byte_end":1109,"line_start":24,"line_end":24,"column_start":1,"column_end":27}},{"value":"! | TIFF   | Baseline(no fax support) + LZW + PackBits | RGB(8), RGBA(8), Gray(8) |","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":1110,"byte_end":1195,"line_start":25,"line_end":25,"column_start":1,"column_end":86}},{"value":"! | WebP   | Lossy(Luma channel only) | No |","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":1196,"byte_end":1242,"line_start":26,"line_end":26,"column_start":1,"column_end":47}},{"value":"! | PNM    | PBM, PGM, PPM, standard PAM | Yes |","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":1243,"byte_end":1293,"line_start":27,"line_end":27,"column_start":1,"column_end":51}},{"value":"! | DDS    | DXT1, DXT3, DXT5 | No |","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":1294,"byte_end":1332,"line_start":28,"line_end":28,"column_start":1,"column_end":39}},{"value":"! | TGA    | Yes | RGB(8), RGBA(8), BGR(8), BGRA(8), Gray(8), GrayA(8) |","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":1333,"byte_end":1407,"line_start":29,"line_end":29,"column_start":1,"column_end":75}},{"value":"! | farbfeld | Yes | Yes |","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":1408,"byte_end":1436,"line_start":30,"line_end":30,"column_start":1,"column_end":29}},{"value":"!","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":1437,"byte_end":1440,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"! ## Using images decoders","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":1441,"byte_end":1469,"line_start":32,"line_end":32,"column_start":1,"column_end":29}},{"value":"!","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":1470,"byte_end":1473,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"! There exists a huge variety of image formats that are concerned with efficiently encoding image","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":1474,"byte_end":1573,"line_start":34,"line_end":34,"column_start":1,"column_end":100}},{"value":"! pixel data and auxiliary meta data for many different purposes. The `image` library provides","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":1574,"byte_end":1670,"line_start":35,"line_end":35,"column_start":1,"column_end":97}},{"value":"! decoders for many common formats, depending on the active features. The best way to use them","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":1671,"byte_end":1767,"line_start":36,"line_end":36,"column_start":1,"column_end":97}},{"value":"! depends on your use case.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":1768,"byte_end":1797,"line_start":37,"line_end":37,"column_start":1,"column_end":30}},{"value":"!","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":1798,"byte_end":1801,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"! * [`open`] is a very simple way to load images from the file system, automatically deducing the","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":1802,"byte_end":1901,"line_start":39,"line_end":39,"column_start":1,"column_end":100}},{"value":"!   format but offering little customization.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":1902,"byte_end":1949,"line_start":40,"line_end":40,"column_start":1,"column_end":48}},{"value":"! * [`load_from_memory`], [`load_from_memory_with_format`] present a similar interface for images","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":1950,"byte_end":2049,"line_start":41,"line_end":41,"column_start":1,"column_end":100}},{"value":"!   whose encoded data is already present in memory.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":2050,"byte_end":2104,"line_start":42,"line_end":42,"column_start":1,"column_end":55}},{"value":"! * [`io::Reader`] is a builder providing a superset of the functions. It offers both","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":2105,"byte_end":2192,"line_start":43,"line_end":43,"column_start":1,"column_end":88}},{"value":"!   customization and auto-deduction but is slightly more involved. The main benefit is that the","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":2193,"byte_end":2291,"line_start":44,"line_end":44,"column_start":1,"column_end":99}},{"value":"!   interface is easier to evolve.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":2292,"byte_end":2328,"line_start":45,"line_end":45,"column_start":1,"column_end":37}},{"value":"! * [`ImageDecoder`] is a trait for querying meta data and reading image pixels into a generic","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":2329,"byte_end":2425,"line_start":46,"line_end":46,"column_start":1,"column_end":97}},{"value":"!   byte buffer. It also contains a `Read` adaptor for stream reading the pixels.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":2426,"byte_end":2509,"line_start":47,"line_end":47,"column_start":1,"column_end":84}},{"value":"! * [`DynamicImage::from_decoder`] can be used for creating a buffer from a single specific or","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":2510,"byte_end":2606,"line_start":48,"line_end":48,"column_start":1,"column_end":97}},{"value":"!   any custom decoder implementing the [`ImageDecoder`] trait.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":2607,"byte_end":2672,"line_start":49,"line_end":49,"column_start":1,"column_end":66}},{"value":"!","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":2673,"byte_end":2676,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"! [`open`]: fn.open.html","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":2677,"byte_end":2703,"line_start":51,"line_end":51,"column_start":1,"column_end":27}},{"value":"! [`load_from_memory`]: fn.load_from_memory.html","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":2704,"byte_end":2754,"line_start":52,"line_end":52,"column_start":1,"column_end":51}},{"value":"! [`load_from_memory_with_format`]: fn.load_from_memory_with_format.html","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":2755,"byte_end":2829,"line_start":53,"line_end":53,"column_start":1,"column_end":75}},{"value":"! [`io::Reader`]: io/struct.Reader.html","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":2830,"byte_end":2871,"line_start":54,"line_end":54,"column_start":1,"column_end":42}},{"value":"! [`DynamicImage::from_decoder`]: enum.DynamicImage.html#method.from_decoder","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":2872,"byte_end":2950,"line_start":55,"line_end":55,"column_start":1,"column_end":79}},{"value":"! [`ImageDecoder`]: trait.ImageDecoder.html","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":2951,"byte_end":2996,"line_start":56,"line_end":56,"column_start":1,"column_end":46}},{"value":"!","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":2997,"byte_end":3000,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"! ## Using image encoders","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":3001,"byte_end":3028,"line_start":58,"line_end":58,"column_start":1,"column_end":28}},{"value":"!","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":3029,"byte_end":3032,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"! Encoding pixel data is supported for the majority of formats but not quite as broadly.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":3033,"byte_end":3123,"line_start":60,"line_end":60,"column_start":1,"column_end":91}},{"value":"!","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":3124,"byte_end":3127,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"! * [`DynamicImage::save`] is the converse of `open` and stores a `DynamicImage`.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":3128,"byte_end":3211,"line_start":62,"line_end":62,"column_start":1,"column_end":84}},{"value":"! * [`DynamicImage::write_to`] can be used to encode an image into any writer, for example into a","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":3212,"byte_end":3311,"line_start":63,"line_end":63,"column_start":1,"column_end":100}},{"value":"!   vector of bytes in memory.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":3312,"byte_end":3344,"line_start":64,"line_end":64,"column_start":1,"column_end":33}},{"value":"! * [`save_buffer`], [`save_buffer_with_format`] provide a low-level interface for saving an image","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":3345,"byte_end":3445,"line_start":65,"line_end":65,"column_start":1,"column_end":101}},{"value":"!   in the file system, where the library initializes the chosen encoder.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":3446,"byte_end":3521,"line_start":66,"line_end":66,"column_start":1,"column_end":76}},{"value":"! * [`ImageEncoder`] is a trait for encoding a byte buffer of image data and the inverse of the","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":3522,"byte_end":3619,"line_start":67,"line_end":67,"column_start":1,"column_end":98}},{"value":"!   `ImageDecoder` interface.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":3620,"byte_end":3651,"line_start":68,"line_end":68,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":3652,"byte_end":3655,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"! [`save_buffer`]: #fn.save_buffer.html","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":3656,"byte_end":3697,"line_start":70,"line_end":70,"column_start":1,"column_end":42}},{"value":"! [`save_buffer_with_format`]: #fn.save_buffer_with_format.html","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":3698,"byte_end":3763,"line_start":71,"line_end":71,"column_start":1,"column_end":66}},{"value":"! [`DynamicImage::save`]: enum.DynamicImage.html#method.save","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":3764,"byte_end":3826,"line_start":72,"line_end":72,"column_start":1,"column_end":63}},{"value":"! [`DynamicImage::write_to`]: enum.DynamicImage.html#method.write_to","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":3827,"byte_end":3897,"line_start":73,"line_end":73,"column_start":1,"column_end":71}},{"value":"! [`ImageEncoder`]: trait.ImageEncoder.html","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":3898,"byte_end":3943,"line_start":74,"line_end":74,"column_start":1,"column_end":46}},{"value":"!","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":3944,"byte_end":3947,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"! ## Image buffers","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":3948,"byte_end":3968,"line_start":76,"line_end":76,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":3969,"byte_end":3972,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"! The library adds containers for channel data which together form some representation of a 2D","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":3973,"byte_end":4069,"line_start":78,"line_end":78,"column_start":1,"column_end":97}},{"value":"! matrix of pixels. These are all statically typed to avoid misinterpretation of byte data (and","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":4070,"byte_end":4167,"line_start":79,"line_end":79,"column_start":1,"column_end":98}},{"value":"! since Rust has no standard safe encapsulation for reinterpreting byte slices as another type).","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":4168,"byte_end":4266,"line_start":80,"line_end":80,"column_start":1,"column_end":99}},{"value":"! The main traits [`GenericImageView`] and [`GenericImage`] model a view on a 2D-matrix of","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":4267,"byte_end":4359,"line_start":81,"line_end":81,"column_start":1,"column_end":93}},{"value":"! addressable pixels and a buffer of independently accessible pixels respectively.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":4360,"byte_end":4444,"line_start":82,"line_end":82,"column_start":1,"column_end":85}},{"value":"!","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":4445,"byte_end":4448,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"! The two main types for owning pixel data are [`ImageBuffer`] and [`DynamicImage`]. Note that","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":4449,"byte_end":4545,"line_start":84,"line_end":84,"column_start":1,"column_end":97}},{"value":"! the latter is an enum over well-supported pixel types that also offers conversion","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":4546,"byte_end":4631,"line_start":85,"line_end":85,"column_start":1,"column_end":86}},{"value":"! functionality.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":4632,"byte_end":4650,"line_start":86,"line_end":86,"column_start":1,"column_end":19}},{"value":"!","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":4651,"byte_end":4654,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"! Additionally, the [`flat`] module contains items for interoperability with generic channel","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":4655,"byte_end":4749,"line_start":88,"line_end":88,"column_start":1,"column_end":95}},{"value":"! matrices and foreign interface. While still strictly typed, these dynamically validate length and","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":4750,"byte_end":4851,"line_start":89,"line_end":89,"column_start":1,"column_end":102}},{"value":"! other layout assumptions required to provide the trait interface. While they are quite generic, you","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":4852,"byte_end":4955,"line_start":90,"line_end":90,"column_start":1,"column_end":104}},{"value":"! should be prepared for a bit of boilerplate when using these types.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":4956,"byte_end":5027,"line_start":91,"line_end":91,"column_start":1,"column_end":72}},{"value":"!","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":5028,"byte_end":5031,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"! [`GenericImageView`]: trait.GenericImageView.html","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":5032,"byte_end":5085,"line_start":93,"line_end":93,"column_start":1,"column_end":54}},{"value":"! [`GenericImage`]: trait.GenericImage.html","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":5086,"byte_end":5131,"line_start":94,"line_end":94,"column_start":1,"column_end":46}},{"value":"! [`ImageBuffer`]: struct.ImageBuffer.html","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":5132,"byte_end":5176,"line_start":95,"line_end":95,"column_start":1,"column_end":45}},{"value":"! [`DynamicImage`]: enum.DynamicImage.html","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":5177,"byte_end":5221,"line_start":96,"line_end":96,"column_start":1,"column_end":45}},{"value":"! [`flat`]: flat/index.html","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":5222,"byte_end":5251,"line_start":97,"line_end":97,"column_start":1,"column_end":30}},{"value":"!","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":5252,"byte_end":5255,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"! ## A note on format specific features","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":5256,"byte_end":5297,"line_start":99,"line_end":99,"column_start":1,"column_end":42}},{"value":"!","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":5298,"byte_end":5301,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"! One of the main goals of `image` is stability, in runtime but also for programmers. This","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":5302,"byte_end":5394,"line_start":101,"line_end":101,"column_start":1,"column_end":93}},{"value":"! ensures that performance as well as safety fixes reach a majority of its user base with little","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":5395,"byte_end":5493,"line_start":102,"line_end":102,"column_start":1,"column_end":99}},{"value":"! effort. Re-exporting all details of its dependencies would run counter to this goal as it","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":5494,"byte_end":5587,"line_start":103,"line_end":103,"column_start":1,"column_end":94}},{"value":"! linked _all_ major version bumps between them and `image`. As such, we are wary of exposing too","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":5588,"byte_end":5687,"line_start":104,"line_end":104,"column_start":1,"column_end":100}},{"value":"! many details, or configuration options, that are not shared between different image formats.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":5688,"byte_end":5784,"line_start":105,"line_end":105,"column_start":1,"column_end":97}},{"value":"!","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":5785,"byte_end":5788,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"! Nevertheless, the advantage of precise control is hard to ignore. We will thus consider","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":5789,"byte_end":5880,"line_start":107,"line_end":107,"column_start":1,"column_end":92}},{"value":"! _wrappers_, not direct re-exports, in either of the following cases:","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":5881,"byte_end":5953,"line_start":108,"line_end":108,"column_start":1,"column_end":73}},{"value":"!","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":5954,"byte_end":5957,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"! 1. A standard specifies that configuration _x_ is required for decoders/encoders and there","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":5958,"byte_end":6052,"line_start":110,"line_end":110,"column_start":1,"column_end":95}},{"value":"!    exists an essentially canonical way to control it.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":6053,"byte_end":6110,"line_start":111,"line_end":111,"column_start":1,"column_end":58}},{"value":"! 2. At least two different implementations agree on some (sub-)set of features in practice.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":6111,"byte_end":6205,"line_start":112,"line_end":112,"column_start":1,"column_end":95}},{"value":"! 3. A technical argument including measurements of the performance, space benefits, or otherwise","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":6206,"byte_end":6305,"line_start":113,"line_end":113,"column_start":1,"column_end":100}},{"value":"!    objectively quantified benefits can be made, and the added interface is unlikely to require","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":6306,"byte_end":6404,"line_start":114,"line_end":114,"column_start":1,"column_end":99}},{"value":"!    breaking changes.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":6405,"byte_end":6429,"line_start":115,"line_end":115,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":6430,"byte_end":6433,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"! Features that fulfill two or more criteria are preferred.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":6434,"byte_end":6495,"line_start":117,"line_end":117,"column_start":1,"column_end":62}},{"value":"!","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":6496,"byte_end":6499,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"! Re-exports of dependencies that reach version `1` will be discussed when it happens.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":6500,"byte_end":6588,"line_start":119,"line_end":119,"column_start":1,"column_end":89}},{"value":"warn(missing_docs)","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":6590,"byte_end":6612,"line_start":121,"line_end":121,"column_start":1,"column_end":23}},{"value":"warn(unused_qualifications)","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":6613,"byte_end":6644,"line_start":122,"line_end":122,"column_start":1,"column_end":32}},{"value":"deny(unreachable_pub)","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":6645,"byte_end":6670,"line_start":123,"line_end":123,"column_start":1,"column_end":26}},{"value":"deny(deprecated)","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":6671,"byte_end":6691,"line_start":124,"line_end":124,"column_start":1,"column_end":21}},{"value":"deny(missing_copy_implementations)","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":6692,"byte_end":6730,"line_start":125,"line_end":125,"column_start":1,"column_end":39}},{"value":"allow(clippy :: many_single_char_names)","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":6828,"byte_end":6869,"line_start":128,"line_end":128,"column_start":1,"column_end":42}}]},{"kind":"Mod","id":{"krate":0,"index":55},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::error","value":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","parent":null,"children":[{"krate":0,"index":56},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":3845},{"krate":0,"index":3864},{"krate":0,"index":3866},{"krate":0,"index":3869},{"krate":0,"index":3871},{"krate":0,"index":3893},{"krate":0,"index":3891},{"krate":0,"index":3888},{"krate":0,"index":3884},{"krate":0,"index":3885},{"krate":0,"index":3895},{"krate":0,"index":3898},{"krate":0,"index":3900},{"krate":0,"index":3903},{"krate":0,"index":3905},{"krate":0,"index":3927},{"krate":0,"index":3925},{"krate":0,"index":3922},{"krate":0,"index":3918},{"krate":0,"index":3919},{"krate":0,"index":3929},{"krate":0,"index":3932},{"krate":0,"index":3934},{"krate":0,"index":3936},{"krate":0,"index":3938},{"krate":0,"index":3958},{"krate":0,"index":3956},{"krate":0,"index":3953},{"krate":0,"index":3949},{"krate":0,"index":3950},{"krate":0,"index":3946},{"krate":0,"index":3947},{"krate":0,"index":3960},{"krate":0,"index":3984},{"krate":0,"index":3982},{"krate":0,"index":3979},{"krate":0,"index":3975},{"krate":0,"index":3976},{"krate":0,"index":63},{"krate":0,"index":67},{"krate":0,"index":72},{"krate":0,"index":77},{"krate":0,"index":80},{"krate":0,"index":83},{"krate":0,"index":85},{"krate":0,"index":87},{"krate":0,"index":89},{"krate":0,"index":91},{"krate":0,"index":93},{"krate":0,"index":95},{"krate":0,"index":97},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":102},{"krate":0,"index":104},{"krate":0,"index":106},{"krate":0,"index":108},{"krate":0,"index":110},{"krate":0,"index":112},{"krate":0,"index":114},{"krate":0,"index":115}],"decl_id":null,"docs":" Contains detailed error representation.","sig":null,"attributes":[{"value":"! Contains detailed error representation.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":10150,"byte_end":10193,"line_start":1,"line_end":1,"column_start":1,"column_end":44}},{"value":"!","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":10194,"byte_end":10197,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! See the main [`ImageError`] which contains a variant for each specialized error type. The","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":10198,"byte_end":10291,"line_start":3,"line_end":3,"column_start":1,"column_end":94}},{"value":"! subtypes used in each variant are opaque by design. They can be roughly inspected through their","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":10292,"byte_end":10391,"line_start":4,"line_end":4,"column_start":1,"column_end":100}},{"value":"! respective `kind` methods which work similar to `std::io::Error::kind`.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":10392,"byte_end":10467,"line_start":5,"line_end":5,"column_start":1,"column_end":76}},{"value":"!","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":10468,"byte_end":10471,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"! The error interface makes it possible to inspect the error of an underlying decoder or encoder,","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":10472,"byte_end":10571,"line_start":7,"line_end":7,"column_start":1,"column_end":100}},{"value":"! through the `Error::source` method. Note that this is not part of the stable interface and you","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":10572,"byte_end":10670,"line_start":8,"line_end":8,"column_start":1,"column_end":99}},{"value":"! may not rely on a particular error value for a particular operation. This means mainly that","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":10671,"byte_end":10766,"line_start":9,"line_end":9,"column_start":1,"column_end":96}},{"value":"! `image` does not promise to remain on a particular version of its underlying decoders but if","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":10767,"byte_end":10863,"line_start":10,"line_end":10,"column_start":1,"column_end":97}},{"value":"! you ensure to use the same version of the dependency (or at least of the error type) through","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":10864,"byte_end":10960,"line_start":11,"line_end":11,"column_start":1,"column_end":97}},{"value":"! external means then you could inspect the error type in slightly more detail.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":10961,"byte_end":11042,"line_start":12,"line_end":12,"column_start":1,"column_end":82}},{"value":"!","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":11043,"byte_end":11046,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"! [`ImageError`]: enum.ImageError.html","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":11047,"byte_end":11087,"line_start":14,"line_end":14,"column_start":1,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3846},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":11799,"byte_end":11807,"line_start":34,"line_end":34,"column_start":5,"column_end":13},"name":"Decoding","qualname":"::error::ImageError::Decoding","value":"ImageError::Decoding(DecodingError)","parent":{"krate":0,"index":3845},"children":[],"decl_id":null,"docs":" An error was encountered while decoding.","sig":null,"attributes":[{"value":"/ An error was encountered while decoding.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":11516,"byte_end":11560,"line_start":29,"line_end":29,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":11565,"byte_end":11568,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ This means that the input data did not conform to the specification of some image format,","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":11573,"byte_end":11666,"line_start":31,"line_end":31,"column_start":5,"column_end":98}},{"value":"/ or that no format could be determined, or that it did not match format specific","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":11671,"byte_end":11754,"line_start":32,"line_end":32,"column_start":5,"column_end":88}},{"value":"/ requirements set by the caller.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":11759,"byte_end":11794,"line_start":33,"line_end":33,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3849},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":12193,"byte_end":12201,"line_start":42,"line_end":42,"column_start":5,"column_end":13},"name":"Encoding","qualname":"::error::ImageError::Encoding","value":"ImageError::Encoding(EncodingError)","parent":{"krate":0,"index":3845},"children":[],"decl_id":null,"docs":" An error was encountered while encoding.","sig":null,"attributes":[{"value":"/ An error was encountered while encoding.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":11829,"byte_end":11873,"line_start":36,"line_end":36,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":11878,"byte_end":11881,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ The input image can not be encoded with the chosen format, for example because the","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":11886,"byte_end":11972,"line_start":38,"line_end":38,"column_start":5,"column_end":91}},{"value":"/ specification has no representation for its color space or because a necessary conversion","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":11977,"byte_end":12070,"line_start":39,"line_end":39,"column_start":5,"column_end":98}},{"value":"/ is ambiguous. In some cases it might also happen that the dimensions can not be used with","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":12075,"byte_end":12168,"line_start":40,"line_end":40,"column_start":5,"column_end":98}},{"value":"/ the format.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":12173,"byte_end":12188,"line_start":41,"line_end":41,"column_start":5,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3852},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":12441,"byte_end":12450,"line_start":48,"line_end":48,"column_start":5,"column_end":14},"name":"Parameter","qualname":"::error::ImageError::Parameter","value":"ImageError::Parameter(ParameterError)","parent":{"krate":0,"index":3845},"children":[],"decl_id":null,"docs":" An error was encountered in input arguments.","sig":null,"attributes":[{"value":"/ An error was encountered in input arguments.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":12223,"byte_end":12271,"line_start":44,"line_end":44,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":12276,"byte_end":12279,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ This is a catch-all case for strictly internal operations such as scaling, conversions,","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":12284,"byte_end":12375,"line_start":46,"line_end":46,"column_start":5,"column_end":96}},{"value":"/ etc. that involve no external format specifications.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":12380,"byte_end":12436,"line_start":47,"line_end":47,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3855},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":12710,"byte_end":12716,"line_start":54,"line_end":54,"column_start":5,"column_end":11},"name":"Limits","qualname":"::error::ImageError::Limits","value":"ImageError::Limits(LimitError)","parent":{"krate":0,"index":3845},"children":[],"decl_id":null,"docs":" Completing the operation would have required more resources than allowed.","sig":null,"attributes":[{"value":"/ Completing the operation would have required more resources than allowed.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":12473,"byte_end":12550,"line_start":50,"line_end":50,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":12555,"byte_end":12558,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ Errors of this type are limits set by the user or environment, *not* inherent in a specific","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":12563,"byte_end":12658,"line_start":52,"line_end":52,"column_start":5,"column_end":100}},{"value":"/ format or operation that was executed.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":12663,"byte_end":12705,"line_start":53,"line_end":53,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3858},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":13054,"byte_end":13065,"line_start":62,"line_end":62,"column_start":5,"column_end":16},"name":"Unsupported","qualname":"::error::ImageError::Unsupported","value":"ImageError::Unsupported(UnsupportedError)","parent":{"krate":0,"index":3845},"children":[],"decl_id":null,"docs":" An operation can not be completed by the chosen abstraction.","sig":null,"attributes":[{"value":"/ An operation can not be completed by the chosen abstraction.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":12735,"byte_end":12799,"line_start":56,"line_end":56,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":12804,"byte_end":12807,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ This means that it might be possible for the operation to succeed in general but","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":12812,"byte_end":12896,"line_start":58,"line_end":58,"column_start":5,"column_end":89}},{"value":"/ * it requires a disabled feature,","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":12901,"byte_end":12938,"line_start":59,"line_end":59,"column_start":5,"column_end":42}},{"value":"/ * the implementation does not yet exist, or","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":12943,"byte_end":12990,"line_start":60,"line_end":60,"column_start":5,"column_end":52}},{"value":"/ * no abstraction for a lower level could be found.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":12995,"byte_end":13049,"line_start":61,"line_end":61,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3861},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":13156,"byte_end":13163,"line_start":65,"line_end":65,"column_start":5,"column_end":12},"name":"IoError","qualname":"::error::ImageError::IoError","value":"ImageError::IoError(io::Error)","parent":{"krate":0,"index":3845},"children":[],"decl_id":null,"docs":" An error occurred while interacting with the environment.\n","sig":null,"attributes":[{"value":"/ An error occurred while interacting with the environment.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":13090,"byte_end":13151,"line_start":64,"line_end":64,"column_start":5,"column_end":66}}]},{"kind":"Enum","id":{"krate":0,"index":3845},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":11499,"byte_end":11509,"line_start":28,"line_end":28,"column_start":10,"column_end":20},"name":"ImageError","qualname":"::error::ImageError","value":"ImageError::{Decoding, Encoding, Parameter, Limits, Unsupported, IoError}","parent":null,"children":[{"krate":0,"index":3846},{"krate":0,"index":3849},{"krate":0,"index":3852},{"krate":0,"index":3855},{"krate":0,"index":3858},{"krate":0,"index":3861}],"decl_id":null,"docs":" The generic error type for image operations.","sig":null,"attributes":[{"value":"/ The generic error type for image operations.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":11241,"byte_end":11289,"line_start":23,"line_end":23,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":11290,"byte_end":11293,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ This high level enum allows, by variant matching, a rough separation of concerns between","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":11294,"byte_end":11386,"line_start":25,"line_end":25,"column_start":1,"column_end":93}},{"value":"/ underlying IO, the caller, format specifications, and the `image` implementation.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":11387,"byte_end":11472,"line_start":26,"line_end":26,"column_start":1,"column_end":86}}]},{"kind":"Struct","id":{"krate":0,"index":3866},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":13395,"byte_end":13411,"line_start":74,"line_end":74,"column_start":12,"column_end":28},"name":"UnsupportedError","qualname":"::error::UnsupportedError","value":"UnsupportedError {  }","parent":null,"children":[{"krate":0,"index":3867},{"krate":0,"index":3868}],"decl_id":null,"docs":" The implementation for an operation was not provided.","sig":null,"attributes":[{"value":"/ The implementation for an operation was not provided.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":13179,"byte_end":13236,"line_start":68,"line_end":68,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":13237,"byte_end":13240,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ See the variant [`Unsupported`] for more documentation.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":13241,"byte_end":13300,"line_start":70,"line_end":70,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":13301,"byte_end":13304,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ [`Unsupported`]: enum.ImageError.html#variant.Unsupported","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":13305,"byte_end":13366,"line_start":72,"line_end":72,"column_start":1,"column_end":62}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3872},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":13650,"byte_end":13655,"line_start":83,"line_end":83,"column_start":5,"column_end":10},"name":"Color","qualname":"::error::UnsupportedErrorKind::Color","value":"UnsupportedErrorKind::Color(ExtendedColorType)","parent":{"krate":0,"index":3871},"children":[],"decl_id":null,"docs":" The required color type can not be handled.\n","sig":null,"attributes":[{"value":"/ The required color type can not be handled.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":13598,"byte_end":13645,"line_start":82,"line_end":82,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3875},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":13722,"byte_end":13728,"line_start":85,"line_end":85,"column_start":5,"column_end":11},"name":"Format","qualname":"::error::UnsupportedErrorKind::Format","value":"UnsupportedErrorKind::Format(ImageFormatHint)","parent":{"krate":0,"index":3871},"children":[],"decl_id":null,"docs":" An image format is not supported.\n","sig":null,"attributes":[{"value":"/ An image format is not supported.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":13680,"byte_end":13717,"line_start":84,"line_end":84,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3878},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":13872,"byte_end":13886,"line_start":88,"line_end":88,"column_start":5,"column_end":19},"name":"GenericFeature","qualname":"::error::UnsupportedErrorKind::GenericFeature","value":"UnsupportedErrorKind::GenericFeature(String)","parent":{"krate":0,"index":3871},"children":[],"decl_id":null,"docs":" Some feature specified by string.\n This is discouraged and is likely to get deprecated (but not removed).\n","sig":null,"attributes":[{"value":"/ Some feature specified by string.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":13751,"byte_end":13788,"line_start":86,"line_end":86,"column_start":5,"column_end":42}},{"value":"/ This is discouraged and is likely to get deprecated (but not removed).","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":13793,"byte_end":13867,"line_start":87,"line_end":87,"column_start":5,"column_end":79}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3881},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":13919,"byte_end":13934,"line_start":90,"line_end":90,"column_start":5,"column_end":20},"name":"__NonExhaustive","qualname":"::error::UnsupportedErrorKind::__NonExhaustive","value":"UnsupportedErrorKind::__NonExhaustive(NonExhaustiveMarker)","parent":{"krate":0,"index":3871},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3871},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":13571,"byte_end":13591,"line_start":81,"line_end":81,"column_start":10,"column_end":30},"name":"UnsupportedErrorKind","qualname":"::error::UnsupportedErrorKind","value":"UnsupportedErrorKind::{Color, Format, GenericFeature, __NonExhaustive}","parent":null,"children":[{"krate":0,"index":3872},{"krate":0,"index":3875},{"krate":0,"index":3878},{"krate":0,"index":3881}],"decl_id":null,"docs":" Details what feature is not supported.\n","sig":null,"attributes":[{"value":"/ Details what feature is not supported.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":13478,"byte_end":13520,"line_start":79,"line_end":79,"column_start":1,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":3895},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":14253,"byte_end":14266,"line_start":100,"line_end":100,"column_start":12,"column_end":25},"name":"EncodingError","qualname":"::error::EncodingError","value":"EncodingError {  }","parent":null,"children":[{"krate":0,"index":3896},{"krate":0,"index":3897}],"decl_id":null,"docs":" An error was encountered while encoding an image.","sig":null,"attributes":[{"value":"/ An error was encountered while encoding an image.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":13960,"byte_end":14013,"line_start":93,"line_end":93,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":14014,"byte_end":14017,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ This is used as an opaque representation for the [`ImageError::Encoding`] variant. See its","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":14018,"byte_end":14112,"line_start":95,"line_end":95,"column_start":1,"column_end":95}},{"value":"/ documentation for more information.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":14113,"byte_end":14152,"line_start":96,"line_end":96,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":14153,"byte_end":14156,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ [`ImageError::Encoding`]: enum.ImageError.html#variant.Encoding","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":14157,"byte_end":14224,"line_start":98,"line_end":98,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":3900},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":14648,"byte_end":14662,"line_start":113,"line_end":113,"column_start":12,"column_end":26},"name":"ParameterError","qualname":"::error::ParameterError","value":"ParameterError {  }","parent":null,"children":[{"krate":0,"index":3901},{"krate":0,"index":3902}],"decl_id":null,"docs":" An error was encountered in inputs arguments.","sig":null,"attributes":[{"value":"/ An error was encountered in inputs arguments.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":14356,"byte_end":14405,"line_start":106,"line_end":106,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":14406,"byte_end":14409,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ This is used as an opaque representation for the [`ImageError::Parameter`] variant. See its","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":14410,"byte_end":14505,"line_start":108,"line_end":108,"column_start":1,"column_end":96}},{"value":"/ documentation for more information.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":14506,"byte_end":14545,"line_start":109,"line_end":109,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":14546,"byte_end":14549,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ [`ImageError::Parameter`]: enum.ImageError.html#variant.Parameter","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":14550,"byte_end":14619,"line_start":111,"line_end":111,"column_start":1,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3906},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":14910,"byte_end":14927,"line_start":122,"line_end":122,"column_start":5,"column_end":22},"name":"DimensionMismatch","qualname":"::error::ParameterErrorKind::DimensionMismatch","value":"ParameterErrorKind::DimensionMismatch","parent":{"krate":0,"index":3905},"children":[],"decl_id":null,"docs":" The dimensions passed are wrong.\n","sig":null,"attributes":[{"value":"/ The dimensions passed are wrong.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":14869,"byte_end":14905,"line_start":121,"line_end":121,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3908},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":15025,"byte_end":15038,"line_start":124,"line_end":124,"column_start":5,"column_end":18},"name":"FailedAlready","qualname":"::error::ParameterErrorKind::FailedAlready","value":"ParameterErrorKind::FailedAlready","parent":{"krate":0,"index":3905},"children":[],"decl_id":null,"docs":" Repeated an operation for which error that could not be cloned was emitted already.\n","sig":null,"attributes":[{"value":"/ Repeated an operation for which error that could not be cloned was emitted already.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":14933,"byte_end":15020,"line_start":123,"line_end":123,"column_start":5,"column_end":92}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3910},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":15166,"byte_end":15173,"line_start":127,"line_end":127,"column_start":5,"column_end":12},"name":"Generic","qualname":"::error::ParameterErrorKind::Generic","value":"ParameterErrorKind::Generic(String)","parent":{"krate":0,"index":3905},"children":[],"decl_id":null,"docs":" A string describing the parameter.\n This is discouraged and is likely to get deprecated (but not removed).\n","sig":null,"attributes":[{"value":"/ A string describing the parameter.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":15044,"byte_end":15082,"line_start":125,"line_end":125,"column_start":5,"column_end":43}},{"value":"/ This is discouraged and is likely to get deprecated (but not removed).","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":15087,"byte_end":15161,"line_start":126,"line_end":126,"column_start":5,"column_end":79}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3913},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":15234,"byte_end":15244,"line_start":129,"line_end":129,"column_start":5,"column_end":15},"name":"NoMoreData","qualname":"::error::ParameterErrorKind::NoMoreData","value":"ParameterErrorKind::NoMoreData","parent":{"krate":0,"index":3905},"children":[],"decl_id":null,"docs":" The end of the image has been reached.\n","sig":null,"attributes":[{"value":"/ The end of the image has been reached.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":15187,"byte_end":15229,"line_start":128,"line_end":128,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3915},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":15328,"byte_end":15343,"line_start":132,"line_end":132,"column_start":5,"column_end":20},"name":"__NonExhaustive","qualname":"::error::ParameterErrorKind::__NonExhaustive","value":"ParameterErrorKind::__NonExhaustive(NonExhaustiveMarker)","parent":{"krate":0,"index":3905},"children":[],"decl_id":null,"docs":" Do not use this, not part of stability guarantees.\n","sig":null,"attributes":[{"value":"/ Do not use this, not part of stability guarantees.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":15269,"byte_end":15323,"line_start":131,"line_end":131,"column_start":5,"column_end":59}}]},{"kind":"Enum","id":{"krate":0,"index":3905},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":14844,"byte_end":14862,"line_start":120,"line_end":120,"column_start":10,"column_end":28},"name":"ParameterErrorKind","qualname":"::error::ParameterErrorKind","value":"ParameterErrorKind::{DimensionMismatch, FailedAlready, Generic, NoMoreData, __NonExhaustive}","parent":null,"children":[{"krate":0,"index":3906},{"krate":0,"index":3908},{"krate":0,"index":3910},{"krate":0,"index":3913},{"krate":0,"index":3915}],"decl_id":null,"docs":" Details how a parameter is malformed.\n","sig":null,"attributes":[{"value":"/ Details how a parameter is malformed.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":14752,"byte_end":14793,"line_start":118,"line_end":118,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":3929},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":15662,"byte_end":15675,"line_start":142,"line_end":142,"column_start":12,"column_end":25},"name":"DecodingError","qualname":"::error::DecodingError","value":"DecodingError {  }","parent":null,"children":[{"krate":0,"index":3930},{"krate":0,"index":3931}],"decl_id":null,"docs":" An error was encountered while decoding an image.","sig":null,"attributes":[{"value":"/ An error was encountered while decoding an image.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":15369,"byte_end":15422,"line_start":135,"line_end":135,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":15423,"byte_end":15426,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ This is used as an opaque representation for the [`ImageError::Decoding`] variant. See its","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":15427,"byte_end":15521,"line_start":137,"line_end":137,"column_start":1,"column_end":95}},{"value":"/ documentation for more information.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":15522,"byte_end":15561,"line_start":138,"line_end":138,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":15562,"byte_end":15565,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ [`ImageError::Decoding`]: enum.ImageError.html#variant.Decoding","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":15566,"byte_end":15633,"line_start":140,"line_end":140,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":3934},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":16075,"byte_end":16085,"line_start":154,"line_end":154,"column_start":12,"column_end":22},"name":"LimitError","qualname":"::error::LimitError","value":"LimitError {  }","parent":null,"children":[{"krate":0,"index":3935}],"decl_id":null,"docs":" Completing the operation would have required more resources than allowed.","sig":null,"attributes":[{"value":"/ Completing the operation would have required more resources than allowed.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":15764,"byte_end":15841,"line_start":147,"line_end":147,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":15842,"byte_end":15845,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ This is used as an opaque representation for the [`ImageError::Limits`] variant. See its","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":15846,"byte_end":15938,"line_start":149,"line_end":149,"column_start":1,"column_end":93}},{"value":"/ documentation for more information.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":15939,"byte_end":15978,"line_start":150,"line_end":150,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":15979,"byte_end":15982,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ [`ImageError::Limits`]: enum.ImageError.html#variant.Limits","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":15983,"byte_end":16046,"line_start":152,"line_end":152,"column_start":1,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3939},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":16617,"byte_end":16631,"line_start":167,"line_end":167,"column_start":5,"column_end":19},"name":"DimensionError","qualname":"::error::LimitErrorKind::DimensionError","value":"LimitErrorKind::DimensionError","parent":{"krate":0,"index":3938},"children":[],"decl_id":null,"docs":" The resulting image exceed dimension limits in either direction.\n","sig":null,"attributes":[{"value":"/ The resulting image exceed dimension limits in either direction.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":16544,"byte_end":16612,"line_start":166,"line_end":166,"column_start":5,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3941},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":16715,"byte_end":16733,"line_start":169,"line_end":169,"column_start":5,"column_end":23},"name":"InsufficientMemory","qualname":"::error::LimitErrorKind::InsufficientMemory","value":"LimitErrorKind::InsufficientMemory","parent":{"krate":0,"index":3938},"children":[],"decl_id":null,"docs":" The operation would have performed an allocation larger than allowed.\n","sig":null,"attributes":[{"value":"/ The operation would have performed an allocation larger than allowed.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":16637,"byte_end":16710,"line_start":168,"line_end":168,"column_start":5,"column_end":78}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3943},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":16817,"byte_end":16832,"line_start":172,"line_end":172,"column_start":5,"column_end":20},"name":"__NonExhaustive","qualname":"::error::LimitErrorKind::__NonExhaustive","value":"LimitErrorKind::__NonExhaustive(NonExhaustiveMarker)","parent":{"krate":0,"index":3938},"children":[],"decl_id":null,"docs":" Do not use this, not part of stability guarantees.\n","sig":null,"attributes":[{"value":"/ Do not use this, not part of stability guarantees.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":16758,"byte_end":16812,"line_start":171,"line_end":171,"column_start":5,"column_end":59}}]},{"kind":"Enum","id":{"krate":0,"index":3938},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":16523,"byte_end":16537,"line_start":165,"line_end":165,"column_start":10,"column_end":24},"name":"LimitErrorKind","qualname":"::error::LimitErrorKind","value":"LimitErrorKind::{DimensionError, InsufficientMemory, __NonExhaustive}","parent":null,"children":[{"krate":0,"index":3939},{"krate":0,"index":3941},{"krate":0,"index":3943}],"decl_id":null,"docs":" Indicates the limit that prevented an operation from completing.","sig":null,"attributes":[{"value":"/ Indicates the limit that prevented an operation from completing.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":16156,"byte_end":16224,"line_start":159,"line_end":159,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":16225,"byte_end":16228,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ Note that this enumeration is not exhaustive and may in the future be extended to provide more","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":16229,"byte_end":16327,"line_start":161,"line_end":161,"column_start":1,"column_end":99}},{"value":"/ detailed information or to incorporate other resources types.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":16328,"byte_end":16393,"line_start":162,"line_end":162,"column_start":1,"column_end":66}},{"value":"allow(missing_copy_implementations)","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":16439,"byte_end":16477,"line_start":164,"line_end":164,"column_start":1,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3961},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":17019,"byte_end":17024,"line_start":179,"line_end":179,"column_start":5,"column_end":10},"name":"Exact","qualname":"::error::ImageFormatHint::Exact","value":"ImageFormatHint::Exact(ImageFormat)","parent":{"krate":0,"index":3960},"children":[],"decl_id":null,"docs":" The format is known exactly.\n","sig":null,"attributes":[{"value":"/ The format is known exactly.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":16982,"byte_end":17014,"line_start":178,"line_end":178,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3964},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":17092,"byte_end":17096,"line_start":182,"line_end":182,"column_start":5,"column_end":9},"name":"Name","qualname":"::error::ImageFormatHint::Name","value":"ImageFormatHint::Name(String)","parent":{"krate":0,"index":3960},"children":[],"decl_id":null,"docs":" The format can be identified by a name.\n","sig":null,"attributes":[{"value":"/ The format can be identified by a name.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":17044,"byte_end":17087,"line_start":181,"line_end":181,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3967},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":17168,"byte_end":17181,"line_start":185,"line_end":185,"column_start":5,"column_end":18},"name":"PathExtension","qualname":"::error::ImageFormatHint::PathExtension","value":"ImageFormatHint::PathExtension(std::path::PathBuf)","parent":{"krate":0,"index":3960},"children":[],"decl_id":null,"docs":" A common path extension for the format is known.\n","sig":null,"attributes":[{"value":"/ A common path extension for the format is known.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":17111,"byte_end":17163,"line_start":184,"line_end":184,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3970},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":17268,"byte_end":17275,"line_start":188,"line_end":188,"column_start":5,"column_end":12},"name":"Unknown","qualname":"::error::ImageFormatHint::Unknown","value":"ImageFormatHint::Unknown","parent":{"krate":0,"index":3960},"children":[],"decl_id":null,"docs":" The format is not known or could not be determined.\n","sig":null,"attributes":[{"value":"/ The format is not known or could not be determined.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":17208,"byte_end":17263,"line_start":187,"line_end":187,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3972},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":17301,"byte_end":17316,"line_start":191,"line_end":191,"column_start":5,"column_end":20},"name":"__NonExhaustive","qualname":"::error::ImageFormatHint::__NonExhaustive","value":"ImageFormatHint::__NonExhaustive(NonExhaustiveMarker)","parent":{"krate":0,"index":3960},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3960},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":16960,"byte_end":16975,"line_start":177,"line_end":177,"column_start":10,"column_end":25},"name":"ImageFormatHint","qualname":"::error::ImageFormatHint","value":"ImageFormatHint::{Exact, Name, PathExtension, Unknown, __NonExhaustive}","parent":null,"children":[{"krate":0,"index":3961},{"krate":0,"index":3964},{"krate":0,"index":3967},{"krate":0,"index":3970},{"krate":0,"index":3972}],"decl_id":null,"docs":" A best effort representation for image formats.\n","sig":null,"attributes":[{"value":"/ A best effort representation for image formats.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":16858,"byte_end":16909,"line_start":175,"line_end":175,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":64},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":17588,"byte_end":17608,"line_start":199,"line_end":199,"column_start":12,"column_end":32},"name":"from_format_and_kind","qualname":"<UnsupportedError>::from_format_and_kind","value":"fn (format: ImageFormatHint, kind: UnsupportedErrorKind) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an `UnsupportedError` for an image with details on the unsupported feature.","sig":null,"attributes":[{"value":"/ Create an `UnsupportedError` for an image with details on the unsupported feature.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":17370,"byte_end":17456,"line_start":195,"line_end":195,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":17461,"byte_end":17464,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ If the operation was not connected to a particular image format then the hint may be","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":17469,"byte_end":17557,"line_start":197,"line_end":197,"column_start":5,"column_end":93}},{"value":"/ `Unknown`.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":17562,"byte_end":17576,"line_start":198,"line_end":198,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":65},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":17836,"byte_end":17840,"line_start":207,"line_end":207,"column_start":12,"column_end":16},"name":"kind","qualname":"<UnsupportedError>::kind","value":"fn (&self) -> UnsupportedErrorKind","parent":null,"children":[],"decl_id":null,"docs":" Returns the corresponding `UnsupportedErrorKind` of the error.\n","sig":null,"attributes":[{"value":"/ Returns the corresponding `UnsupportedErrorKind` of the error.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":17758,"byte_end":17824,"line_start":206,"line_end":206,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":17979,"byte_end":17990,"line_start":212,"line_end":212,"column_start":12,"column_end":23},"name":"format_hint","qualname":"<UnsupportedError>::format_hint","value":"fn (&self) -> ImageFormatHint","parent":null,"children":[],"decl_id":null,"docs":" Returns the image format associated with this error.\n","sig":null,"attributes":[{"value":"/ Returns the image format associated with this error.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":17911,"byte_end":17967,"line_start":211,"line_end":211,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":68},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":18182,"byte_end":18185,"line_start":219,"line_end":219,"column_start":12,"column_end":15},"name":"new","qualname":"<DecodingError>::new","value":"fn (format: ImageFormatHint, err: impl Into<Box<dyn Error + Send + Sync>>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a `DecodingError` that stems from an arbitrary error of an underlying decoder.\n","sig":null,"attributes":[{"value":"/ Create a `DecodingError` that stems from an arbitrary error of an underlying decoder.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":18081,"byte_end":18170,"line_start":218,"line_end":218,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":70},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":18553,"byte_end":18569,"line_start":232,"line_end":232,"column_start":12,"column_end":28},"name":"from_format_hint","qualname":"<DecodingError>::from_format_hint","value":"fn (format: ImageFormatHint) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a `DecodingError` for an image format.","sig":null,"attributes":[{"value":"/ Create a `DecodingError` for an image format.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":18397,"byte_end":18446,"line_start":229,"line_end":229,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":18451,"byte_end":18454,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ The error will not contain any further information but is very easy to create.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":18459,"byte_end":18541,"line_start":231,"line_end":231,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":71},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":18768,"byte_end":18779,"line_start":240,"line_end":240,"column_start":12,"column_end":23},"name":"format_hint","qualname":"<DecodingError>::format_hint","value":"fn (&self) -> ImageFormatHint","parent":null,"children":[],"decl_id":null,"docs":" Returns the image format associated with this error.\n","sig":null,"attributes":[{"value":"/ Returns the image format associated with this error.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":18700,"byte_end":18756,"line_start":239,"line_end":239,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":73},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":18972,"byte_end":18975,"line_start":247,"line_end":247,"column_start":12,"column_end":15},"name":"new","qualname":"<EncodingError>::new","value":"fn (format: ImageFormatHint, err: impl Into<Box<dyn Error + Send + Sync>>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an `EncodingError` that stems from an arbitrary error of an underlying encoder.\n","sig":null,"attributes":[{"value":"/ Create an `EncodingError` that stems from an arbitrary error of an underlying encoder.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":18870,"byte_end":18960,"line_start":246,"line_end":246,"column_start":5,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":75},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":19344,"byte_end":19360,"line_start":260,"line_end":260,"column_start":12,"column_end":28},"name":"from_format_hint","qualname":"<EncodingError>::from_format_hint","value":"fn (format: ImageFormatHint) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an `EncodingError` for an image format.","sig":null,"attributes":[{"value":"/ Create an `EncodingError` for an image format.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":19187,"byte_end":19237,"line_start":257,"line_end":257,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":19242,"byte_end":19245,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ The error will not contain any further information but is very easy to create.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":19250,"byte_end":19332,"line_start":259,"line_end":259,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":76},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":19558,"byte_end":19569,"line_start":268,"line_end":268,"column_start":12,"column_end":23},"name":"format_hint","qualname":"<EncodingError>::format_hint","value":"fn (&self) -> ImageFormatHint","parent":null,"children":[],"decl_id":null,"docs":" Return the image format associated with this error.\n","sig":null,"attributes":[{"value":"/ Return the image format associated with this error.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":19491,"byte_end":19546,"line_start":267,"line_end":267,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":19741,"byte_end":19750,"line_start":275,"line_end":275,"column_start":12,"column_end":21},"name":"from_kind","qualname":"<ParameterError>::from_kind","value":"fn (kind: ParameterErrorKind) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a `ParameterError` directly from a corresponding kind.\n","sig":null,"attributes":[{"value":"/ Construct a `ParameterError` directly from a corresponding kind.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":19661,"byte_end":19729,"line_start":274,"line_end":274,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":79},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":19957,"byte_end":19961,"line_start":283,"line_end":283,"column_start":12,"column_end":16},"name":"kind","qualname":"<ParameterError>::kind","value":"fn (&self) -> ParameterErrorKind","parent":null,"children":[],"decl_id":null,"docs":" Returns the corresponding `ParameterErrorKind` of the error.\n","sig":null,"attributes":[{"value":"/ Returns the corresponding `ParameterErrorKind` of the error.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":19881,"byte_end":19945,"line_start":282,"line_end":282,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":81},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":20134,"byte_end":20143,"line_start":290,"line_end":290,"column_start":12,"column_end":21},"name":"from_kind","qualname":"<LimitError>::from_kind","value":"fn (kind: LimitErrorKind) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a generic `LimitError` directly from a corresponding kind.\n","sig":null,"attributes":[{"value":"/ Construct a generic `LimitError` directly from a corresponding kind.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":20050,"byte_end":20122,"line_start":289,"line_end":289,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":20308,"byte_end":20312,"line_start":297,"line_end":297,"column_start":12,"column_end":16},"name":"kind","qualname":"<LimitError>::kind","value":"fn (&self) -> LimitErrorKind","parent":null,"children":[],"decl_id":null,"docs":" Returns the corresponding `LimitErrorKind` of the error.\n","sig":null,"attributes":[{"value":"/ Returns the corresponding `LimitErrorKind` of the error.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":20236,"byte_end":20296,"line_start":296,"line_end":296,"column_start":5,"column_end":65}}]},{"kind":"Type","id":{"krate":0,"index":91},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":21191,"byte_end":21202,"line_start":333,"line_end":333,"column_start":10,"column_end":21},"name":"ImageResult","qualname":"::error::ImageResult","value":"Result<T, ImageError>","parent":null,"children":[],"decl_id":null,"docs":" Result of an image decoding/encoding process\n","sig":null,"attributes":[{"value":"/ Result of an image decoding/encoding process","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":21133,"byte_end":21181,"line_start":332,"line_end":332,"column_start":1,"column_end":49}}]},{"kind":"Mod","id":{"krate":0,"index":117},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":8311,"byte_end":8317,"line_start":184,"line_end":184,"column_start":9,"column_end":15},"name":"buffer","qualname":"::buffer","value":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","parent":null,"children":[{"krate":0,"index":118}],"decl_id":null,"docs":" Iterators and other auxiliary structure for the `ImageBuffer` type.\n","sig":null,"attributes":[{"value":"/ Iterators and other auxiliary structure for the `ImageBuffer` type.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":8231,"byte_end":8302,"line_start":183,"line_end":183,"column_start":1,"column_end":72}}]},{"kind":"Mod","id":{"krate":0,"index":128},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/math/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"math","qualname":"::math","value":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/math/mod.rs","parent":null,"children":[{"krate":0,"index":129},{"krate":0,"index":170},{"krate":0,"index":173},{"krate":0,"index":174}],"decl_id":null,"docs":" Mathematical helper functions and types.\n","sig":null,"attributes":[{"value":"! Mathematical helper functions and types.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/math/mod.rs","byte_start":27835,"byte_end":27879,"line_start":1,"line_end":1,"column_start":1,"column_end":45}}]},{"kind":"Mod","id":{"krate":0,"index":129},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/math/nq.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"nq","qualname":"::math::nq","value":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/math/nq.rs","parent":null,"children":[{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":3986},{"krate":0,"index":3994},{"krate":0,"index":3992},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":153}],"decl_id":null,"docs":" NEUQUANT Neural-Net quantization algorithm by Anthony Dekker, 1994.\n See \"Kohonen neural networks for optimal colour quantization\"\n in \"Network: Computation in Neural Systems\" Vol. 5 (1994) pp 351-367.\n for a discussion of the algorithm.\n See also <https://scientificgems.wordpress.com/stuff/neuquant-fast-high-quality-image-quantization/>\n","sig":null,"attributes":[{"value":"! NEUQUANT Neural-Net quantization algorithm by Anthony Dekker, 1994.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/math/nq.rs","byte_start":27945,"byte_end":28016,"line_start":1,"line_end":1,"column_start":1,"column_end":72}},{"value":"! See \"Kohonen neural networks for optimal colour quantization\"","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/math/nq.rs","byte_start":28017,"byte_end":28082,"line_start":2,"line_end":2,"column_start":1,"column_end":66}},{"value":"! in \"Network: Computation in Neural Systems\" Vol. 5 (1994) pp 351-367.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/math/nq.rs","byte_start":28083,"byte_end":28156,"line_start":3,"line_end":3,"column_start":1,"column_end":74}},{"value":"! for a discussion of the algorithm.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/math/nq.rs","byte_start":28157,"byte_end":28195,"line_start":4,"line_end":4,"column_start":1,"column_end":39}},{"value":"! See also <https://scientificgems.wordpress.com/stuff/neuquant-fast-high-quality-image-quantization/>","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/math/nq.rs","byte_start":28196,"byte_end":28300,"line_start":5,"line_end":5,"column_start":1,"column_end":105}}]},{"kind":"Struct","id":{"krate":0,"index":145},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/math/nq.rs","byte_start":31835,"byte_end":31843,"line_start":101,"line_end":101,"column_start":12,"column_end":20},"name":"NeuQuant","qualname":"::math::nq::NeuQuant","value":"NeuQuant {  }","parent":null,"children":[{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":152}],"decl_id":null,"docs":" Neural network color quantizer","sig":null,"attributes":[{"value":"/ Neural network color quantizer","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/math/nq.rs","byte_start":30138,"byte_end":30172,"line_start":62,"line_end":62,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/math/nq.rs","byte_start":30173,"byte_end":30176,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/math/nq.rs","byte_start":30177,"byte_end":30191,"line_start":64,"line_end":64,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/math/nq.rs","byte_start":30192,"byte_end":30199,"line_start":65,"line_end":65,"column_start":1,"column_end":8}},{"value":"/ use image::imageops::colorops::{index_colors, ColorMap};","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/math/nq.rs","byte_start":30200,"byte_end":30260,"line_start":66,"line_end":66,"column_start":1,"column_end":61}},{"value":"/ use image::math::nq::NeuQuant;","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/math/nq.rs","byte_start":30261,"byte_end":30295,"line_start":67,"line_end":67,"column_start":1,"column_end":35}},{"value":"/ use image::{ImageBuffer, Rgba, RgbaImage};","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/math/nq.rs","byte_start":30296,"byte_end":30342,"line_start":68,"line_end":68,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/math/nq.rs","byte_start":30343,"byte_end":30346,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ // Create simple color image with RGBA pixels.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/math/nq.rs","byte_start":30347,"byte_end":30397,"line_start":70,"line_end":70,"column_start":1,"column_end":51}},{"value":"/ let (w, h) = (2, 2);","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/math/nq.rs","byte_start":30398,"byte_end":30422,"line_start":71,"line_end":71,"column_start":1,"column_end":25}},{"value":"/ let red: Rgba<u8> = [255, 0, 0, 255].into();","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/math/nq.rs","byte_start":30423,"byte_end":30471,"line_start":72,"line_end":72,"column_start":1,"column_end":49}},{"value":"/ let green: Rgba<u8> = [0, 255, 0, 255].into();","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/math/nq.rs","byte_start":30472,"byte_end":30522,"line_start":73,"line_end":73,"column_start":1,"column_end":51}},{"value":"/ let blue: Rgba<u8> = [0, 0, 255, 255].into();","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/math/nq.rs","byte_start":30523,"byte_end":30572,"line_start":74,"line_end":74,"column_start":1,"column_end":50}},{"value":"/ let white: Rgba<u8> = [255, 255, 255, 255].into();","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/math/nq.rs","byte_start":30573,"byte_end":30627,"line_start":75,"line_end":75,"column_start":1,"column_end":55}},{"value":"/ let mut color_image = RgbaImage::new(w, h);","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/math/nq.rs","byte_start":30628,"byte_end":30675,"line_start":76,"line_end":76,"column_start":1,"column_end":48}},{"value":"/ color_image.put_pixel(0, 0, red);","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/math/nq.rs","byte_start":30676,"byte_end":30713,"line_start":77,"line_end":77,"column_start":1,"column_end":38}},{"value":"/ color_image.put_pixel(1, 0, green);","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/math/nq.rs","byte_start":30714,"byte_end":30753,"line_start":78,"line_end":78,"column_start":1,"column_end":40}},{"value":"/ color_image.put_pixel(0, 1, blue);","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/math/nq.rs","byte_start":30754,"byte_end":30792,"line_start":79,"line_end":79,"column_start":1,"column_end":39}},{"value":"/ color_image.put_pixel(1, 1, white);","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/math/nq.rs","byte_start":30793,"byte_end":30832,"line_start":80,"line_end":80,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/math/nq.rs","byte_start":30833,"byte_end":30836,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ // Create a `NeuQuant` colormap that will build an approximate color palette that best matches","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/math/nq.rs","byte_start":30837,"byte_end":30935,"line_start":82,"line_end":82,"column_start":1,"column_end":99}},{"value":"/ // the original image.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/math/nq.rs","byte_start":30936,"byte_end":30962,"line_start":83,"line_end":83,"column_start":1,"column_end":27}},{"value":"/ // Note, the NeuQuant algorithm is only designed to work with 6-8 bit output, so `colors`","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/math/nq.rs","byte_start":30963,"byte_end":31056,"line_start":84,"line_end":84,"column_start":1,"column_end":94}},{"value":"/ // should be a power of 2 in the range [64, 256].","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/math/nq.rs","byte_start":31057,"byte_end":31110,"line_start":85,"line_end":85,"column_start":1,"column_end":54}},{"value":"/ let pixels = color_image.clone().into_raw();","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/math/nq.rs","byte_start":31111,"byte_end":31159,"line_start":86,"line_end":86,"column_start":1,"column_end":49}},{"value":"/ let cmap = NeuQuant::new(1, 256, &pixels);","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/math/nq.rs","byte_start":31160,"byte_end":31206,"line_start":87,"line_end":87,"column_start":1,"column_end":47}},{"value":"/ // Map the original image through the color map to create an indexed image stored in a","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/math/nq.rs","byte_start":31207,"byte_end":31297,"line_start":88,"line_end":88,"column_start":1,"column_end":91}},{"value":"/ // `GrayImage`.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/math/nq.rs","byte_start":31298,"byte_end":31317,"line_start":89,"line_end":89,"column_start":1,"column_end":20}},{"value":"/ let palletized = index_colors(&color_image, &cmap);","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/math/nq.rs","byte_start":31318,"byte_end":31373,"line_start":90,"line_end":90,"column_start":1,"column_end":56}},{"value":"/ // Map indexed image back `RgbaImage`.  Note the NeuQuant algorithm creates an approximation of","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/math/nq.rs","byte_start":31374,"byte_end":31473,"line_start":91,"line_end":91,"column_start":1,"column_end":100}},{"value":"/ // the original colors, so even in this simple example the output is not pixel equivalent to","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/math/nq.rs","byte_start":31474,"byte_end":31570,"line_start":92,"line_end":92,"column_start":1,"column_end":97}},{"value":"/ // the original.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/math/nq.rs","byte_start":31571,"byte_end":31591,"line_start":93,"line_end":93,"column_start":1,"column_end":21}},{"value":"/ let mapped = ImageBuffer::from_fn(w, h, |x, y| -> Rgba<u8> {","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/math/nq.rs","byte_start":31592,"byte_end":31656,"line_start":94,"line_end":94,"column_start":1,"column_end":65}},{"value":"/     let p = palletized.get_pixel(x, y);","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/math/nq.rs","byte_start":31657,"byte_end":31700,"line_start":95,"line_end":95,"column_start":1,"column_end":44}},{"value":"/     cmap.lookup(p.0[0] as usize)","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/math/nq.rs","byte_start":31701,"byte_end":31737,"line_start":96,"line_end":96,"column_start":1,"column_end":37}},{"value":"/         .expect(\"indexed color out-of-range\")","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/math/nq.rs","byte_start":31738,"byte_end":31787,"line_start":97,"line_end":97,"column_start":1,"column_end":50}},{"value":"/         .into()","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/math/nq.rs","byte_start":31788,"byte_end":31807,"line_start":98,"line_end":98,"column_start":1,"column_end":20}},{"value":"/ });","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/math/nq.rs","byte_start":31808,"byte_end":31815,"line_start":99,"line_end":99,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/math/nq.rs","byte_start":31816,"byte_end":31823,"line_start":100,"line_end":100,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/math/nq.rs","byte_start":32145,"byte_end":32148,"line_start":113,"line_end":113,"column_start":12,"column_end":15},"name":"new","qualname":"<NeuQuant>::new","value":"fn (samplefac: i32, colors: usize, pixels: &[u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new neural network and trains it with the supplied data\n","sig":null,"attributes":[{"value":"/ Creates a new neural network and trains it with the supplied data","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/math/nq.rs","byte_start":32064,"byte_end":32133,"line_start":112,"line_end":112,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":155},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/math/nq.rs","byte_start":32689,"byte_end":32693,"line_start":129,"line_end":129,"column_start":12,"column_end":16},"name":"init","qualname":"<NeuQuant>::init","value":"fn (&mut self, pixels: &[u8]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Initializes the neural network and trains it with the supplied data\n","sig":null,"attributes":[{"value":"/ Initializes the neural network and trains it with the supplied data","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/math/nq.rs","byte_start":32606,"byte_end":32677,"line_start":128,"line_end":128,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/math/nq.rs","byte_start":33683,"byte_end":33692,"line_start":161,"line_end":161,"column_start":12,"column_end":21},"name":"map_pixel","qualname":"<NeuQuant>::map_pixel","value":"fn (&self, pixel: &mut [u8]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Maps the pixel in-place to the best-matching color in the color map\n","sig":null,"attributes":[{"value":"/ Maps the pixel in-place to the best-matching color in the color map","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/math/nq.rs","byte_start":33578,"byte_end":33649,"line_start":159,"line_end":159,"column_start":5,"column_end":76}},{"value":"inline(always)","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/math/nq.rs","byte_start":33654,"byte_end":33671,"line_start":160,"line_end":160,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":157},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/math/nq.rs","byte_start":34244,"byte_end":34252,"line_start":176,"line_end":176,"column_start":12,"column_end":20},"name":"index_of","qualname":"<NeuQuant>::index_of","value":"fn (&self, pixel: &[u8]) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Finds the best-matching index in the color map for `pixel`\n","sig":null,"attributes":[{"value":"/ Finds the best-matching index in the color map for `pixel`","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/math/nq.rs","byte_start":34148,"byte_end":34210,"line_start":174,"line_end":174,"column_start":5,"column_end":67}},{"value":"inline(always)","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/math/nq.rs","byte_start":34215,"byte_end":34232,"line_start":175,"line_end":175,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/math/nq.rs","byte_start":34532,"byte_end":34538,"line_start":184,"line_end":184,"column_start":12,"column_end":18},"name":"lookup","qualname":"<NeuQuant>::lookup","value":"fn (&self, idx: usize) -> Option<[u8; 4]>","parent":null,"children":[],"decl_id":null,"docs":" Lookup pixel values for color at `idx` in the colormap.\n","sig":null,"attributes":[{"value":"/ Lookup pixel values for color at `idx` in the colormap.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/math/nq.rs","byte_start":34461,"byte_end":34520,"line_start":183,"line_end":183,"column_start":5,"column_end":64}}]},{"kind":"Mod","id":{"krate":0,"index":170},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/math/utils.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"utils","qualname":"::math::utils","value":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/math/utils.rs","parent":null,"children":[{"krate":0,"index":171}],"decl_id":null,"docs":" Shared mathematical utility functions.\n","sig":null,"attributes":[{"value":"! Shared mathematical utility functions.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/math/utils.rs","byte_start":44168,"byte_end":44210,"line_start":1,"line_end":1,"column_start":1,"column_end":43}}]},{"kind":"Function","id":{"krate":0,"index":171},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/math/utils.rs","byte_start":44455,"byte_end":44460,"line_start":13,"line_end":13,"column_start":8,"column_end":13},"name":"clamp","qualname":"::math::utils::clamp","value":"fn <N> (a: N, min: N, max: N) -> N","parent":null,"children":[],"decl_id":null,"docs":" Cut value to be inside given range","sig":null,"attributes":[{"value":"/ Cut value to be inside given range","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/math/utils.rs","byte_start":44212,"byte_end":44250,"line_start":3,"line_end":3,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/math/utils.rs","byte_start":44251,"byte_end":44254,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/math/utils.rs","byte_start":44255,"byte_end":44262,"line_start":5,"line_end":5,"column_start":1,"column_end":8}},{"value":"/ use image::math::utils;","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/math/utils.rs","byte_start":44263,"byte_end":44290,"line_start":6,"line_end":6,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/math/utils.rs","byte_start":44291,"byte_end":44294,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(utils::clamp(-5, 0, 10),  0);","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/math/utils.rs","byte_start":44295,"byte_end":44339,"line_start":8,"line_end":8,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(utils::clamp( 6, 0, 10),  6);","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/math/utils.rs","byte_start":44340,"byte_end":44384,"line_start":9,"line_end":9,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(utils::clamp(15, 0, 10), 10);","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/math/utils.rs","byte_start":44385,"byte_end":44429,"line_start":10,"line_end":10,"column_start":1,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/math/utils.rs","byte_start":44430,"byte_end":44437,"line_start":11,"line_end":11,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/math/utils.rs","byte_start":44438,"byte_end":44447,"line_start":12,"line_end":12,"column_start":1,"column_end":10}}]},{"kind":"Struct","id":{"krate":0,"index":3997},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/math/rect.rs","byte_start":44741,"byte_end":44745,"line_start":3,"line_end":3,"column_start":12,"column_end":16},"name":"Rect","qualname":"::math::rect::Rect","value":"Rect { x, y, width, height }","parent":null,"children":[{"krate":0,"index":3998},{"krate":0,"index":3999},{"krate":0,"index":4000},{"krate":0,"index":4001}],"decl_id":null,"docs":" A Rectangle defined by its top left corner, width and height.\n","sig":null,"attributes":[{"value":"/ A Rectangle defined by its top left corner, width and height.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/math/rect.rs","byte_start":44613,"byte_end":44678,"line_start":1,"line_end":1,"column_start":1,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":3998},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/math/rect.rs","byte_start":44805,"byte_end":44806,"line_start":5,"line_end":5,"column_start":9,"column_end":10},"name":"x","qualname":"::math::rect::Rect::x","value":"u32","parent":{"krate":0,"index":3997},"children":[],"decl_id":null,"docs":" The x coordinate of the top left corner.\n","sig":null,"attributes":[{"value":"/ The x coordinate of the top left corner.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/math/rect.rs","byte_start":44752,"byte_end":44796,"line_start":4,"line_end":4,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":3999},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/math/rect.rs","byte_start":44870,"byte_end":44871,"line_start":7,"line_end":7,"column_start":9,"column_end":10},"name":"y","qualname":"::math::rect::Rect::y","value":"u32","parent":{"krate":0,"index":3997},"children":[],"decl_id":null,"docs":" The y coordinate of the top left corner.\n","sig":null,"attributes":[{"value":"/ The y coordinate of the top left corner.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/math/rect.rs","byte_start":44817,"byte_end":44861,"line_start":6,"line_end":6,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":4000},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/math/rect.rs","byte_start":44917,"byte_end":44922,"line_start":9,"line_end":9,"column_start":9,"column_end":14},"name":"width","qualname":"::math::rect::Rect::width","value":"u32","parent":{"krate":0,"index":3997},"children":[],"decl_id":null,"docs":" The rectangle's width.\n","sig":null,"attributes":[{"value":"/ The rectangle's width.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/math/rect.rs","byte_start":44882,"byte_end":44908,"line_start":8,"line_end":8,"column_start":5,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":4001},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/math/rect.rs","byte_start":44969,"byte_end":44975,"line_start":11,"line_end":11,"column_start":9,"column_end":15},"name":"height","qualname":"::math::rect::Rect::height","value":"u32","parent":{"krate":0,"index":3997},"children":[],"decl_id":null,"docs":" The rectangle's height.\n","sig":null,"attributes":[{"value":"/ The rectangle's height.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/math/rect.rs","byte_start":44933,"byte_end":44960,"line_start":10,"line_end":10,"column_start":5,"column_end":32}}]},{"kind":"Mod","id":{"krate":0,"index":175},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"imageops","qualname":"::imageops","value":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/mod.rs","parent":null,"children":[{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":189},{"krate":0,"index":203},{"krate":0,"index":209},{"krate":0,"index":219},{"krate":0,"index":260},{"krate":0,"index":330},{"krate":0,"index":415},{"krate":0,"index":417},{"krate":0,"index":419},{"krate":0,"index":421},{"krate":0,"index":422},{"krate":0,"index":425}],"decl_id":null,"docs":" Image Processing Functions\n","sig":null,"attributes":[{"value":"! Image Processing Functions","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/mod.rs","byte_start":44985,"byte_end":45015,"line_start":1,"line_end":1,"column_start":1,"column_end":31}}]},{"kind":"Function","id":{"krate":0,"index":229},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/affine.rs","byte_start":53453,"byte_end":53461,"line_start":9,"line_end":9,"column_start":8,"column_end":16},"name":"rotate90","qualname":"::imageops::affine::rotate90","value":"fn <I> (image: &I) -> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>>","parent":null,"children":[],"decl_id":null,"docs":" Rotate an image 90 degrees clockwise.\n","sig":null,"attributes":[{"value":"/ Rotate an image 90 degrees clockwise.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/affine.rs","byte_start":53404,"byte_end":53445,"line_start":8,"line_end":8,"column_start":1,"column_end":42}}]},{"kind":"Function","id":{"krate":0,"index":231},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/affine.rs","byte_start":53793,"byte_end":53802,"line_start":21,"line_end":21,"column_start":8,"column_end":17},"name":"rotate180","qualname":"::imageops::affine::rotate180","value":"fn <I> (image: &I) -> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>>","parent":null,"children":[],"decl_id":null,"docs":" Rotate an image 180 degrees clockwise.\n","sig":null,"attributes":[{"value":"/ Rotate an image 180 degrees clockwise.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/affine.rs","byte_start":53743,"byte_end":53785,"line_start":20,"line_end":20,"column_start":1,"column_end":43}}]},{"kind":"Function","id":{"krate":0,"index":233},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/affine.rs","byte_start":54135,"byte_end":54144,"line_start":33,"line_end":33,"column_start":8,"column_end":17},"name":"rotate270","qualname":"::imageops::affine::rotate270","value":"fn <I> (image: &I) -> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>>","parent":null,"children":[],"decl_id":null,"docs":" Rotate an image 270 degrees clockwise.\n","sig":null,"attributes":[{"value":"/ Rotate an image 270 degrees clockwise.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/affine.rs","byte_start":54085,"byte_end":54127,"line_start":32,"line_end":32,"column_start":1,"column_end":43}}]},{"kind":"Function","id":{"krate":0,"index":235},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/affine.rs","byte_start":54532,"byte_end":54543,"line_start":45,"line_end":45,"column_start":8,"column_end":19},"name":"rotate90_in","qualname":"::imageops::affine::rotate90_in","value":"fn <I, Container> (image: &I, destination: &mut ImageBuffer<I::Pixel, Container>) -> crate::ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Rotate an image 90 degrees clockwise and put the result into the destination [`ImageBuffer`].\n","sig":null,"attributes":[{"value":"/ Rotate an image 90 degrees clockwise and put the result into the destination [`ImageBuffer`].","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/affine.rs","byte_start":54427,"byte_end":54524,"line_start":44,"line_end":44,"column_start":1,"column_end":98}}]},{"kind":"Function","id":{"krate":0,"index":238},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/affine.rs","byte_start":55317,"byte_end":55329,"line_start":70,"line_end":70,"column_start":8,"column_end":20},"name":"rotate180_in","qualname":"::imageops::affine::rotate180_in","value":"fn <I, Container> (image: &I, destination: &mut ImageBuffer<I::Pixel, Container>) -> crate::ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Rotate an image 180 degrees clockwise and put the result into the destination [`ImageBuffer`].\n","sig":null,"attributes":[{"value":"/ Rotate an image 180 degrees clockwise and put the result into the destination [`ImageBuffer`].","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/affine.rs","byte_start":55211,"byte_end":55309,"line_start":69,"line_end":69,"column_start":1,"column_end":99}}]},{"kind":"Function","id":{"krate":0,"index":241},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/affine.rs","byte_start":56112,"byte_end":56124,"line_start":95,"line_end":95,"column_start":8,"column_end":20},"name":"rotate270_in","qualname":"::imageops::affine::rotate270_in","value":"fn <I, Container> (image: &I, destination: &mut ImageBuffer<I::Pixel, Container>) -> crate::ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Rotate an image 270 degrees clockwise and put the result into the destination [`ImageBuffer`].\n","sig":null,"attributes":[{"value":"/ Rotate an image 270 degrees clockwise and put the result into the destination [`ImageBuffer`].","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/affine.rs","byte_start":56006,"byte_end":56104,"line_start":94,"line_end":94,"column_start":1,"column_end":99}}]},{"kind":"Function","id":{"krate":0,"index":244},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/affine.rs","byte_start":56830,"byte_end":56845,"line_start":120,"line_end":120,"column_start":8,"column_end":23},"name":"flip_horizontal","qualname":"::imageops::affine::flip_horizontal","value":"fn <I> (image: &I) -> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>>","parent":null,"children":[],"decl_id":null,"docs":" Flip an image horizontally\n","sig":null,"attributes":[{"value":"/ Flip an image horizontally","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/affine.rs","byte_start":56792,"byte_end":56822,"line_start":119,"line_end":119,"column_start":1,"column_end":31}}]},{"kind":"Function","id":{"krate":0,"index":246},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/affine.rs","byte_start":57170,"byte_end":57183,"line_start":132,"line_end":132,"column_start":8,"column_end":21},"name":"flip_vertical","qualname":"::imageops::affine::flip_vertical","value":"fn <I> (image: &I) -> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>>","parent":null,"children":[],"decl_id":null,"docs":" Flip an image vertically\n","sig":null,"attributes":[{"value":"/ Flip an image vertically","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/affine.rs","byte_start":57134,"byte_end":57162,"line_start":131,"line_end":131,"column_start":1,"column_end":29}}]},{"kind":"Function","id":{"krate":0,"index":248},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/affine.rs","byte_start":57565,"byte_end":57583,"line_start":144,"line_end":144,"column_start":8,"column_end":26},"name":"flip_horizontal_in","qualname":"::imageops::affine::flip_horizontal_in","value":"fn <I, Container> (image: &I, destination: &mut ImageBuffer<I::Pixel, Container>) -> crate::ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Flip an image horizontally and put the result into the destination [`ImageBuffer`].\n","sig":null,"attributes":[{"value":"/ Flip an image horizontally and put the result into the destination [`ImageBuffer`].","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/affine.rs","byte_start":57470,"byte_end":57557,"line_start":143,"line_end":143,"column_start":1,"column_end":88}}]},{"kind":"Function","id":{"krate":0,"index":251},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/affine.rs","byte_start":58344,"byte_end":58360,"line_start":169,"line_end":169,"column_start":8,"column_end":24},"name":"flip_vertical_in","qualname":"::imageops::affine::flip_vertical_in","value":"fn <I, Container> (image: &I, destination: &mut ImageBuffer<I::Pixel, Container>) -> crate::ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Flip an image vertically and put the result into the destination [`ImageBuffer`].\n","sig":null,"attributes":[{"value":"/ Flip an image vertically and put the result into the destination [`ImageBuffer`].","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/affine.rs","byte_start":58251,"byte_end":58336,"line_start":168,"line_end":168,"column_start":1,"column_end":86}}]},{"kind":"Function","id":{"krate":0,"index":254},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/affine.rs","byte_start":59087,"byte_end":59105,"line_start":194,"line_end":194,"column_start":8,"column_end":26},"name":"rotate180_in_place","qualname":"::imageops::affine::rotate180_in_place","value":"fn <I> (image: &mut I) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Rotate an image 180 degrees clockwise in place.\n","sig":null,"attributes":[{"value":"/ Rotate an image 180 degrees clockwise in place.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/affine.rs","byte_start":59028,"byte_end":59079,"line_start":193,"line_end":193,"column_start":1,"column_end":52}}]},{"kind":"Function","id":{"krate":0,"index":256},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/affine.rs","byte_start":59885,"byte_end":59909,"line_start":225,"line_end":225,"column_start":8,"column_end":32},"name":"flip_horizontal_in_place","qualname":"::imageops::affine::flip_horizontal_in_place","value":"fn <I> (image: &mut I) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Flip an image horizontally in place.\n","sig":null,"attributes":[{"value":"/ Flip an image horizontally in place.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/affine.rs","byte_start":59837,"byte_end":59877,"line_start":224,"line_end":224,"column_start":1,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":258},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/affine.rs","byte_start":60315,"byte_end":60337,"line_start":240,"line_end":240,"column_start":8,"column_end":30},"name":"flip_vertical_in_place","qualname":"::imageops::affine::flip_vertical_in_place","value":"fn <I> (image: &mut I) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Flip an image vertically in place.\n","sig":null,"attributes":[{"value":"/ Flip an image vertically in place.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/affine.rs","byte_start":60269,"byte_end":60307,"line_start":239,"line_end":239,"column_start":1,"column_end":39}}]},{"kind":"Mod","id":{"krate":0,"index":260},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/colorops.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"colorops","qualname":"::imageops::colorops","value":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/colorops.rs","parent":null,"children":[{"krate":0,"index":261},{"krate":0,"index":264},{"krate":0,"index":265},{"krate":0,"index":268},{"krate":0,"index":271},{"krate":0,"index":272},{"krate":0,"index":273},{"krate":0,"index":276},{"krate":0,"index":277},{"krate":0,"index":279},{"krate":0,"index":281},{"krate":0,"index":283},{"krate":0,"index":288},{"krate":0,"index":294},{"krate":0,"index":299},{"krate":0,"index":4017},{"krate":0,"index":4020},{"krate":0,"index":4019},{"krate":0,"index":305},{"krate":0,"index":311},{"krate":0,"index":318},{"krate":0,"index":321},{"krate":0,"index":322},{"krate":0,"index":327}],"decl_id":null,"docs":" Functions for altering and converting the color of pixelbufs\n","sig":null,"attributes":[{"value":"! Functions for altering and converting the color of pixelbufs","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/colorops.rs","byte_start":65290,"byte_end":65354,"line_start":1,"line_end":1,"column_start":1,"column_end":65}}]},{"kind":"Function","id":{"krate":0,"index":279},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/colorops.rs","byte_start":65739,"byte_end":65748,"line_start":16,"line_end":16,"column_start":8,"column_end":17},"name":"grayscale","qualname":"::imageops::colorops::grayscale","value":"fn <I> (image: &I) -> ImageBuffer<Luma<Subpixel<I>>, Vec<Subpixel<I>>>","parent":null,"children":[],"decl_id":null,"docs":" Convert the supplied image to grayscale\n","sig":null,"attributes":[{"value":"/ Convert the supplied image to grayscale","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/colorops.rs","byte_start":65688,"byte_end":65731,"line_start":15,"line_end":15,"column_start":1,"column_end":44}}]},{"kind":"Function","id":{"krate":0,"index":281},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/colorops.rs","byte_start":66280,"byte_end":66286,"line_start":36,"line_end":36,"column_start":8,"column_end":14},"name":"invert","qualname":"::imageops::colorops::invert","value":"fn <I> (image: &mut I) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Invert each pixel within the supplied image.\n This function operates in place.\n","sig":null,"attributes":[{"value":"/ Invert each pixel within the supplied image.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/colorops.rs","byte_start":66187,"byte_end":66235,"line_start":34,"line_end":34,"column_start":1,"column_end":49}},{"value":"/ This function operates in place.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/colorops.rs","byte_start":66236,"byte_end":66272,"line_start":35,"line_end":35,"column_start":1,"column_end":37}}]},{"kind":"Function","id":{"krate":0,"index":283},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/colorops.rs","byte_start":66749,"byte_end":66757,"line_start":52,"line_end":52,"column_start":8,"column_end":16},"name":"contrast","qualname":"::imageops::colorops::contrast","value":"fn <I, P, S> (image: &I, contrast: f32) -> ImageBuffer<P, Vec<S>>","parent":null,"children":[],"decl_id":null,"docs":" Adjust the contrast of the supplied image.\n ```contrast``` is the amount to adjust the contrast by.\n Negative values decrease the contrast and positive values increase the contrast.\n","sig":null,"attributes":[{"value":"/ Adjust the contrast of the supplied image.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/colorops.rs","byte_start":66550,"byte_end":66596,"line_start":49,"line_end":49,"column_start":1,"column_end":47}},{"value":"/ ```contrast``` is the amount to adjust the contrast by.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/colorops.rs","byte_start":66597,"byte_end":66656,"line_start":50,"line_end":50,"column_start":1,"column_end":60}},{"value":"/ Negative values decrease the contrast and positive values increase the contrast.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/colorops.rs","byte_start":66657,"byte_end":66741,"line_start":51,"line_end":51,"column_start":1,"column_end":85}}]},{"kind":"Function","id":{"krate":0,"index":288},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/colorops.rs","byte_start":67732,"byte_end":67740,"line_start":87,"line_end":87,"column_start":8,"column_end":16},"name":"brighten","qualname":"::imageops::colorops::brighten","value":"fn <I, P, S> (image: &I, value: i32) -> ImageBuffer<P, Vec<S>>","parent":null,"children":[],"decl_id":null,"docs":" Brighten the supplied image.\n ```value``` is the amount to brighten each pixel by.\n Negative values decrease the brightness and positive values increase it.\n","sig":null,"attributes":[{"value":"/ Brighten the supplied image.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/colorops.rs","byte_start":67558,"byte_end":67590,"line_start":84,"line_end":84,"column_start":1,"column_end":33}},{"value":"/ ```value``` is the amount to brighten each pixel by.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/colorops.rs","byte_start":67591,"byte_end":67647,"line_start":85,"line_end":85,"column_start":1,"column_end":57}},{"value":"/ Negative values decrease the brightness and positive values increase it.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/colorops.rs","byte_start":67648,"byte_end":67724,"line_start":86,"line_end":86,"column_start":1,"column_end":77}}]},{"kind":"Function","id":{"krate":0,"index":294},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/colorops.rs","byte_start":68726,"byte_end":68735,"line_start":122,"line_end":122,"column_start":8,"column_end":17},"name":"huerotate","qualname":"::imageops::colorops::huerotate","value":"fn <I, P, S> (image: &I, value: i32) -> ImageBuffer<P, Vec<S>>","parent":null,"children":[],"decl_id":null,"docs":" Hue rotate the supplied image.\n `value` is the degrees to rotate each pixel by.\n 0 and 360 do nothing, the rest rotates by the given degree value.\n just like the css webkit filter hue-rotate(180)\n","sig":null,"attributes":[{"value":"/ Hue rotate the supplied image.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/colorops.rs","byte_start":68510,"byte_end":68544,"line_start":118,"line_end":118,"column_start":1,"column_end":35}},{"value":"/ `value` is the degrees to rotate each pixel by.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/colorops.rs","byte_start":68545,"byte_end":68596,"line_start":119,"line_end":119,"column_start":1,"column_end":52}},{"value":"/ 0 and 360 do nothing, the rest rotates by the given degree value.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/colorops.rs","byte_start":68597,"byte_end":68666,"line_start":120,"line_end":120,"column_start":1,"column_end":70}},{"value":"/ just like the css webkit filter hue-rotate(180)","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/colorops.rs","byte_start":68667,"byte_end":68718,"line_start":121,"line_end":121,"column_start":1,"column_end":52}}]},{"kind":"Trait","id":{"krate":0,"index":299},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/colorops.rs","byte_start":70649,"byte_end":70657,"line_start":179,"line_end":179,"column_start":11,"column_end":19},"name":"ColorMap","qualname":"::imageops::colorops::ColorMap","value":"ColorMap","parent":null,"children":[{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":302},{"krate":0,"index":303},{"krate":0,"index":304}],"decl_id":null,"docs":" A color map\n","sig":null,"attributes":[{"value":"/ A color map","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/colorops.rs","byte_start":70623,"byte_end":70638,"line_start":178,"line_end":178,"column_start":1,"column_end":16}}]},{"kind":"Type","id":{"krate":0,"index":300},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/colorops.rs","byte_start":70721,"byte_end":70726,"line_start":181,"line_end":181,"column_start":10,"column_end":15},"name":"Color","qualname":"::imageops::colorops::ColorMap::Color","value":"type Color;","parent":{"krate":0,"index":299},"children":[],"decl_id":null,"docs":" The color type on which the map operates on\n","sig":null,"attributes":[{"value":"/ The color type on which the map operates on","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/colorops.rs","byte_start":70664,"byte_end":70711,"line_start":180,"line_end":180,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":301},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/colorops.rs","byte_start":70819,"byte_end":70827,"line_start":184,"line_end":184,"column_start":8,"column_end":16},"name":"index_of","qualname":"::imageops::colorops::ColorMap::index_of","value":"fn (&self, color: &Self::Color) -> usize","parent":{"krate":0,"index":299},"children":[],"decl_id":null,"docs":" Returns the index of the closest match of `color`\n in the color map.\n","sig":null,"attributes":[{"value":"/ Returns the index of the closest match of `color`","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/colorops.rs","byte_start":70732,"byte_end":70785,"line_start":182,"line_end":182,"column_start":5,"column_end":58}},{"value":"/ in the color map.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/colorops.rs","byte_start":70790,"byte_end":70811,"line_start":183,"line_end":183,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":302},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/colorops.rs","byte_start":71035,"byte_end":71041,"line_start":187,"line_end":187,"column_start":8,"column_end":14},"name":"lookup","qualname":"::imageops::colorops::ColorMap::lookup","value":"fn (&self, index: usize) -> Option<Self::Color>","parent":{"krate":0,"index":299},"children":[],"decl_id":null,"docs":" Looks up color by index in the color map.  If `idx` is out of range for the color map, or\n ColorMap doesn't implement `lookup` `None` is returned.\n","sig":null,"attributes":[{"value":"/ Looks up color by index in the color map.  If `idx` is out of range for the color map, or","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/colorops.rs","byte_start":70870,"byte_end":70963,"line_start":185,"line_end":185,"column_start":5,"column_end":98}},{"value":"/ ColorMap doesn't implement `lookup` `None` is returned.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/colorops.rs","byte_start":70968,"byte_end":71027,"line_start":186,"line_end":186,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":303},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/colorops.rs","byte_start":71222,"byte_end":71232,"line_start":192,"line_end":192,"column_start":8,"column_end":18},"name":"has_lookup","qualname":"::imageops::colorops::ColorMap::has_lookup","value":"fn (&self) -> bool","parent":{"krate":0,"index":299},"children":[],"decl_id":null,"docs":" Determine if this implementation of ColorMap overrides the default `lookup`.\n","sig":null,"attributes":[{"value":"/ Determine if this implementation of ColorMap overrides the default `lookup`.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/colorops.rs","byte_start":71134,"byte_end":71214,"line_start":191,"line_end":191,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":304},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/colorops.rs","byte_start":71337,"byte_end":71346,"line_start":196,"line_end":196,"column_start":8,"column_end":17},"name":"map_color","qualname":"::imageops::colorops::ColorMap::map_color","value":"fn (&self, color: &mut Self::Color) -> ()","parent":{"krate":0,"index":299},"children":[],"decl_id":null,"docs":" Maps `color` to the closest color in the color map.\n","sig":null,"attributes":[{"value":"/ Maps `color` to the closest color in the color map.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/colorops.rs","byte_start":71274,"byte_end":71329,"line_start":195,"line_end":195,"column_start":5,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":4017},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/colorops.rs","byte_start":72491,"byte_end":72498,"line_start":229,"line_end":229,"column_start":12,"column_end":19},"name":"BiLevel","qualname":"::imageops::colorops::BiLevel","value":"","parent":null,"children":[],"decl_id":null,"docs":" A bi-level color map","sig":null,"attributes":[{"value":"/ A bi-level color map","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/colorops.rs","byte_start":71383,"byte_end":71407,"line_start":199,"line_end":199,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/colorops.rs","byte_start":71408,"byte_end":71411,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/colorops.rs","byte_start":71412,"byte_end":71426,"line_start":201,"line_end":201,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/colorops.rs","byte_start":71427,"byte_end":71434,"line_start":202,"line_end":202,"column_start":1,"column_end":8}},{"value":"/ use image::imageops::colorops::{index_colors, BiLevel, ColorMap};","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/colorops.rs","byte_start":71435,"byte_end":71504,"line_start":203,"line_end":203,"column_start":1,"column_end":70}},{"value":"/ use image::{ImageBuffer, Luma};","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/colorops.rs","byte_start":71505,"byte_end":71540,"line_start":204,"line_end":204,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/colorops.rs","byte_start":71541,"byte_end":71544,"line_start":205,"line_end":205,"column_start":1,"column_end":4}},{"value":"/ let (w, h) = (16, 16);","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/colorops.rs","byte_start":71545,"byte_end":71571,"line_start":206,"line_end":206,"column_start":1,"column_end":27}},{"value":"/ // Create an image with a smooth horizontal gradient from black (0) to white (255).","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/colorops.rs","byte_start":71572,"byte_end":71659,"line_start":207,"line_end":207,"column_start":1,"column_end":88}},{"value":"/ let gray = ImageBuffer::from_fn(w, h, |x, y| -> Luma<u8> { [(255 * x / w) as u8].into() });","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/colorops.rs","byte_start":71660,"byte_end":71755,"line_start":208,"line_end":208,"column_start":1,"column_end":96}},{"value":"/ // Mapping the gray image through the `BiLevel` filter should map gray pixels less than half","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/colorops.rs","byte_start":71756,"byte_end":71852,"line_start":209,"line_end":209,"column_start":1,"column_end":97}},{"value":"/ // intensity (127) to black (0), and anything greater to white (255).","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/colorops.rs","byte_start":71853,"byte_end":71926,"line_start":210,"line_end":210,"column_start":1,"column_end":74}},{"value":"/ let cmap = BiLevel;","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/colorops.rs","byte_start":71927,"byte_end":71950,"line_start":211,"line_end":211,"column_start":1,"column_end":24}},{"value":"/ let palletized = index_colors(&gray, &cmap);","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/colorops.rs","byte_start":71951,"byte_end":71999,"line_start":212,"line_end":212,"column_start":1,"column_end":49}},{"value":"/ let mapped = ImageBuffer::from_fn(w, h, |x, y| {","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/colorops.rs","byte_start":72000,"byte_end":72052,"line_start":213,"line_end":213,"column_start":1,"column_end":53}},{"value":"/     let p = palletized.get_pixel(x, y);","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/colorops.rs","byte_start":72053,"byte_end":72096,"line_start":214,"line_end":214,"column_start":1,"column_end":44}},{"value":"/     cmap.lookup(p.0[0] as usize)","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/colorops.rs","byte_start":72097,"byte_end":72133,"line_start":215,"line_end":215,"column_start":1,"column_end":37}},{"value":"/         .expect(\"indexed color out-of-range\")","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/colorops.rs","byte_start":72134,"byte_end":72183,"line_start":216,"line_end":216,"column_start":1,"column_end":50}},{"value":"/ });","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/colorops.rs","byte_start":72184,"byte_end":72191,"line_start":217,"line_end":217,"column_start":1,"column_end":8}},{"value":"/ // Create an black and white image of expected output.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/colorops.rs","byte_start":72192,"byte_end":72250,"line_start":218,"line_end":218,"column_start":1,"column_end":59}},{"value":"/ let bw = ImageBuffer::from_fn(w, h, |x, y| -> Luma<u8> {","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/colorops.rs","byte_start":72251,"byte_end":72311,"line_start":219,"line_end":219,"column_start":1,"column_end":61}},{"value":"/     if x <= (w / 2) {","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/colorops.rs","byte_start":72312,"byte_end":72337,"line_start":220,"line_end":220,"column_start":1,"column_end":26}},{"value":"/         [0].into()","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/colorops.rs","byte_start":72338,"byte_end":72360,"line_start":221,"line_end":221,"column_start":1,"column_end":23}},{"value":"/     } else {","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/colorops.rs","byte_start":72361,"byte_end":72377,"line_start":222,"line_end":222,"column_start":1,"column_end":17}},{"value":"/         [255].into()","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/colorops.rs","byte_start":72378,"byte_end":72402,"line_start":223,"line_end":223,"column_start":1,"column_end":25}},{"value":"/     }","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/colorops.rs","byte_start":72403,"byte_end":72412,"line_start":224,"line_end":224,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/colorops.rs","byte_start":72413,"byte_end":72420,"line_start":225,"line_end":225,"column_start":1,"column_end":8}},{"value":"/ assert_eq!(mapped, bw);","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/colorops.rs","byte_start":72421,"byte_end":72448,"line_start":226,"line_end":226,"column_start":1,"column_end":28}},{"value":"/ ```","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/colorops.rs","byte_start":72449,"byte_end":72456,"line_start":227,"line_end":227,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":322},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/colorops.rs","byte_start":74903,"byte_end":74909,"line_start":319,"line_end":319,"column_start":8,"column_end":14},"name":"dither","qualname":"::imageops::colorops::dither","value":"fn <Pix, Map> (image: &mut ImageBuffer<Pix, Vec<u8>>, color_map: &Map) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Reduces the colors of the image using the supplied `color_map` while applying\n Floyd-Steinberg dithering to improve the visual conception\n","sig":null,"attributes":[{"value":"/ Reduces the colors of the image using the supplied `color_map` while applying","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/colorops.rs","byte_start":74751,"byte_end":74832,"line_start":317,"line_end":317,"column_start":1,"column_end":82}},{"value":"/ Floyd-Steinberg dithering to improve the visual conception","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/colorops.rs","byte_start":74833,"byte_end":74895,"line_start":318,"line_end":318,"column_start":1,"column_end":63}}]},{"kind":"Function","id":{"krate":0,"index":327},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/colorops.rs","byte_start":76454,"byte_end":76466,"line_start":357,"line_end":357,"column_start":8,"column_end":20},"name":"index_colors","qualname":"::imageops::colorops::index_colors","value":"fn <Pix, Map> (image: &ImageBuffer<Pix, Vec<u8>>, color_map: &Map) -> ImageBuffer<Luma<u8>, Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Reduces the colors using the supplied `color_map` and returns an image of the indices\n","sig":null,"attributes":[{"value":"/ Reduces the colors using the supplied `color_map` and returns an image of the indices","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/colorops.rs","byte_start":76357,"byte_end":76446,"line_start":356,"line_end":356,"column_start":1,"column_end":90}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4023},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/sample.rs","byte_start":80138,"byte_end":80145,"line_start":84,"line_end":84,"column_start":5,"column_end":12},"name":"Nearest","qualname":"::imageops::sample::FilterType::Nearest","value":"FilterType::Nearest","parent":{"krate":0,"index":4022},"children":[],"decl_id":null,"docs":" Nearest Neighbor\n","sig":null,"attributes":[{"value":"/ Nearest Neighbor","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/sample.rs","byte_start":80113,"byte_end":80133,"line_start":83,"line_end":83,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4025},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/sample.rs","byte_start":80174,"byte_end":80182,"line_start":87,"line_end":87,"column_start":5,"column_end":13},"name":"Triangle","qualname":"::imageops::sample::FilterType::Triangle","value":"FilterType::Triangle","parent":{"krate":0,"index":4022},"children":[],"decl_id":null,"docs":" Linear Filter\n","sig":null,"attributes":[{"value":"/ Linear Filter","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/sample.rs","byte_start":80152,"byte_end":80169,"line_start":86,"line_end":86,"column_start":5,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4027},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/sample.rs","byte_start":80210,"byte_end":80220,"line_start":90,"line_end":90,"column_start":5,"column_end":15},"name":"CatmullRom","qualname":"::imageops::sample::FilterType::CatmullRom","value":"FilterType::CatmullRom","parent":{"krate":0,"index":4022},"children":[],"decl_id":null,"docs":" Cubic Filter\n","sig":null,"attributes":[{"value":"/ Cubic Filter","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/sample.rs","byte_start":80189,"byte_end":80205,"line_start":89,"line_end":89,"column_start":5,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4029},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/sample.rs","byte_start":80251,"byte_end":80259,"line_start":93,"line_end":93,"column_start":5,"column_end":13},"name":"Gaussian","qualname":"::imageops::sample::FilterType::Gaussian","value":"FilterType::Gaussian","parent":{"krate":0,"index":4022},"children":[],"decl_id":null,"docs":" Gaussian Filter\n","sig":null,"attributes":[{"value":"/ Gaussian Filter","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/sample.rs","byte_start":80227,"byte_end":80246,"line_start":92,"line_end":92,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4031},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/sample.rs","byte_start":80296,"byte_end":80304,"line_start":96,"line_end":96,"column_start":5,"column_end":13},"name":"Lanczos3","qualname":"::imageops::sample::FilterType::Lanczos3","value":"FilterType::Lanczos3","parent":{"krate":0,"index":4022},"children":[],"decl_id":null,"docs":" Lanczos with window 3\n","sig":null,"attributes":[{"value":"/ Lanczos with window 3","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/sample.rs","byte_start":80266,"byte_end":80291,"line_start":95,"line_end":95,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":4022},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/sample.rs","byte_start":80096,"byte_end":80106,"line_start":82,"line_end":82,"column_start":10,"column_end":20},"name":"FilterType","qualname":"::imageops::sample::FilterType","value":"FilterType::{Nearest, Triangle, CatmullRom, Gaussian, Lanczos3}","parent":null,"children":[{"krate":0,"index":4023},{"krate":0,"index":4025},{"krate":0,"index":4027},{"krate":0,"index":4029},{"krate":0,"index":4031}],"decl_id":null,"docs":" Available Sampling Filters.","sig":null,"attributes":[{"value":"/ Available Sampling Filters.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/sample.rs","byte_start":77665,"byte_end":77696,"line_start":15,"line_end":15,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/sample.rs","byte_start":77697,"byte_end":77700,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/sample.rs","byte_start":77701,"byte_end":77716,"line_start":17,"line_end":17,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/sample.rs","byte_start":77717,"byte_end":77720,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ To test the different sampling filters on a real example, you can find two","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/sample.rs","byte_start":77721,"byte_end":77799,"line_start":19,"line_end":19,"column_start":1,"column_end":79}},{"value":"/ examples called","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/sample.rs","byte_start":77800,"byte_end":77819,"line_start":20,"line_end":20,"column_start":1,"column_end":20}},{"value":"/ [`scaledown`](https://github.com/image-rs/image/tree/master/examples/scaledown)","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/sample.rs","byte_start":77820,"byte_end":77903,"line_start":21,"line_end":21,"column_start":1,"column_end":84}},{"value":"/ and","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/sample.rs","byte_start":77904,"byte_end":77911,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ [`scaleup`](https://github.com/image-rs/image/tree/master/examples/scaleup)","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/sample.rs","byte_start":77912,"byte_end":77991,"line_start":23,"line_end":23,"column_start":1,"column_end":80}},{"value":"/ in the `examples` directory of the crate source code.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/sample.rs","byte_start":77992,"byte_end":78049,"line_start":24,"line_end":24,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/sample.rs","byte_start":78050,"byte_end":78053,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Here is a 3.58 MiB","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/sample.rs","byte_start":78054,"byte_end":78076,"line_start":26,"line_end":26,"column_start":1,"column_end":23}},{"value":"/ [test image](https://github.com/image-rs/image/blob/master/examples/scaledown/test.jpg)","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/sample.rs","byte_start":78077,"byte_end":78168,"line_start":27,"line_end":27,"column_start":1,"column_end":92}},{"value":"/ that has been scaled down to 300x225 px:","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/sample.rs","byte_start":78169,"byte_end":78213,"line_start":28,"line_end":28,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/sample.rs","byte_start":78214,"byte_end":78217,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ <!-- NOTE: To test new test images locally, replace the GitHub path with `../../../docs/` -->","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/sample.rs","byte_start":78218,"byte_end":78315,"line_start":30,"line_end":30,"column_start":1,"column_end":98}},{"value":"/ <div style=\"display: flex; flex-wrap: wrap; align-items: flex-start;\">","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/sample.rs","byte_start":78316,"byte_end":78390,"line_start":31,"line_end":31,"column_start":1,"column_end":75}},{"value":"/   <div style=\"margin: 0 8px 8px 0;\">","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/sample.rs","byte_start":78391,"byte_end":78431,"line_start":32,"line_end":32,"column_start":1,"column_end":41}},{"value":"/     <img src=\"https://raw.githubusercontent.com/image-rs/image/master/examples/scaledown/scaledown-test-near.png\" title=\"Nearest\"><br>","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/sample.rs","byte_start":78432,"byte_end":78570,"line_start":33,"line_end":33,"column_start":1,"column_end":139}},{"value":"/     Nearest Neighbor","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/sample.rs","byte_start":78571,"byte_end":78595,"line_start":34,"line_end":34,"column_start":1,"column_end":25}},{"value":"/   </div>","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/sample.rs","byte_start":78596,"byte_end":78608,"line_start":35,"line_end":35,"column_start":1,"column_end":13}},{"value":"/   <div style=\"margin: 0 8px 8px 0;\">","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/sample.rs","byte_start":78609,"byte_end":78649,"line_start":36,"line_end":36,"column_start":1,"column_end":41}},{"value":"/     <img src=\"https://raw.githubusercontent.com/image-rs/image/master/examples/scaledown/scaledown-test-tri.png\" title=\"Triangle\"><br>","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/sample.rs","byte_start":78650,"byte_end":78788,"line_start":37,"line_end":37,"column_start":1,"column_end":139}},{"value":"/     Linear: Triangle","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/sample.rs","byte_start":78789,"byte_end":78813,"line_start":38,"line_end":38,"column_start":1,"column_end":25}},{"value":"/   </div>","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/sample.rs","byte_start":78814,"byte_end":78826,"line_start":39,"line_end":39,"column_start":1,"column_end":13}},{"value":"/   <div style=\"margin: 0 8px 8px 0;\">","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/sample.rs","byte_start":78827,"byte_end":78867,"line_start":40,"line_end":40,"column_start":1,"column_end":41}},{"value":"/     <img src=\"https://raw.githubusercontent.com/image-rs/image/master/examples/scaledown/scaledown-test-cmr.png\" title=\"CatmullRom\"><br>","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/sample.rs","byte_start":78868,"byte_end":79008,"line_start":41,"line_end":41,"column_start":1,"column_end":141}},{"value":"/     Cubic: Catmull-Rom","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/sample.rs","byte_start":79009,"byte_end":79035,"line_start":42,"line_end":42,"column_start":1,"column_end":27}},{"value":"/   </div>","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/sample.rs","byte_start":79036,"byte_end":79048,"line_start":43,"line_end":43,"column_start":1,"column_end":13}},{"value":"/   <div style=\"margin: 0 8px 8px 0;\">","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/sample.rs","byte_start":79049,"byte_end":79089,"line_start":44,"line_end":44,"column_start":1,"column_end":41}},{"value":"/     <img src=\"https://raw.githubusercontent.com/image-rs/image/master/examples/scaledown/scaledown-test-gauss.png\" title=\"Gaussian\"><br>","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/sample.rs","byte_start":79090,"byte_end":79230,"line_start":45,"line_end":45,"column_start":1,"column_end":141}},{"value":"/     Gaussian","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/sample.rs","byte_start":79231,"byte_end":79247,"line_start":46,"line_end":46,"column_start":1,"column_end":17}},{"value":"/   </div>","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/sample.rs","byte_start":79248,"byte_end":79260,"line_start":47,"line_end":47,"column_start":1,"column_end":13}},{"value":"/   <div style=\"margin: 0 8px 8px 0;\">","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/sample.rs","byte_start":79261,"byte_end":79301,"line_start":48,"line_end":48,"column_start":1,"column_end":41}},{"value":"/     <img src=\"https://raw.githubusercontent.com/image-rs/image/master/examples/scaledown/scaledown-test-lcz2.png\" title=\"Lanczos3\"><br>","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/sample.rs","byte_start":79302,"byte_end":79441,"line_start":49,"line_end":49,"column_start":1,"column_end":140}},{"value":"/     Lanczos with window 3","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/sample.rs","byte_start":79442,"byte_end":79471,"line_start":50,"line_end":50,"column_start":1,"column_end":30}},{"value":"/   </div>","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/sample.rs","byte_start":79472,"byte_end":79484,"line_start":51,"line_end":51,"column_start":1,"column_end":13}},{"value":"/ </div>","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/sample.rs","byte_start":79485,"byte_end":79495,"line_start":52,"line_end":52,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/sample.rs","byte_start":79496,"byte_end":79499,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ ## Speed","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/sample.rs","byte_start":79500,"byte_end":79512,"line_start":54,"line_end":54,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/sample.rs","byte_start":79513,"byte_end":79516,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ Time required to create each of the examples above, tested on an Intel","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/sample.rs","byte_start":79517,"byte_end":79591,"line_start":56,"line_end":56,"column_start":1,"column_end":75}},{"value":"/ i7-4770 CPU with Rust 1.37 in release mode:","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/sample.rs","byte_start":79592,"byte_end":79639,"line_start":57,"line_end":57,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/sample.rs","byte_start":79640,"byte_end":79643,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ <table style=\"width: auto;\">","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/sample.rs","byte_start":79644,"byte_end":79676,"line_start":59,"line_end":59,"column_start":1,"column_end":33}},{"value":"/   <tr>","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/sample.rs","byte_start":79677,"byte_end":79687,"line_start":60,"line_end":60,"column_start":1,"column_end":11}},{"value":"/     <th>Nearest</th>","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/sample.rs","byte_start":79688,"byte_end":79712,"line_start":61,"line_end":61,"column_start":1,"column_end":25}},{"value":"/     <td>31 ms</td>","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/sample.rs","byte_start":79713,"byte_end":79735,"line_start":62,"line_end":62,"column_start":1,"column_end":23}},{"value":"/   </tr>","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/sample.rs","byte_start":79736,"byte_end":79747,"line_start":63,"line_end":63,"column_start":1,"column_end":12}},{"value":"/   <tr>","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/sample.rs","byte_start":79748,"byte_end":79758,"line_start":64,"line_end":64,"column_start":1,"column_end":11}},{"value":"/     <th>Triangle</th>","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/sample.rs","byte_start":79759,"byte_end":79784,"line_start":65,"line_end":65,"column_start":1,"column_end":26}},{"value":"/     <td>414 ms</td>","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/sample.rs","byte_start":79785,"byte_end":79808,"line_start":66,"line_end":66,"column_start":1,"column_end":24}},{"value":"/   </tr>","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/sample.rs","byte_start":79809,"byte_end":79820,"line_start":67,"line_end":67,"column_start":1,"column_end":12}},{"value":"/   <tr>","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/sample.rs","byte_start":79821,"byte_end":79831,"line_start":68,"line_end":68,"column_start":1,"column_end":11}},{"value":"/     <th>CatmullRom</th>","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/sample.rs","byte_start":79832,"byte_end":79859,"line_start":69,"line_end":69,"column_start":1,"column_end":28}},{"value":"/     <td>817 ms</td>","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/sample.rs","byte_start":79860,"byte_end":79883,"line_start":70,"line_end":70,"column_start":1,"column_end":24}},{"value":"/   </tr>","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/sample.rs","byte_start":79884,"byte_end":79895,"line_start":71,"line_end":71,"column_start":1,"column_end":12}},{"value":"/   <tr>","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/sample.rs","byte_start":79896,"byte_end":79906,"line_start":72,"line_end":72,"column_start":1,"column_end":11}},{"value":"/     <th>Gaussian</th>","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/sample.rs","byte_start":79907,"byte_end":79932,"line_start":73,"line_end":73,"column_start":1,"column_end":26}},{"value":"/     <td>1180 ms</td>","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/sample.rs","byte_start":79933,"byte_end":79957,"line_start":74,"line_end":74,"column_start":1,"column_end":25}},{"value":"/   </tr>","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/sample.rs","byte_start":79958,"byte_end":79969,"line_start":75,"line_end":75,"column_start":1,"column_end":12}},{"value":"/   <tr>","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/sample.rs","byte_start":79970,"byte_end":79980,"line_start":76,"line_end":76,"column_start":1,"column_end":11}},{"value":"/     <th>Lanczos3</th>","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/sample.rs","byte_start":79981,"byte_end":80006,"line_start":77,"line_end":77,"column_start":1,"column_end":26}},{"value":"/     <td>1170 ms</td>","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/sample.rs","byte_start":80007,"byte_end":80031,"line_start":78,"line_end":78,"column_start":1,"column_end":25}},{"value":"/   </tr>","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/sample.rs","byte_start":80032,"byte_end":80043,"line_start":79,"line_end":79,"column_start":1,"column_end":12}},{"value":"/ </table>","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/sample.rs","byte_start":80044,"byte_end":80056,"line_start":80,"line_end":80,"column_start":1,"column_end":13}}]},{"kind":"Function","id":{"krate":0,"index":377},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/sample.rs","byte_start":89766,"byte_end":89775,"line_start":393,"line_end":393,"column_start":8,"column_end":17},"name":"thumbnail","qualname":"::imageops::sample::thumbnail","value":"fn <I, P, S> (image: &I, new_width: u32, new_height: u32) -> ImageBuffer<P, Vec<S>>","parent":null,"children":[],"decl_id":null,"docs":" Resize the supplied image to the specific dimensions.","sig":null,"attributes":[{"value":"/ Resize the supplied image to the specific dimensions.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/sample.rs","byte_start":89020,"byte_end":89077,"line_start":381,"line_end":381,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/sample.rs","byte_start":89078,"byte_end":89081,"line_start":382,"line_end":382,"column_start":1,"column_end":4}},{"value":"/ For downscaling, this method uses a fast integer algorithm where each source pixel contributes","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/sample.rs","byte_start":89082,"byte_end":89180,"line_start":383,"line_end":383,"column_start":1,"column_end":99}},{"value":"/ to exactly one target pixel.  May give aliasing artifacts if new size is close to old size.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/sample.rs","byte_start":89181,"byte_end":89276,"line_start":384,"line_end":384,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/sample.rs","byte_start":89277,"byte_end":89280,"line_start":385,"line_end":385,"column_start":1,"column_end":4}},{"value":"/ In case the current width is smaller than the new width or similar for the height, another","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/sample.rs","byte_start":89281,"byte_end":89375,"line_start":386,"line_end":386,"column_start":1,"column_end":95}},{"value":"/ strategy is used instead.  For each pixel in the output, a rectangular region of the input is","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/sample.rs","byte_start":89376,"byte_end":89473,"line_start":387,"line_end":387,"column_start":1,"column_end":98}},{"value":"/ determined, just as previously.  But when no input pixel is part of this region, the nearest","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/sample.rs","byte_start":89474,"byte_end":89570,"line_start":388,"line_end":388,"column_start":1,"column_end":97}},{"value":"/ pixels are interpolated instead.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/sample.rs","byte_start":89571,"byte_end":89607,"line_start":389,"line_end":389,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/sample.rs","byte_start":89608,"byte_end":89611,"line_start":390,"line_end":390,"column_start":1,"column_end":4}},{"value":"/ For speed reasons, all interpolation is performed linearly over the colour values.  It will not","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/sample.rs","byte_start":89612,"byte_end":89711,"line_start":391,"line_end":391,"column_start":1,"column_end":100}},{"value":"/ take the pixel colour spaces into account.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/sample.rs","byte_start":89712,"byte_end":89758,"line_start":392,"line_end":392,"column_start":1,"column_end":47}}]},{"kind":"Function","id":{"krate":0,"index":400},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/sample.rs","byte_start":97634,"byte_end":97643,"line_start":632,"line_end":632,"column_start":8,"column_end":17},"name":"filter3x3","qualname":"::imageops::sample::filter3x3","value":"fn <I, P, S> (image: &I, kernel: &[f32]) -> ImageBuffer<P, Vec<S>>","parent":null,"children":[],"decl_id":null,"docs":" Perform a 3x3 box filter on the supplied image.\n ```kernel``` is an array of the filter weights of length 9.\n","sig":null,"attributes":[{"value":"/ Perform a 3x3 box filter on the supplied image.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/sample.rs","byte_start":97511,"byte_end":97562,"line_start":630,"line_end":630,"column_start":1,"column_end":52}},{"value":"/ ```kernel``` is an array of the filter weights of length 9.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/sample.rs","byte_start":97563,"byte_end":97626,"line_start":631,"line_end":631,"column_start":1,"column_end":64}}]},{"kind":"Function","id":{"krate":0,"index":405},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/sample.rs","byte_start":100070,"byte_end":100076,"line_start":712,"line_end":712,"column_start":8,"column_end":14},"name":"resize","qualname":"::imageops::sample::resize","value":"fn <I> (image: &I, nwidth: u32, nheight: u32, filter: FilterType) -> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>>","parent":null,"children":[],"decl_id":null,"docs":" Resize the supplied image to the specified dimensions.\n ```nwidth``` and ```nheight``` are the new dimensions.\n ```filter``` is the sampling filter to use.\n","sig":null,"attributes":[{"value":"/ Resize the supplied image to the specified dimensions.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/sample.rs","byte_start":99897,"byte_end":99955,"line_start":709,"line_end":709,"column_start":1,"column_end":59}},{"value":"/ ```nwidth``` and ```nheight``` are the new dimensions.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/sample.rs","byte_start":99956,"byte_end":100014,"line_start":710,"line_end":710,"column_start":1,"column_end":59}},{"value":"/ ```filter``` is the sampling filter to use.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/sample.rs","byte_start":100015,"byte_end":100062,"line_start":711,"line_end":711,"column_start":1,"column_end":48}}]},{"kind":"Function","id":{"krate":0,"index":407},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/sample.rs","byte_start":101202,"byte_end":101206,"line_start":751,"line_end":751,"column_start":8,"column_end":12},"name":"blur","qualname":"::imageops::sample::blur","value":"fn <I> (image: &I, sigma: f32) -> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>>","parent":null,"children":[],"decl_id":null,"docs":" Performs a Gaussian blur on the supplied image.\n ```sigma``` is a measure of how much to blur by.\n","sig":null,"attributes":[{"value":"/ Performs a Gaussian blur on the supplied image.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/sample.rs","byte_start":101090,"byte_end":101141,"line_start":749,"line_end":749,"column_start":1,"column_end":52}},{"value":"/ ```sigma``` is a measure of how much to blur by.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/sample.rs","byte_start":101142,"byte_end":101194,"line_start":750,"line_end":750,"column_start":1,"column_end":53}}]},{"kind":"Function","id":{"krate":0,"index":410},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/sample.rs","byte_start":102029,"byte_end":102038,"line_start":778,"line_end":778,"column_start":8,"column_end":17},"name":"unsharpen","qualname":"::imageops::sample::unsharpen","value":"fn <I, P, S> (image: &I, sigma: f32, threshold: i32) -> ImageBuffer<P, Vec<S>>","parent":null,"children":[],"decl_id":null,"docs":" Performs an unsharpen mask on the supplied image.\n ```sigma``` is the amount to blur the image by.\n ```threshold``` is the threshold for the difference between","sig":null,"attributes":[{"value":"/ Performs an unsharpen mask on the supplied image.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/sample.rs","byte_start":101768,"byte_end":101821,"line_start":773,"line_end":773,"column_start":1,"column_end":54}},{"value":"/ ```sigma``` is the amount to blur the image by.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/sample.rs","byte_start":101822,"byte_end":101873,"line_start":774,"line_end":774,"column_start":1,"column_end":52}},{"value":"/ ```threshold``` is the threshold for the difference between","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/sample.rs","byte_start":101874,"byte_end":101937,"line_start":775,"line_end":775,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/sample.rs","byte_start":101938,"byte_end":101941,"line_start":776,"line_end":776,"column_start":1,"column_end":4}},{"value":"/ See <https://en.wikipedia.org/wiki/Unsharp_masking#Digital_unsharp_masking>","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/sample.rs","byte_start":101942,"byte_end":102021,"line_start":777,"line_end":777,"column_start":1,"column_end":80}}]},{"kind":"Function","id":{"krate":0,"index":415},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/mod.rs","byte_start":45949,"byte_end":45953,"line_start":31,"line_end":31,"column_start":8,"column_end":12},"name":"crop","qualname":"::imageops::crop","value":"fn <I> (image: &mut I, x: u32, y: u32, width: u32, height: u32) -> SubImage<&mut I>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable view into an image\n","sig":null,"attributes":[{"value":"/ Return a mutable view into an image","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/mod.rs","byte_start":45902,"byte_end":45941,"line_start":30,"line_end":30,"column_start":1,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":417},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/mod.rs","byte_start":46247,"byte_end":46255,"line_start":43,"line_end":43,"column_start":8,"column_end":16},"name":"crop_imm","qualname":"::imageops::crop_imm","value":"fn <I> (image: &I, x: u32, y: u32, width: u32, height: u32) -> SubImage<&I>","parent":null,"children":[],"decl_id":null,"docs":" Return an immutable view into an image\n","sig":null,"attributes":[{"value":"/ Return an immutable view into an image","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/mod.rs","byte_start":46197,"byte_end":46239,"line_start":42,"line_end":42,"column_start":1,"column_end":43}}]},{"kind":"Function","id":{"krate":0,"index":421},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/mod.rs","byte_start":49039,"byte_end":49053,"line_start":127,"line_end":127,"column_start":8,"column_end":22},"name":"overlay_bounds","qualname":"::imageops::overlay_bounds","value":"fn ((bottom_width, bottom_height): (u32, u32), (top_width, top_height): (u32, u32), x: u32, y: u32) -> (u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Calculate the region that can be copied from top to bottom.","sig":null,"attributes":[{"value":"/ Calculate the region that can be copied from top to bottom.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/mod.rs","byte_start":46867,"byte_end":46930,"line_start":72,"line_end":72,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/mod.rs","byte_start":46931,"byte_end":46934,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ Given image size of bottom and top image, and a point at which we want to place the top image","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/mod.rs","byte_start":46935,"byte_end":47032,"line_start":74,"line_end":74,"column_start":1,"column_end":98}},{"value":"/ onto the bottom image, how large can we be? Have to wary of the following issues:","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/mod.rs","byte_start":47033,"byte_end":47118,"line_start":75,"line_end":75,"column_start":1,"column_end":86}},{"value":"/ * Top might be larger than bottom","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/mod.rs","byte_start":47119,"byte_end":47156,"line_start":76,"line_end":76,"column_start":1,"column_end":38}},{"value":"/ * Overflows in the computation","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/mod.rs","byte_start":47157,"byte_end":47191,"line_start":77,"line_end":77,"column_start":1,"column_end":35}},{"value":"/ * Coordinates could be completely out of bounds","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/mod.rs","byte_start":47192,"byte_end":47243,"line_start":78,"line_end":78,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/mod.rs","byte_start":47244,"byte_end":47247,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ The main idea is to make use of inequalities provided by the nature of `saturing_add` and","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/mod.rs","byte_start":47248,"byte_end":47341,"line_start":80,"line_end":80,"column_start":1,"column_end":94}},{"value":"/ `saturating_sub`. These intrinsically validate that all resulting coordinates will be in bounds","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/mod.rs","byte_start":47342,"byte_end":47441,"line_start":81,"line_end":81,"column_start":1,"column_end":100}},{"value":"/ for both images.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/mod.rs","byte_start":47442,"byte_end":47462,"line_start":82,"line_end":82,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/mod.rs","byte_start":47463,"byte_end":47466,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ We want that all these coordinate accesses are safe:","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/mod.rs","byte_start":47467,"byte_end":47523,"line_start":84,"line_end":84,"column_start":1,"column_end":57}},{"value":"/ 1. `bottom.get_pixel(x + [0..x_range), y + [0..y_range))`","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/mod.rs","byte_start":47524,"byte_end":47585,"line_start":85,"line_end":85,"column_start":1,"column_end":62}},{"value":"/ 2. `top.get_pixel([0..x_range), [0..y_range))`","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/mod.rs","byte_start":47586,"byte_end":47636,"line_start":86,"line_end":86,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/mod.rs","byte_start":47637,"byte_end":47640,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ Proof that the function provides the necessary bounds for width. Note that all unaugmented math","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/mod.rs","byte_start":47641,"byte_end":47740,"line_start":88,"line_end":88,"column_start":1,"column_end":100}},{"value":"/ operations are to be read in standard arithmetic, not integer arithmetic. Since no direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/mod.rs","byte_start":47741,"byte_end":47834,"line_start":89,"line_end":89,"column_start":1,"column_end":94}},{"value":"/ integer arithmetic occurs in the implementation, this is unambiguous.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/mod.rs","byte_start":47835,"byte_end":47908,"line_start":90,"line_end":90,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/mod.rs","byte_start":47909,"byte_end":47912,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/mod.rs","byte_start":47913,"byte_end":47924,"line_start":92,"line_end":92,"column_start":1,"column_end":12}},{"value":"/ Three short notes/lemmata:","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/mod.rs","byte_start":47925,"byte_end":47955,"line_start":93,"line_end":93,"column_start":1,"column_end":31}},{"value":"/ - Iff `(a - b) <= 0` then `a.saturating_sub(b) = 0`","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/mod.rs","byte_start":47956,"byte_end":48011,"line_start":94,"line_end":94,"column_start":1,"column_end":56}},{"value":"/ - Iff `(a - b) >= 0` then `a.saturating_sub(b) = a - b`","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/mod.rs","byte_start":48012,"byte_end":48071,"line_start":95,"line_end":95,"column_start":1,"column_end":60}},{"value":"/ - If  `a <= c` then `a.saturating_sub(b) <= c.saturating_sub(b)`","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/mod.rs","byte_start":48072,"byte_end":48140,"line_start":96,"line_end":96,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/mod.rs","byte_start":48141,"byte_end":48144,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ 1.1 We show that if `bottom_width <= x`, then `x_range = 0` therefore `x + [0..x_range)` is empty.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/mod.rs","byte_start":48145,"byte_end":48247,"line_start":98,"line_end":98,"column_start":1,"column_end":103}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/mod.rs","byte_start":48248,"byte_end":48251,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ x_range","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/mod.rs","byte_start":48252,"byte_end":48263,"line_start":100,"line_end":100,"column_start":1,"column_end":12}},{"value":"/  = (top_width.saturating_add(x).min(bottom_width)).saturating_sub(x)","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/mod.rs","byte_start":48264,"byte_end":48336,"line_start":101,"line_end":101,"column_start":1,"column_end":73}},{"value":"/ <= bottom_width.saturating_sub(x)","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/mod.rs","byte_start":48337,"byte_end":48374,"line_start":102,"line_end":102,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/mod.rs","byte_start":48375,"byte_end":48378,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ bottom_width <= x","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/mod.rs","byte_start":48379,"byte_end":48400,"line_start":104,"line_end":104,"column_start":1,"column_end":22}},{"value":"/ <==> bottom_width - x <= 0","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/mod.rs","byte_start":48401,"byte_end":48431,"line_start":105,"line_end":105,"column_start":1,"column_end":31}},{"value":"/ <==> bottom_width.saturating_sub(x) = 0","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/mod.rs","byte_start":48432,"byte_end":48475,"line_start":106,"line_end":106,"column_start":1,"column_end":44}},{"value":"/  ==> x_range <= 0","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/mod.rs","byte_start":48476,"byte_end":48497,"line_start":107,"line_end":107,"column_start":1,"column_end":22}},{"value":"/  ==> x_range  = 0","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/mod.rs","byte_start":48498,"byte_end":48519,"line_start":108,"line_end":108,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/mod.rs","byte_start":48520,"byte_end":48523,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ 1.2 If `x < bottom_width` then `x + x_range < bottom_width`","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/mod.rs","byte_start":48524,"byte_end":48587,"line_start":110,"line_end":110,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/mod.rs","byte_start":48588,"byte_end":48591,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ x + x_range","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/mod.rs","byte_start":48592,"byte_end":48607,"line_start":112,"line_end":112,"column_start":1,"column_end":16}},{"value":"/ <= x + bottom_width.saturating_sub(x)","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/mod.rs","byte_start":48608,"byte_end":48649,"line_start":113,"line_end":113,"column_start":1,"column_end":42}},{"value":"/  = x + (bottom_width - x)","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/mod.rs","byte_start":48650,"byte_end":48679,"line_start":114,"line_end":114,"column_start":1,"column_end":30}},{"value":"/  = bottom_width","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/mod.rs","byte_start":48680,"byte_end":48699,"line_start":115,"line_end":115,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/mod.rs","byte_start":48700,"byte_end":48703,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ 2. We show that `x_range <= top_width`","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/mod.rs","byte_start":48704,"byte_end":48746,"line_start":117,"line_end":117,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/mod.rs","byte_start":48747,"byte_end":48750,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/ x_range","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/mod.rs","byte_start":48751,"byte_end":48762,"line_start":119,"line_end":119,"column_start":1,"column_end":12}},{"value":"/  = (top_width.saturating_add(x).min(bottom_width)).saturating_sub(x)","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/mod.rs","byte_start":48763,"byte_end":48835,"line_start":120,"line_end":120,"column_start":1,"column_end":73}},{"value":"/ <= top_width.saturating_add(x).saturating_sub(x)","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/mod.rs","byte_start":48836,"byte_end":48888,"line_start":121,"line_end":121,"column_start":1,"column_end":53}},{"value":"/ <= (top_wdith + x).saturating_sub(x)","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/mod.rs","byte_start":48889,"byte_end":48929,"line_start":122,"line_end":122,"column_start":1,"column_end":41}},{"value":"/  = top_width (due to `top_width >= 0` and `x >= 0`)","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/mod.rs","byte_start":48930,"byte_end":48985,"line_start":123,"line_end":123,"column_start":1,"column_end":56}},{"value":"/ ```","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/mod.rs","byte_start":48986,"byte_end":48993,"line_start":124,"line_end":124,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/mod.rs","byte_start":48994,"byte_end":48997,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ Proof is the same for height.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/mod.rs","byte_start":48998,"byte_end":49031,"line_start":126,"line_end":126,"column_start":1,"column_end":34}}]},{"kind":"Function","id":{"krate":0,"index":422},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/mod.rs","byte_start":49567,"byte_end":49574,"line_start":145,"line_end":145,"column_start":8,"column_end":15},"name":"overlay","qualname":"::imageops::overlay","value":"fn <I, J> (bottom: &mut I, top: &J, x: u32, y: u32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Overlay an image at a given coordinate (x, y)\n","sig":null,"attributes":[{"value":"/ Overlay an image at a given coordinate (x, y)","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/mod.rs","byte_start":49510,"byte_end":49559,"line_start":144,"line_end":144,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":425},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/mod.rs","byte_start":50306,"byte_end":50313,"line_start":168,"line_end":168,"column_start":8,"column_end":15},"name":"replace","qualname":"::imageops::replace","value":"fn <I, J> (bottom: &mut I, top: &J, x: u32, y: u32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Replace the contents of an image at a given coordinate (x, y)\n","sig":null,"attributes":[{"value":"/ Replace the contents of an image at a given coordinate (x, y)","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/mod.rs","byte_start":50233,"byte_end":50298,"line_start":167,"line_end":167,"column_start":1,"column_end":66}}]},{"kind":"Mod","id":{"krate":0,"index":428},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"io","qualname":"::io","value":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/mod.rs","parent":null,"children":[{"krate":0,"index":429},{"krate":0,"index":475},{"krate":0,"index":532}],"decl_id":null,"docs":" Input and output of images.\n","sig":null,"attributes":[{"value":"! Input and output of images.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/mod.rs","byte_start":104999,"byte_end":105030,"line_start":1,"line_end":1,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":450},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":107227,"byte_end":107233,"line_start":61,"line_end":61,"column_start":12,"column_end":18},"name":"Reader","qualname":"::io::reader::Reader","value":"Reader {  }","parent":null,"children":[{"krate":0,"index":452},{"krate":0,"index":453}],"decl_id":null,"docs":" A multi-format image reader.","sig":null,"attributes":[{"value":"/ A multi-format image reader.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":105428,"byte_end":105460,"line_start":12,"line_end":12,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":105461,"byte_end":105464,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Wraps an input reader to facilitate automatic detection of an image's format, appropriate","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":105465,"byte_end":105558,"line_start":14,"line_end":14,"column_start":1,"column_end":94}},{"value":"/ decoding method, and dispatches into the set of supported [`ImageDecoder`] implementations.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":105559,"byte_end":105654,"line_start":15,"line_end":15,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":105655,"byte_end":105658,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ## Usage","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":105659,"byte_end":105671,"line_start":17,"line_end":17,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":105672,"byte_end":105675,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Opening a file, deducing the format based on the file path automatically, and trying to decode","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":105676,"byte_end":105774,"line_start":19,"line_end":19,"column_start":1,"column_end":99}},{"value":"/ the image contained can be performed by constructing the reader and immediately consuming it.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":105775,"byte_end":105872,"line_start":20,"line_end":20,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":105873,"byte_end":105876,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":105877,"byte_end":105890,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/ # use image::ImageError;","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":105891,"byte_end":105919,"line_start":23,"line_end":23,"column_start":1,"column_end":29}},{"value":"/ # use image::io::Reader;","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":105920,"byte_end":105948,"line_start":24,"line_end":24,"column_start":1,"column_end":29}},{"value":"/ # fn main() -> Result<(), ImageError> {","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":105949,"byte_end":105992,"line_start":25,"line_end":25,"column_start":1,"column_end":44}},{"value":"/ let image = Reader::open(\"path/to/image.png\")?","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":105993,"byte_end":106043,"line_start":26,"line_end":26,"column_start":1,"column_end":51}},{"value":"/     .decode()?;","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":106044,"byte_end":106063,"line_start":27,"line_end":27,"column_start":1,"column_end":20}},{"value":"/ # Ok(()) }","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":106064,"byte_end":106078,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":106079,"byte_end":106086,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":106087,"byte_end":106090,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ It is also possible to make a guess based on the content. This is especially handy if the","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":106091,"byte_end":106184,"line_start":31,"line_end":31,"column_start":1,"column_end":94}},{"value":"/ source is some blob in memory and you have constructed the reader in another way. Here is an","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":106185,"byte_end":106281,"line_start":32,"line_end":32,"column_start":1,"column_end":97}},{"value":"/ example with a `pnm` black-and-white subformat that encodes its pixel matrix with ascii values.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":106282,"byte_end":106381,"line_start":33,"line_end":33,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":106382,"byte_end":106385,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ # use image::ImageError;","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":106481,"byte_end":106509,"line_start":37,"line_end":37,"column_start":1,"column_end":29}},{"value":"/ # use image::io::Reader;","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":106510,"byte_end":106538,"line_start":38,"line_end":38,"column_start":1,"column_end":29}},{"value":"/ # fn main() -> Result<(), ImageError> {","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":106539,"byte_end":106582,"line_start":39,"line_end":39,"column_start":1,"column_end":44}},{"value":"/ use std::io::Cursor;","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":106583,"byte_end":106607,"line_start":40,"line_end":40,"column_start":1,"column_end":25}},{"value":"/ use image::ImageFormat;","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":106608,"byte_end":106635,"line_start":41,"line_end":41,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":106636,"byte_end":106639,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ let raw_data = b\"P1 2 2\\n\\","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":106640,"byte_end":106670,"line_start":43,"line_end":43,"column_start":1,"column_end":31}},{"value":"/     0 1\\n\\","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":106671,"byte_end":106685,"line_start":44,"line_end":44,"column_start":1,"column_end":15}},{"value":"/     1 0\\n\";","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":106686,"byte_end":106701,"line_start":45,"line_end":45,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":106702,"byte_end":106705,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ let mut reader = Reader::new(Cursor::new(raw_data))","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":106706,"byte_end":106761,"line_start":47,"line_end":47,"column_start":1,"column_end":56}},{"value":"/     .with_guessed_format()","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":106762,"byte_end":106792,"line_start":48,"line_end":48,"column_start":1,"column_end":31}},{"value":"/     .expect(\"Cursor io never fails\");","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":106793,"byte_end":106834,"line_start":49,"line_end":49,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(reader.format(), Some(ImageFormat::Pnm));","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":106835,"byte_end":106891,"line_start":50,"line_end":50,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":106892,"byte_end":106895,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ let image = reader.decode()?;","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":106896,"byte_end":106929,"line_start":52,"line_end":52,"column_start":1,"column_end":34}},{"value":"/ # Ok(()) }","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":106930,"byte_end":106944,"line_start":53,"line_end":53,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":106945,"byte_end":106952,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":106953,"byte_end":106956,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ As a final fallback or if only a specific format must be used, the reader always allows manual","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":106957,"byte_end":107055,"line_start":56,"line_end":56,"column_start":1,"column_end":99}},{"value":"/ specification of the supposed image format with [`set_format`].","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":107056,"byte_end":107123,"line_start":57,"line_end":57,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":107124,"byte_end":107127,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ [`set_format`]: #method.set_format","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":107128,"byte_end":107166,"line_start":59,"line_end":59,"column_start":1,"column_end":39}},{"value":"/ [`ImageDecoder`]: ../trait.ImageDecoder.html","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":107167,"byte_end":107215,"line_start":60,"line_end":60,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":456},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":107754,"byte_end":107757,"line_start":76,"line_end":76,"column_start":12,"column_end":15},"name":"new","qualname":"<Reader<R>>::new","value":"fn (reader: R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new image reader without a preset format.","sig":null,"attributes":[{"value":"/ Create a new image reader without a preset format.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":107397,"byte_end":107451,"line_start":69,"line_end":69,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":107456,"byte_end":107459,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ It is possible to guess the format based on the content of the read object with","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":107464,"byte_end":107547,"line_start":71,"line_end":71,"column_start":5,"column_end":88}},{"value":"/ [`with_guessed_format`], or to set the format directly with [`set_format`].","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":107552,"byte_end":107631,"line_start":72,"line_end":72,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":107636,"byte_end":107639,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ [`with_guessed_format`]: #method.with_guessed_format","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":107644,"byte_end":107700,"line_start":74,"line_end":74,"column_start":5,"column_end":61}},{"value":"/ [`set_format`]: method.set_format","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":107705,"byte_end":107742,"line_start":75,"line_end":75,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":457},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":107927,"byte_end":107938,"line_start":84,"line_end":84,"column_start":12,"column_end":23},"name":"with_format","qualname":"<Reader<R>>::with_format","value":"fn (reader: R, format: ImageFormat) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a reader with specified format.\n","sig":null,"attributes":[{"value":"/ Construct a reader with specified format.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":107870,"byte_end":107915,"line_start":83,"line_end":83,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":458},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":108132,"byte_end":108138,"line_start":92,"line_end":92,"column_start":12,"column_end":18},"name":"format","qualname":"<Reader<R>>::format","value":"fn (&self) -> Option<ImageFormat>","parent":null,"children":[],"decl_id":null,"docs":" Get the currently determined format.\n","sig":null,"attributes":[{"value":"/ Get the currently determined format.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":108080,"byte_end":108120,"line_start":91,"line_end":91,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":459},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":108273,"byte_end":108283,"line_start":97,"line_end":97,"column_start":12,"column_end":22},"name":"set_format","qualname":"<Reader<R>>::set_format","value":"fn (&mut self, format: ImageFormat) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Supply the format as which to interpret the read image.\n","sig":null,"attributes":[{"value":"/ Supply the format as which to interpret the read image.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":108202,"byte_end":108261,"line_start":96,"line_end":96,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":460},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":108613,"byte_end":108625,"line_start":105,"line_end":105,"column_start":12,"column_end":24},"name":"clear_format","qualname":"<Reader<R>>::clear_format","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Remove the current information on the image format.","sig":null,"attributes":[{"value":"/ Remove the current information on the image format.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":108365,"byte_end":108420,"line_start":101,"line_end":101,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":108425,"byte_end":108428,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ Note that many operations require format information to be present and will return e.g. an","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":108433,"byte_end":108527,"line_start":103,"line_end":103,"column_start":5,"column_end":99}},{"value":"/ `ImageError::Unsupported` when the image format has not been set.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":108532,"byte_end":108601,"line_start":104,"line_end":104,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":461},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":108712,"byte_end":108722,"line_start":110,"line_end":110,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Reader<R>>::into_inner","value":"fn (self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Unwrap the reader.\n","sig":null,"attributes":[{"value":"/ Unwrap the reader.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":108678,"byte_end":108700,"line_start":109,"line_end":109,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":463},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":109205,"byte_end":109209,"line_start":124,"line_end":124,"column_start":12,"column_end":16},"name":"open","qualname":"<Reader<BufReader<File>>>::open","value":"fn <P> (path: P) -> io::Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Open a file to read, format will be guessed from path.","sig":null,"attributes":[{"value":"/ Open a file to read, format will be guessed from path.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":108799,"byte_end":108857,"line_start":116,"line_end":116,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":108862,"byte_end":108865,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ This will not attempt any io operation on the opened file.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":108870,"byte_end":108932,"line_start":118,"line_end":118,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":108937,"byte_end":108940,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ If you want to inspect the content for a better guess on the format, which does not depend","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":108945,"byte_end":109039,"line_start":120,"line_end":120,"column_start":5,"column_end":99}},{"value":"/ on file extensions, follow this call with a call to [`with_guessed_format`].","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":109044,"byte_end":109124,"line_start":121,"line_end":121,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":109129,"byte_end":109132,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ [`with_guessed_format`]: #method.with_guessed_format","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":109137,"byte_end":109193,"line_start":123,"line_end":123,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":468},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":110855,"byte_end":110874,"line_start":166,"line_end":166,"column_start":12,"column_end":31},"name":"with_guessed_format","qualname":"<Reader<R>>::with_guessed_format","value":"fn (mut self) -> io::Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Make a format guess based on the content, replacing it on success.","sig":null,"attributes":[{"value":"/ Make a format guess based on the content, replacing it on success.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":109577,"byte_end":109647,"line_start":138,"line_end":138,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":109652,"byte_end":109655,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ Returns `Ok` with the guess if no io error occurs. Additionally, replaces the current","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":109660,"byte_end":109749,"line_start":140,"line_end":140,"column_start":5,"column_end":94}},{"value":"/ format if the guess was successful. If the guess was not unable to determine a format then","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":109754,"byte_end":109848,"line_start":141,"line_end":141,"column_start":5,"column_end":99}},{"value":"/ the current format of the reader is unchanged.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":109853,"byte_end":109903,"line_start":142,"line_end":142,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":109908,"byte_end":109911,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ Returns an error if the underlying reader fails. The format is unchanged. The error is a","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":109916,"byte_end":110008,"line_start":144,"line_end":144,"column_start":5,"column_end":97}},{"value":"/ `std::io::Error` and not `ImageError` since the only error case is an error when the","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":110013,"byte_end":110101,"line_start":145,"line_end":145,"column_start":5,"column_end":93}},{"value":"/ underlying reader seeks.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":110106,"byte_end":110134,"line_start":146,"line_end":146,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":110139,"byte_end":110142,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ When an error occurs, the reader may not have been properly reset and it is potentially","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":110147,"byte_end":110238,"line_start":148,"line_end":148,"column_start":5,"column_end":96}},{"value":"/ hazardous to continue with more io.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":110243,"byte_end":110282,"line_start":149,"line_end":149,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":110287,"byte_end":110290,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ ## Usage","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":110295,"byte_end":110307,"line_start":151,"line_end":151,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":110312,"byte_end":110315,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ This supplements the path based type deduction from [`open`](Reader::open) with content based deduction.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":110320,"byte_end":110428,"line_start":153,"line_end":153,"column_start":5,"column_end":113}},{"value":"/ This is more common in Linux and UNIX operating systems and also helpful if the path can","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":110433,"byte_end":110525,"line_start":154,"line_end":154,"column_start":5,"column_end":97}},{"value":"/ not be directly controlled.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":110530,"byte_end":110561,"line_start":155,"line_end":155,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":110566,"byte_end":110569,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":110574,"byte_end":110587,"line_start":157,"line_end":157,"column_start":5,"column_end":18}},{"value":"/ # use image::ImageError;","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":110592,"byte_end":110620,"line_start":158,"line_end":158,"column_start":5,"column_end":33}},{"value":"/ # use image::io::Reader;","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":110625,"byte_end":110653,"line_start":159,"line_end":159,"column_start":5,"column_end":33}},{"value":"/ # fn main() -> Result<(), ImageError> {","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":110658,"byte_end":110701,"line_start":160,"line_end":160,"column_start":5,"column_end":48}},{"value":"/ let image = Reader::open(\"image.unknown\")?","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":110706,"byte_end":110752,"line_start":161,"line_end":161,"column_start":5,"column_end":51}},{"value":"/     .with_guessed_format()?","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":110757,"byte_end":110788,"line_start":162,"line_end":162,"column_start":5,"column_end":36}},{"value":"/     .decode()?;","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":110793,"byte_end":110812,"line_start":163,"line_end":163,"column_start":5,"column_end":24}},{"value":"/ # Ok(()) }","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":110817,"byte_end":110831,"line_start":164,"line_end":164,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":110836,"byte_end":110843,"line_start":165,"line_end":165,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":471},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":111832,"byte_end":111847,"line_start":192,"line_end":192,"column_start":12,"column_end":27},"name":"into_dimensions","qualname":"<Reader<R>>::into_dimensions","value":"fn (mut self) -> ImageResult<(u32, u32)>","parent":null,"children":[],"decl_id":null,"docs":" Read the image dimensions.","sig":null,"attributes":[{"value":"/ Read the image dimensions.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":111619,"byte_end":111649,"line_start":187,"line_end":187,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":111654,"byte_end":111657,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ Uses the current format to construct the correct reader for the format.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":111662,"byte_end":111737,"line_start":189,"line_end":189,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":111742,"byte_end":111745,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ If no format was determined, returns an `ImageError::Unsupported`.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":111750,"byte_end":111820,"line_start":191,"line_end":191,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":472},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":112241,"byte_end":112247,"line_start":202,"line_end":202,"column_start":12,"column_end":18},"name":"decode","qualname":"<Reader<R>>::decode","value":"fn (mut self) -> ImageResult<DynamicImage>","parent":null,"children":[],"decl_id":null,"docs":" Read the image (replaces `load`).","sig":null,"attributes":[{"value":"/ Read the image (replaces `load`).","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":112021,"byte_end":112058,"line_start":197,"line_end":197,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":112063,"byte_end":112066,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ Uses the current format to construct the correct reader for the format.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":112071,"byte_end":112146,"line_start":199,"line_end":199,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":112151,"byte_end":112154,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ If no format was determined, returns an `ImageError::Unsupported`.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":112159,"byte_end":112229,"line_start":201,"line_end":201,"column_start":5,"column_end":75}}]},{"kind":"Function","id":{"krate":0,"index":515},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/free_functions.rs","byte_start":114318,"byte_end":114322,"line_start":65,"line_end":65,"column_start":8,"column_end":12},"name":"load","qualname":"::io::free_functions::load","value":"fn <R> (r: R, format: ImageFormat) -> ImageResult<DynamicImage>","parent":null,"children":[],"decl_id":null,"docs":" Create a new image from a Reader","sig":null,"attributes":[{"value":"/ Create a new image from a Reader","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/free_functions.rs","byte_start":114105,"byte_end":114141,"line_start":58,"line_end":58,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/free_functions.rs","byte_start":114142,"byte_end":114145,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ Try [`io::Reader`] for more advanced uses.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/free_functions.rs","byte_start":114146,"byte_end":114192,"line_start":60,"line_end":60,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/free_functions.rs","byte_start":114193,"byte_end":114196,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ [`io::Reader`]: io/struct.Reader.html","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/free_functions.rs","byte_start":114197,"byte_end":114238,"line_start":62,"line_end":62,"column_start":1,"column_end":42}},{"value":"allow(unused_variables)","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/free_functions.rs","byte_start":114239,"byte_end":114265,"line_start":63,"line_end":63,"column_start":1,"column_end":27}}]},{"kind":"Function","id":{"krate":0,"index":528},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/free_functions.rs","byte_start":124110,"byte_end":124122,"line_start":285,"line_end":285,"column_start":8,"column_end":20},"name":"guess_format","qualname":"::io::free_functions::guess_format","value":"fn (buffer: &[u8]) -> ImageResult<ImageFormat>","parent":null,"children":[],"decl_id":null,"docs":" Guess image format from memory block","sig":null,"attributes":[{"value":"/ Guess image format from memory block","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/free_functions.rs","byte_start":123849,"byte_end":123889,"line_start":280,"line_end":280,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/free_functions.rs","byte_start":123890,"byte_end":123893,"line_start":281,"line_end":281,"column_start":1,"column_end":4}},{"value":"/ Makes an educated guess about the image format based on the Magic Bytes at the beginning.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/free_functions.rs","byte_start":123894,"byte_end":123987,"line_start":282,"line_end":282,"column_start":1,"column_end":94}},{"value":"/ TGA is not supported by this function.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/free_functions.rs","byte_start":123988,"byte_end":124030,"line_start":283,"line_end":283,"column_start":1,"column_end":43}},{"value":"/ This is not to be trusted on the validity of the whole memory block","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/free_functions.rs","byte_start":124031,"byte_end":124102,"line_start":284,"line_end":284,"column_start":1,"column_end":72}}]},{"kind":"Mod","id":{"krate":0,"index":533},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"flat","qualname":"::flat","value":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","parent":null,"children":[{"krate":0,"index":534},{"krate":0,"index":538},{"krate":0,"index":542},{"krate":0,"index":543},{"krate":0,"index":544},{"krate":0,"index":545},{"krate":0,"index":546},{"krate":0,"index":554},{"krate":0,"index":557},{"krate":0,"index":4038},{"krate":0,"index":4046},{"krate":0,"index":4043},{"krate":0,"index":4049},{"krate":0,"index":4069},{"krate":0,"index":4068},{"krate":0,"index":4066},{"krate":0,"index":4062},{"krate":0,"index":4063},{"krate":0,"index":4059},{"krate":0,"index":4060},{"krate":0,"index":4056},{"krate":0,"index":4071},{"krate":0,"index":4097},{"krate":0,"index":4096},{"krate":0,"index":4094},{"krate":0,"index":4090},{"krate":0,"index":4091},{"krate":0,"index":4087},{"krate":0,"index":4088},{"krate":0,"index":4077},{"krate":0,"index":4075},{"krate":0,"index":560},{"krate":0,"index":583},{"krate":0,"index":587},{"krate":0,"index":629},{"krate":0,"index":4099},{"krate":0,"index":4108},{"krate":0,"index":4104},{"krate":0,"index":4112},{"krate":0,"index":4121},{"krate":0,"index":4117},{"krate":0,"index":4125},{"krate":0,"index":4147},{"krate":0,"index":4146},{"krate":0,"index":4144},{"krate":0,"index":4140},{"krate":0,"index":4141},{"krate":0,"index":4137},{"krate":0,"index":4138},{"krate":0,"index":4134},{"krate":0,"index":4149},{"krate":0,"index":4172},{"krate":0,"index":4171},{"krate":0,"index":4169},{"krate":0,"index":4166},{"krate":0,"index":4167},{"krate":0,"index":4163},{"krate":0,"index":4164},{"krate":0,"index":4160},{"krate":0,"index":634},{"krate":0,"index":647},{"krate":0,"index":659},{"krate":0,"index":660},{"krate":0,"index":661},{"krate":0,"index":666},{"krate":0,"index":670},{"krate":0,"index":682},{"krate":0,"index":694},{"krate":0,"index":702},{"krate":0,"index":707}],"decl_id":null,"docs":" Image representations for ffi.","sig":null,"attributes":[{"value":"! Image representations for ffi.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":124898,"byte_end":124932,"line_start":1,"line_end":1,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":124933,"byte_end":124936,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! # Usage","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":124937,"byte_end":124948,"line_start":3,"line_end":3,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":124949,"byte_end":124952,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! Imagine you want to offer a very simple ffi interface: The caller provides an image buffer and","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":124953,"byte_end":125051,"line_start":5,"line_end":5,"column_start":1,"column_end":99}},{"value":"! your program creates a thumbnail from it and dumps that image as `png`. This module is designed","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":125052,"byte_end":125151,"line_start":6,"line_end":6,"column_start":1,"column_end":100}},{"value":"! to help you transition from raw memory data to Rust representation.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":125152,"byte_end":125223,"line_start":7,"line_end":7,"column_start":1,"column_end":72}},{"value":"!","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":125224,"byte_end":125227,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"! ```no_run","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":125228,"byte_end":125241,"line_start":9,"line_end":9,"column_start":1,"column_end":14}},{"value":"! use std::ptr;","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":125242,"byte_end":125259,"line_start":10,"line_end":10,"column_start":1,"column_end":18}},{"value":"! use std::slice;","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":125260,"byte_end":125279,"line_start":11,"line_end":11,"column_start":1,"column_end":20}},{"value":"! use image::Rgb;","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":125280,"byte_end":125299,"line_start":12,"line_end":12,"column_start":1,"column_end":20}},{"value":"! use image::flat::{FlatSamples, SampleLayout};","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":125300,"byte_end":125349,"line_start":13,"line_end":13,"column_start":1,"column_end":50}},{"value":"! use image::imageops::thumbnail;","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":125350,"byte_end":125385,"line_start":14,"line_end":14,"column_start":1,"column_end":36}},{"value":"!","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":125386,"byte_end":125389,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"! #[no_mangle]","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":125390,"byte_end":125406,"line_start":16,"line_end":16,"column_start":1,"column_end":17}},{"value":"! pub extern \"C\" fn store_rgb8_compressed(","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":125407,"byte_end":125451,"line_start":17,"line_end":17,"column_start":1,"column_end":45}},{"value":"!     data: *const u8, len: usize,","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":125452,"byte_end":125488,"line_start":18,"line_end":18,"column_start":1,"column_end":37}},{"value":"!     layout: *const SampleLayout","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":125489,"byte_end":125524,"line_start":19,"line_end":19,"column_start":1,"column_end":36}},{"value":"! )","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":125525,"byte_end":125530,"line_start":20,"line_end":20,"column_start":1,"column_end":6}},{"value":"!     -> bool","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":125531,"byte_end":125546,"line_start":21,"line_end":21,"column_start":1,"column_end":16}},{"value":"! {","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":125547,"byte_end":125552,"line_start":22,"line_end":22,"column_start":1,"column_end":6}},{"value":"!     let samples = unsafe { slice::from_raw_parts(data, len) };","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":125553,"byte_end":125619,"line_start":23,"line_end":23,"column_start":1,"column_end":67}},{"value":"!     let layout = unsafe { ptr::read(layout) };","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":125620,"byte_end":125670,"line_start":24,"line_end":24,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":125671,"byte_end":125674,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"!     let buffer = FlatSamples {","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":125675,"byte_end":125709,"line_start":26,"line_end":26,"column_start":1,"column_end":35}},{"value":"!         samples,","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":125710,"byte_end":125730,"line_start":27,"line_end":27,"column_start":1,"column_end":21}},{"value":"!         layout,","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":125731,"byte_end":125750,"line_start":28,"line_end":28,"column_start":1,"column_end":20}},{"value":"!         color_hint: None,","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":125751,"byte_end":125780,"line_start":29,"line_end":29,"column_start":1,"column_end":30}},{"value":"!     };","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":125781,"byte_end":125791,"line_start":30,"line_end":30,"column_start":1,"column_end":11}},{"value":"!","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":125792,"byte_end":125795,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"!     let view = match buffer.as_view::<Rgb<u8>>() {","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":125796,"byte_end":125850,"line_start":32,"line_end":32,"column_start":1,"column_end":55}},{"value":"!         Err(_) => return false, // Invalid layout.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":125851,"byte_end":125905,"line_start":33,"line_end":33,"column_start":1,"column_end":55}},{"value":"!         Ok(view) => view,","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":125906,"byte_end":125935,"line_start":34,"line_end":34,"column_start":1,"column_end":30}},{"value":"!     };","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":125936,"byte_end":125946,"line_start":35,"line_end":35,"column_start":1,"column_end":11}},{"value":"!","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":125947,"byte_end":125950,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"!     thumbnail(&view, 64, 64)","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":125951,"byte_end":125983,"line_start":37,"line_end":37,"column_start":1,"column_end":33}},{"value":"!         .save(\"output.png\")","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":125984,"byte_end":126015,"line_start":38,"line_end":38,"column_start":1,"column_end":32}},{"value":"!         .map(|_| true)","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":126016,"byte_end":126042,"line_start":39,"line_end":39,"column_start":1,"column_end":27}},{"value":"!         .unwrap_or_else(|_| false)","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":126043,"byte_end":126081,"line_start":40,"line_end":40,"column_start":1,"column_end":39}},{"value":"! }","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":126082,"byte_end":126087,"line_start":41,"line_end":41,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":126088,"byte_end":126095,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":126096,"byte_end":126099,"line_start":43,"line_end":43,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":4038},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":128090,"byte_end":128101,"line_start":81,"line_end":81,"column_start":12,"column_end":23},"name":"FlatSamples","qualname":"::flat::FlatSamples","value":"FlatSamples { samples, layout, color_hint }","parent":null,"children":[{"krate":0,"index":4040},{"krate":0,"index":4041},{"krate":0,"index":4042}],"decl_id":null,"docs":" A flat buffer over a (multi channel) image.","sig":null,"attributes":[{"value":"/ A flat buffer over a (multi channel) image.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":126507,"byte_end":126554,"line_start":56,"line_end":56,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":126555,"byte_end":126558,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ In contrast to `ImageBuffer`, this representation of a sample collection is much more lenient","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":126559,"byte_end":126656,"line_start":58,"line_end":58,"column_start":1,"column_end":98}},{"value":"/ in the layout thereof. It also allows grouping by color planes instead of by pixel as long as","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":126657,"byte_end":126754,"line_start":59,"line_end":59,"column_start":1,"column_end":98}},{"value":"/ the strides of each extent are constant. This struct itself has no invariants on the strides","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":126755,"byte_end":126851,"line_start":60,"line_end":60,"column_start":1,"column_end":97}},{"value":"/ but not every possible configuration can be interpreted as a [`GenericImageView`] or","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":126852,"byte_end":126940,"line_start":61,"line_end":61,"column_start":1,"column_end":89}},{"value":"/ [`GenericImage`]. The methods [`as_view`] and [`as_view_mut`] construct the actual implementors","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":126941,"byte_end":127040,"line_start":62,"line_end":62,"column_start":1,"column_end":100}},{"value":"/ of these traits and perform necessary checks. To manually perform this and other layout checks","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":127041,"byte_end":127139,"line_start":63,"line_end":63,"column_start":1,"column_end":99}},{"value":"/ use [`is_normal`] or [`has_aliased_samples`].","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":127140,"byte_end":127189,"line_start":64,"line_end":64,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":127190,"byte_end":127193,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ Instances can be constructed not only by hand. The buffer instances returned by library","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":127194,"byte_end":127285,"line_start":66,"line_end":66,"column_start":1,"column_end":92}},{"value":"/ functions such as [`ImageBuffer::as_flat_samples`] guarantee that the conversion to a generic","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":127286,"byte_end":127383,"line_start":67,"line_end":67,"column_start":1,"column_end":98}},{"value":"/ image or generic view succeeds. A very different constructor is [`with_monocolor`]. It uses a","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":127384,"byte_end":127481,"line_start":68,"line_end":68,"column_start":1,"column_end":98}},{"value":"/ single pixel as the backing storage for an arbitrarily sized read-only raster by mapping each","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":127482,"byte_end":127579,"line_start":69,"line_end":69,"column_start":1,"column_end":98}},{"value":"/ pixel to the same samples by setting some strides to `0`.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":127580,"byte_end":127641,"line_start":70,"line_end":70,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":127642,"byte_end":127645,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ [`GenericImage`]: ../trait.GenericImage.html","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":127646,"byte_end":127694,"line_start":72,"line_end":72,"column_start":1,"column_end":49}},{"value":"/ [`GenericImageView`]: ../trait.GenericImageView.html","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":127695,"byte_end":127751,"line_start":73,"line_end":73,"column_start":1,"column_end":57}},{"value":"/ [`ImageBuffer::as_flat_samples`]: ../struct.ImageBuffer.html#method.as_flat_samples","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":127752,"byte_end":127839,"line_start":74,"line_end":74,"column_start":1,"column_end":88}},{"value":"/ [`is_normal`]: #method.is_normal","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":127840,"byte_end":127876,"line_start":75,"line_end":75,"column_start":1,"column_end":37}},{"value":"/ [`has_aliased_samples`]: #method.has_aliased_samples","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":127877,"byte_end":127933,"line_start":76,"line_end":76,"column_start":1,"column_end":57}},{"value":"/ [`as_view`]: #method.as_view","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":127934,"byte_end":127966,"line_start":77,"line_end":77,"column_start":1,"column_end":33}},{"value":"/ [`as_view_mut`]: #method.as_view_mut","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":127967,"byte_end":128007,"line_start":78,"line_end":78,"column_start":1,"column_end":41}},{"value":"/ [`with_monocolor`]: #method.with_monocolor","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":128008,"byte_end":128054,"line_start":79,"line_end":79,"column_start":1,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":4040},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":128179,"byte_end":128186,"line_start":83,"line_end":83,"column_start":9,"column_end":16},"name":"samples","qualname":"::flat::FlatSamples::samples","value":"Buffer","parent":{"krate":0,"index":4038},"children":[],"decl_id":null,"docs":" Underlying linear container holding sample values.\n","sig":null,"attributes":[{"value":"/ Underlying linear container holding sample values.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":128116,"byte_end":128170,"line_start":82,"line_end":82,"column_start":5,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":4041},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":128270,"byte_end":128276,"line_start":86,"line_end":86,"column_start":9,"column_end":15},"name":"layout","qualname":"::flat::FlatSamples::layout","value":"flat::SampleLayout","parent":{"krate":0,"index":4038},"children":[],"decl_id":null,"docs":" A `repr(C)` description of the layout of buffer samples.\n","sig":null,"attributes":[{"value":"/ A `repr(C)` description of the layout of buffer samples.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":128201,"byte_end":128261,"line_start":85,"line_end":85,"column_start":5,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":4042},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":128731,"byte_end":128741,"line_start":94,"line_end":94,"column_start":9,"column_end":19},"name":"color_hint","qualname":"::flat::FlatSamples::color_hint","value":"std::option::Option<color::ColorType>","parent":{"krate":0,"index":4038},"children":[],"decl_id":null,"docs":" Supplementary color information.","sig":null,"attributes":[{"value":"/ Supplementary color information.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":128297,"byte_end":128333,"line_start":88,"line_end":88,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":128338,"byte_end":128341,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ You may keep this as `None` in most cases. This is NOT checked in `View` or other","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":128346,"byte_end":128431,"line_start":90,"line_end":90,"column_start":5,"column_end":90}},{"value":"/ converters. It is intended mainly as a way for types that convert to this buffer type to","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":128436,"byte_end":128528,"line_start":91,"line_end":91,"column_start":5,"column_end":97}},{"value":"/ attach their otherwise static color information. A dynamic image representation could","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":128533,"byte_end":128622,"line_start":92,"line_end":92,"column_start":5,"column_end":94}},{"value":"/ however use this to resolve representational ambiguities such as the order of RGB channels.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":128627,"byte_end":128722,"line_start":93,"line_end":93,"column_start":5,"column_end":100}}]},{"kind":"Struct","id":{"krate":0,"index":4049},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":128891,"byte_end":128903,"line_start":100,"line_end":100,"column_start":12,"column_end":24},"name":"SampleLayout","qualname":"::flat::SampleLayout","value":"SampleLayout { channels, channel_stride, width, width_stride, height, height_stride }","parent":null,"children":[{"krate":0,"index":4050},{"krate":0,"index":4051},{"krate":0,"index":4052},{"krate":0,"index":4053},{"krate":0,"index":4054},{"krate":0,"index":4055}],"decl_id":null,"docs":" A ffi compatible description of a sample buffer.\n","sig":null,"attributes":[{"value":"/ A ffi compatible description of a sample buffer.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":128765,"byte_end":128817,"line_start":97,"line_end":97,"column_start":1,"column_end":53}},{"value":"repr(C)","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":128818,"byte_end":128828,"line_start":98,"line_end":98,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":4050},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":128987,"byte_end":128995,"line_start":102,"line_end":102,"column_start":9,"column_end":17},"name":"channels","qualname":"::flat::SampleLayout::channels","value":"u8","parent":{"krate":0,"index":4049},"children":[],"decl_id":null,"docs":" The number of channels in the color representation of the image.\n","sig":null,"attributes":[{"value":"/ The number of channels in the color representation of the image.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":128910,"byte_end":128978,"line_start":101,"line_end":101,"column_start":5,"column_end":73}}]},{"kind":"Field","id":{"krate":0,"index":4051},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":129081,"byte_end":129095,"line_start":105,"line_end":105,"column_start":9,"column_end":23},"name":"channel_stride","qualname":"::flat::SampleLayout::channel_stride","value":"usize","parent":{"krate":0,"index":4049},"children":[],"decl_id":null,"docs":" Add this to an index to get to the sample in the next channel.\n","sig":null,"attributes":[{"value":"/ Add this to an index to get to the sample in the next channel.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":129006,"byte_end":129072,"line_start":104,"line_end":104,"column_start":5,"column_end":71}}]},{"kind":"Field","id":{"krate":0,"index":4052},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":129157,"byte_end":129162,"line_start":108,"line_end":108,"column_start":9,"column_end":14},"name":"width","qualname":"::flat::SampleLayout::width","value":"u32","parent":{"krate":0,"index":4049},"children":[],"decl_id":null,"docs":" The width of the represented image.\n","sig":null,"attributes":[{"value":"/ The width of the represented image.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":129109,"byte_end":129148,"line_start":107,"line_end":107,"column_start":5,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":4053},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":129249,"byte_end":129261,"line_start":111,"line_end":111,"column_start":9,"column_end":21},"name":"width_stride","qualname":"::flat::SampleLayout::width_stride","value":"usize","parent":{"krate":0,"index":4049},"children":[],"decl_id":null,"docs":" Add this to an index to get to the next sample in x-direction.\n","sig":null,"attributes":[{"value":"/ Add this to an index to get to the next sample in x-direction.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":129174,"byte_end":129240,"line_start":110,"line_end":110,"column_start":5,"column_end":71}}]},{"kind":"Field","id":{"krate":0,"index":4054},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":129324,"byte_end":129330,"line_start":114,"line_end":114,"column_start":9,"column_end":15},"name":"height","qualname":"::flat::SampleLayout::height","value":"u32","parent":{"krate":0,"index":4049},"children":[],"decl_id":null,"docs":" The height of the represented image.\n","sig":null,"attributes":[{"value":"/ The height of the represented image.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":129275,"byte_end":129315,"line_start":113,"line_end":113,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":4055},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":129417,"byte_end":129430,"line_start":117,"line_end":117,"column_start":9,"column_end":22},"name":"height_stride","qualname":"::flat::SampleLayout::height_stride","value":"usize","parent":{"krate":0,"index":4049},"children":[],"decl_id":null,"docs":" Add this to an index to get to the next sample in y-direction.\n","sig":null,"attributes":[{"value":"/ Add this to an index to get to the next sample in y-direction.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":129342,"byte_end":129408,"line_start":116,"line_end":116,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":561},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":130405,"byte_end":130421,"line_start":141,"line_end":141,"column_start":12,"column_end":28},"name":"row_major_packed","qualname":"<SampleLayout>::row_major_packed","value":"fn (channels: u8, width: u32, height: u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Describe a row-major image packed in all directions.","sig":null,"attributes":[{"value":"/ Describe a row-major image packed in all directions.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":129611,"byte_end":129667,"line_start":125,"line_end":125,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":129672,"byte_end":129675,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ The resulting will surely be `NormalForm::RowMajorPacked`. It can therefore be converted to","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":129680,"byte_end":129775,"line_start":127,"line_end":127,"column_start":5,"column_end":100}},{"value":"/ safely to an `ImageBuffer` with a large enough underlying buffer.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":129780,"byte_end":129849,"line_start":128,"line_end":128,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":129854,"byte_end":129857,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":129862,"byte_end":129869,"line_start":130,"line_end":130,"column_start":5,"column_end":12}},{"value":"/ # use image::flat::{NormalForm, SampleLayout};","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":129874,"byte_end":129924,"line_start":131,"line_end":131,"column_start":5,"column_end":55}},{"value":"/ let layout = SampleLayout::row_major_packed(3, 640, 480);","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":129929,"byte_end":129990,"line_start":132,"line_end":132,"column_start":5,"column_end":66}},{"value":"/ assert!(layout.is_normal(NormalForm::RowMajorPacked));","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":129995,"byte_end":130053,"line_start":133,"line_end":133,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":130058,"byte_end":130065,"line_start":134,"line_end":134,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":130070,"byte_end":130073,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":130078,"byte_end":130090,"line_start":136,"line_end":136,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":130095,"byte_end":130098,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ On platforms where `usize` has the same size as `u32` this panics when the resulting stride","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":130103,"byte_end":130198,"line_start":138,"line_end":138,"column_start":5,"column_end":100}},{"value":"/ in the `height` direction would be larger than `usize::max_value()`. On other platforms","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":130203,"byte_end":130294,"line_start":139,"line_end":139,"column_start":5,"column_end":96}},{"value":"/ where it can surely accomodate `u8::max_value() * u32::max_value(), this can never happen.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":130299,"byte_end":130393,"line_start":140,"line_end":140,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":562},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":131672,"byte_end":131691,"line_start":170,"line_end":170,"column_start":12,"column_end":31},"name":"column_major_packed","qualname":"<SampleLayout>::column_major_packed","value":"fn (channels: u8, width: u32, height: u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Describe a column-major image packed in all directions.","sig":null,"attributes":[{"value":"/ Describe a column-major image packed in all directions.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":130859,"byte_end":130918,"line_start":154,"line_end":154,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":130923,"byte_end":130926,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ The resulting will surely be `NormalForm::ColumnMajorPacked`. This is not particularly","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":130931,"byte_end":131021,"line_start":156,"line_end":156,"column_start":5,"column_end":95}},{"value":"/ useful for conversion but can be used to describe such a buffer without pitfalls.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":131026,"byte_end":131111,"line_start":157,"line_end":157,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":131116,"byte_end":131119,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":131124,"byte_end":131131,"line_start":159,"line_end":159,"column_start":5,"column_end":12}},{"value":"/ # use image::flat::{NormalForm, SampleLayout};","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":131136,"byte_end":131186,"line_start":160,"line_end":160,"column_start":5,"column_end":55}},{"value":"/ let layout = SampleLayout::column_major_packed(3, 640, 480);","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":131191,"byte_end":131255,"line_start":161,"line_end":161,"column_start":5,"column_end":69}},{"value":"/ assert!(layout.is_normal(NormalForm::ColumnMajorPacked));","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":131260,"byte_end":131321,"line_start":162,"line_end":162,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":131326,"byte_end":131333,"line_start":163,"line_end":163,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":131338,"byte_end":131341,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":131346,"byte_end":131358,"line_start":165,"line_end":165,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":131363,"byte_end":131366,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ On platforms where `usize` has the same size as `u32` this panics when the resulting stride","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":131371,"byte_end":131466,"line_start":167,"line_end":167,"column_start":5,"column_end":100}},{"value":"/ in the `width` direction would be larger than `usize::max_value()`. On other platforms","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":131471,"byte_end":131561,"line_start":168,"line_end":168,"column_start":5,"column_end":95}},{"value":"/ where it can surely accomodate `u8::max_value() * u32::max_value(), this can never happen.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":131566,"byte_end":131660,"line_start":169,"line_end":169,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":563},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":132307,"byte_end":132318,"line_start":187,"line_end":187,"column_start":12,"column_end":23},"name":"strides_cwh","qualname":"<SampleLayout>::strides_cwh","value":"fn (&self) -> (usize, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Get the strides for indexing matrix-like `[(c, w, h)]`.","sig":null,"attributes":[{"value":"/ Get the strides for indexing matrix-like `[(c, w, h)]`.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":132132,"byte_end":132191,"line_start":183,"line_end":183,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":132196,"byte_end":132199,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ For a row-major layout with grouped samples, this tuple is strictly","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":132204,"byte_end":132275,"line_start":185,"line_end":185,"column_start":5,"column_end":76}},{"value":"/ increasing.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":132280,"byte_end":132295,"line_start":186,"line_end":186,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":564},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":132635,"byte_end":132642,"line_start":195,"line_end":195,"column_start":12,"column_end":19},"name":"extents","qualname":"<SampleLayout>::extents","value":"fn (&self) -> (usize, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Get the dimensions `(channels, width, height)`.","sig":null,"attributes":[{"value":"/ Get the dimensions `(channels, width, height)`.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":132433,"byte_end":132484,"line_start":191,"line_end":191,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":132489,"byte_end":132492,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ The interface is optimized for use with `strides_cwh` instead. The channel extent will be","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":132497,"byte_end":132590,"line_start":193,"line_end":193,"column_start":5,"column_end":98}},{"value":"/ before width and height.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":132595,"byte_end":132623,"line_start":194,"line_end":194,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":565},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":133016,"byte_end":133022,"line_start":203,"line_end":203,"column_start":12,"column_end":18},"name":"bounds","qualname":"<SampleLayout>::bounds","value":"fn (&self) -> (u8, u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Tuple of bounds in the order of coordinate inputs.","sig":null,"attributes":[{"value":"/ Tuple of bounds in the order of coordinate inputs.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":132764,"byte_end":132818,"line_start":199,"line_end":199,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":132823,"byte_end":132826,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ This function should be used whenever working with image coordinates opposed to buffer","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":132831,"byte_end":132921,"line_start":201,"line_end":201,"column_start":5,"column_end":95}},{"value":"/ coordinates. The only difference compared to `extents` is the output type.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":132926,"byte_end":133004,"line_start":202,"line_end":202,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":566},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":135175,"byte_end":135185,"line_start":258,"line_end":258,"column_start":12,"column_end":22},"name":"min_length","qualname":"<SampleLayout>::min_length","value":"fn (&self) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Get the minimum length of a buffer such that all in-bounds samples have valid indices.","sig":null,"attributes":[{"value":"/ Get the minimum length of a buffer such that all in-bounds samples have valid indices.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":133110,"byte_end":133200,"line_start":207,"line_end":207,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":133205,"byte_end":133208,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ This method will allow zero strides, allowing compact representations of monochrome images.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":133213,"byte_end":133308,"line_start":209,"line_end":209,"column_start":5,"column_end":100}},{"value":"/ To check that no aliasing occurs, try `check_alias_invariants`. For compact images (no","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":133313,"byte_end":133403,"line_start":210,"line_end":210,"column_start":5,"column_end":95}},{"value":"/ aliasing and no unindexed samples) this is `width*height*channels`. But for both of the","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":133408,"byte_end":133499,"line_start":211,"line_end":211,"column_start":5,"column_end":96}},{"value":"/ other cases, the reasoning is slightly more involved.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":133504,"byte_end":133561,"line_start":212,"line_end":212,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":133566,"byte_end":133569,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ # Explanation","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":133574,"byte_end":133591,"line_start":214,"line_end":214,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":133596,"byte_end":133599,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ Note that there is a difference between `min_length` and the index of the sample","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":133604,"byte_end":133688,"line_start":216,"line_end":216,"column_start":5,"column_end":89}},{"value":"/ 'one-past-the-end`. This is due to strides that may be larger than the dimension below.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":133693,"byte_end":133784,"line_start":217,"line_end":217,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":133789,"byte_end":133792,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ ## Example with holes","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":133797,"byte_end":133822,"line_start":219,"line_end":219,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":133827,"byte_end":133830,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ Let's look at an example of a grayscale image with","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":133835,"byte_end":133889,"line_start":221,"line_end":221,"column_start":5,"column_end":59}},{"value":"/ * `width_stride = 1`","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":133894,"byte_end":133918,"line_start":222,"line_end":222,"column_start":5,"column_end":29}},{"value":"/ * `width = 2`","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":133923,"byte_end":133940,"line_start":223,"line_end":223,"column_start":5,"column_end":22}},{"value":"/ * `height_stride = 3`","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":133945,"byte_end":133970,"line_start":224,"line_end":224,"column_start":5,"column_end":30}},{"value":"/ * `height = 2`","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":133975,"byte_end":133993,"line_start":225,"line_end":225,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":133998,"byte_end":134001,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":134006,"byte_end":134017,"line_start":227,"line_end":227,"column_start":5,"column_end":16}},{"value":"/ | x x   | x x m | $","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":134022,"byte_end":134045,"line_start":228,"line_end":228,"column_start":5,"column_end":28}},{"value":"/  min_length m ^","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":134050,"byte_end":134069,"line_start":229,"line_end":229,"column_start":5,"column_end":24}},{"value":"/                   ^ one-past-the-end $","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":134074,"byte_end":134116,"line_start":230,"line_end":230,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":134121,"byte_end":134128,"line_start":231,"line_end":231,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":134133,"byte_end":134136,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ The difference is also extreme for empty images with large strides. The one-past-the-end","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":134141,"byte_end":134233,"line_start":233,"line_end":233,"column_start":5,"column_end":97}},{"value":"/ sample index is still as large as the largest of these strides while `min_length = 0`.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":134238,"byte_end":134328,"line_start":234,"line_end":234,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":134333,"byte_end":134336,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ ## Example with aliasing","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":134341,"byte_end":134369,"line_start":236,"line_end":236,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":134374,"byte_end":134377,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ The concept gets even more important when you allow samples to alias each other. Here we","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":134382,"byte_end":134474,"line_start":238,"line_end":238,"column_start":5,"column_end":97}},{"value":"/ have the buffer of a small grayscale image where this is the case, this time we will first","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":134479,"byte_end":134573,"line_start":239,"line_end":239,"column_start":5,"column_end":99}},{"value":"/ show the buffer and then the individual rows below.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":134578,"byte_end":134633,"line_start":240,"line_end":240,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":134638,"byte_end":134641,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ * `width_stride = 1`","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":134646,"byte_end":134670,"line_start":242,"line_end":242,"column_start":5,"column_end":29}},{"value":"/ * `width = 3`","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":134675,"byte_end":134692,"line_start":243,"line_end":243,"column_start":5,"column_end":22}},{"value":"/ * `height_stride = 2`","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":134697,"byte_end":134722,"line_start":244,"line_end":244,"column_start":5,"column_end":30}},{"value":"/ * `height = 2`","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":134727,"byte_end":134745,"line_start":245,"line_end":245,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":134750,"byte_end":134753,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":134758,"byte_end":134769,"line_start":247,"line_end":247,"column_start":5,"column_end":16}},{"value":"/  1 2 3 4 5 m","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":134774,"byte_end":134790,"line_start":248,"line_end":248,"column_start":5,"column_end":21}},{"value":"/ |1 2 3| row one","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":134795,"byte_end":134814,"line_start":249,"line_end":249,"column_start":5,"column_end":24}},{"value":"/     |3 4 5| row two","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":134819,"byte_end":134842,"line_start":250,"line_end":250,"column_start":5,"column_end":28}},{"value":"/            ^ m min_length","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":134847,"byte_end":134876,"line_start":251,"line_end":251,"column_start":5,"column_end":34}},{"value":"/          ^ ??? one-past-the-end","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":134881,"byte_end":134916,"line_start":252,"line_end":252,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":134921,"byte_end":134928,"line_start":253,"line_end":253,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":134933,"byte_end":134936,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ This time 'one-past-the-end' is not even simply the largest stride times the extent of its","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":134941,"byte_end":135035,"line_start":255,"line_end":255,"column_start":5,"column_end":99}},{"value":"/ dimension. That still points inside the image because `height*height_stride = 4` but also","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":135040,"byte_end":135133,"line_start":256,"line_end":256,"column_start":5,"column_end":98}},{"value":"/ `index_of(1, 2) = 4`.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":135138,"byte_end":135163,"line_start":257,"line_end":257,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":568},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":135517,"byte_end":135521,"line_start":268,"line_end":268,"column_start":12,"column_end":16},"name":"fits","qualname":"<SampleLayout>::fits","value":"fn (&self, len: usize) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if a buffer of length `len` is large enough.\n","sig":null,"attributes":[{"value":"/ Check if a buffer of length `len` is large enough.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":135451,"byte_end":135505,"line_start":267,"line_end":267,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":573},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":136631,"byte_end":136650,"line_start":293,"line_end":293,"column_start":12,"column_end":31},"name":"has_aliased_samples","qualname":"<SampleLayout>::has_aliased_samples","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" If there are any samples aliasing each other.","sig":null,"attributes":[{"value":"/ If there are any samples aliasing each other.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":136281,"byte_end":136330,"line_start":288,"line_end":288,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":136335,"byte_end":136338,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ If this is not the case, it would always be safe to allow mutable access to two different","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":136343,"byte_end":136436,"line_start":290,"line_end":290,"column_start":5,"column_end":98}},{"value":"/ samples at the same time. Otherwise, this operation would need additional checks. When one","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":136441,"byte_end":136535,"line_start":291,"line_end":291,"column_start":5,"column_end":99}},{"value":"/ dimension overflows `usize` with its stride we also consider this aliasing.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":136540,"byte_end":136619,"line_start":292,"line_end":292,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":574},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":137895,"byte_end":137904,"line_start":323,"line_end":323,"column_start":12,"column_end":21},"name":"is_normal","qualname":"<SampleLayout>::is_normal","value":"fn (&self, form: NormalForm) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if a buffer fulfills the requirements of a normal form.","sig":null,"attributes":[{"value":"/ Check if a buffer fulfills the requirements of a normal form.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":137385,"byte_end":137450,"line_start":316,"line_end":316,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":137455,"byte_end":137458,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ Certain conversions have preconditions on the structure of the sample buffer that are not","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":137463,"byte_end":137556,"line_start":318,"line_end":318,"column_start":5,"column_end":98}},{"value":"/ captured (by design) by the type system. These are then checked before the conversion. Such","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":137561,"byte_end":137656,"line_start":319,"line_end":319,"column_start":5,"column_end":100}},{"value":"/ checks can all be done in constant time and will not inspect the buffer content. You can","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":137661,"byte_end":137753,"line_start":320,"line_end":320,"column_start":5,"column_end":97}},{"value":"/ perform these checks yourself when the conversion is not required at this moment but maybe","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":137758,"byte_end":137852,"line_start":321,"line_end":321,"column_start":5,"column_end":99}},{"value":"/ still performed later.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":137857,"byte_end":137883,"line_start":322,"line_end":322,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":575},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":139602,"byte_end":139611,"line_start":378,"line_end":378,"column_start":12,"column_end":21},"name":"in_bounds","qualname":"<SampleLayout>::in_bounds","value":"fn (&self, channel: u8, x: u32, y: u32) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check that the pixel and the channel index are in bounds.","sig":null,"attributes":[{"value":"/ Check that the pixel and the channel index are in bounds.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":139260,"byte_end":139321,"line_start":373,"line_end":373,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":139326,"byte_end":139329,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ An in-bound coordinate does not yet guarantee that the corresponding calculation of a","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":139334,"byte_end":139423,"line_start":375,"line_end":375,"column_start":5,"column_end":94}},{"value":"/ buffer index does not overflow. However, if such a buffer large enough to hold all samples","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":139428,"byte_end":139522,"line_start":376,"line_end":376,"column_start":5,"column_end":99}},{"value":"/ actually exists in memory, this porperty of course follows.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":139527,"byte_end":139590,"line_start":377,"line_end":377,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":576},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":139885,"byte_end":139890,"line_start":385,"line_end":385,"column_start":12,"column_end":17},"name":"index","qualname":"<SampleLayout>::index","value":"fn (&self, channel: u8, x: u32, y: u32) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Resolve the index of a particular sample.","sig":null,"attributes":[{"value":"/ Resolve the index of a particular sample.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":139738,"byte_end":139783,"line_start":382,"line_end":382,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":139788,"byte_end":139791,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ `None` if the index is outside the bounds or does not fit into a `usize`.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":139796,"byte_end":139873,"line_start":384,"line_end":384,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":577},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":140484,"byte_end":140505,"line_start":398,"line_end":398,"column_start":12,"column_end":33},"name":"index_ignoring_bounds","qualname":"<SampleLayout>::index_ignoring_bounds","value":"fn (&self, channel: usize, x: usize, y: usize) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Get the theoretical position of sample (channel, x, y).","sig":null,"attributes":[{"value":"/ Get the theoretical position of sample (channel, x, y).","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":140113,"byte_end":140172,"line_start":393,"line_end":393,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":140177,"byte_end":140180,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ The 'check' is for overflow during index calculation, not that it is contained in the","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":140185,"byte_end":140274,"line_start":395,"line_end":395,"column_start":5,"column_end":94}},{"value":"/ image. Two samples may return the same index, even when one of them is out of bounds. This","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":140279,"byte_end":140373,"line_start":396,"line_end":396,"column_start":5,"column_end":99}},{"value":"/ happens when all strides are `0`, i.e. the image is an arbitrarily large monochrome image.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":140378,"byte_end":140472,"line_start":397,"line_end":397,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":581},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":141436,"byte_end":141451,"line_start":419,"line_end":419,"column_start":12,"column_end":27},"name":"in_bounds_index","qualname":"<SampleLayout>::in_bounds_index","value":"fn (&self, c: u8, x: u32, y: u32) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get an index provided it is inbouds.","sig":null,"attributes":[{"value":"/ Get an index provided it is inbouds.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":141135,"byte_end":141175,"line_start":414,"line_end":414,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":141180,"byte_end":141183,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ Assumes that the image is backed by some sufficiently large buffer. Then computation can","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":141188,"byte_end":141280,"line_start":416,"line_end":416,"column_start":5,"column_end":97}},{"value":"/ not overflow as we could represent the maximum coordinate. Since overflow is defined either","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":141285,"byte_end":141380,"line_start":417,"line_end":417,"column_start":5,"column_end":100}},{"value":"/ way, this method can not be unsafe.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":141385,"byte_end":141424,"line_start":418,"line_end":418,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":582},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":141979,"byte_end":141988,"line_start":430,"line_end":430,"column_start":12,"column_end":21},"name":"shrink_to","qualname":"<SampleLayout>::shrink_to","value":"fn (&mut self, channels: u8, width: u32, height: u32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Shrink the image to the minimum of current and given extents.","sig":null,"attributes":[{"value":"/ Shrink the image to the minimum of current and given extents.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":141654,"byte_end":141719,"line_start":425,"line_end":425,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":141724,"byte_end":141727,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ This does not modify the strides, so that the resulting sample buffer may have holes","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":141732,"byte_end":141820,"line_start":427,"line_end":427,"column_start":5,"column_end":93}},{"value":"/ created by the shrinking operation. Shrinking could also lead to an non-aliasing image when","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":141825,"byte_end":141920,"line_start":428,"line_end":428,"column_start":5,"column_end":100}},{"value":"/ samples had aliased each other before.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":141925,"byte_end":141967,"line_start":429,"line_end":429,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":589},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":142661,"byte_end":142672,"line_start":457,"line_end":457,"column_start":12,"column_end":23},"name":"strides_cwh","qualname":"<FlatSamples<Buffer>>::strides_cwh","value":"fn (&self) -> (usize, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Get the strides for indexing matrix-like `[(c, w, h)]`.","sig":null,"attributes":[{"value":"/ Get the strides for indexing matrix-like `[(c, w, h)]`.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":142486,"byte_end":142545,"line_start":453,"line_end":453,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":142550,"byte_end":142553,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ For a row-major layout with grouped samples, this tuple is strictly","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":142558,"byte_end":142629,"line_start":455,"line_end":455,"column_start":5,"column_end":76}},{"value":"/ increasing.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":142634,"byte_end":142649,"line_start":456,"line_end":456,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":590},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":142954,"byte_end":142961,"line_start":465,"line_end":465,"column_start":12,"column_end":19},"name":"extents","qualname":"<FlatSamples<Buffer>>::extents","value":"fn (&self) -> (usize, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Get the dimensions `(channels, width, height)`.","sig":null,"attributes":[{"value":"/ Get the dimensions `(channels, width, height)`.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":142752,"byte_end":142803,"line_start":461,"line_end":461,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":142808,"byte_end":142811,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ The interface is optimized for use with `strides_cwh` instead. The channel extent will be","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":142816,"byte_end":142909,"line_start":463,"line_end":463,"column_start":5,"column_end":98}},{"value":"/ before width and height.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":142914,"byte_end":142942,"line_start":464,"line_end":464,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":591},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":143289,"byte_end":143295,"line_start":473,"line_end":473,"column_start":12,"column_end":18},"name":"bounds","qualname":"<FlatSamples<Buffer>>::bounds","value":"fn (&self) -> (u8, u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Tuple of bounds in the order of coordinate inputs.","sig":null,"attributes":[{"value":"/ Tuple of bounds in the order of coordinate inputs.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":143037,"byte_end":143091,"line_start":469,"line_end":469,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":143096,"byte_end":143099,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ This function should be used whenever working with image coordinates opposed to buffer","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":143104,"byte_end":143194,"line_start":471,"line_end":471,"column_start":5,"column_end":95}},{"value":"/ coordinates. The only difference compared to `extents` is the output type.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":143199,"byte_end":143277,"line_start":472,"line_end":472,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":592},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":143409,"byte_end":143415,"line_start":478,"line_end":478,"column_start":12,"column_end":18},"name":"as_ref","qualname":"<FlatSamples<Buffer>>::as_ref","value":"fn <T> (&self) -> FlatSamples<&[T]>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference based version.\n","sig":null,"attributes":[{"value":"/ Get a reference based version.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":143363,"byte_end":143397,"line_start":477,"line_end":477,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":594},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":143689,"byte_end":143695,"line_start":487,"line_end":487,"column_start":12,"column_end":18},"name":"as_mut","qualname":"<FlatSamples<Buffer>>::as_mut","value":"fn <T> (&mut self) -> FlatSamples<&mut [T]>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference based version.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference based version.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":143635,"byte_end":143677,"line_start":486,"line_end":486,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":596},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":143974,"byte_end":143980,"line_start":496,"line_end":496,"column_start":12,"column_end":18},"name":"to_vec","qualname":"<FlatSamples<Buffer>>::to_vec","value":"fn <T> (&self) -> FlatSamples<Vec<T>>","parent":null,"children":[],"decl_id":null,"docs":" Copy the data into an owned vector.\n","sig":null,"attributes":[{"value":"/ Copy the data into an owned vector.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":143923,"byte_end":143962,"line_start":495,"line_end":495,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":598},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":145253,"byte_end":145263,"line_start":527,"line_end":527,"column_start":12,"column_end":22},"name":"get_sample","qualname":"<FlatSamples<Buffer>>::get_sample","value":"fn <T> (&self, channel: u8, x: u32, y: u32) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to a single sample.","sig":null,"attributes":[{"value":"/ Get a reference to a single sample.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":144233,"byte_end":144272,"line_start":506,"line_end":506,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":144277,"byte_end":144280,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ This more restrictive than the method based on `std::ops::Index` but guarantees to properly","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":144285,"byte_end":144380,"line_start":508,"line_end":508,"column_start":5,"column_end":100}},{"value":"/ check all bounds and not panic as long as `Buffer::as_ref` does not do so.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":144385,"byte_end":144463,"line_start":509,"line_end":509,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":144468,"byte_end":144471,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":144476,"byte_end":144483,"line_start":511,"line_end":511,"column_start":5,"column_end":12}},{"value":"/ # use image::{RgbImage};","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":144488,"byte_end":144516,"line_start":512,"line_end":512,"column_start":5,"column_end":33}},{"value":"/ let flat = RgbImage::new(480, 640).into_flat_samples();","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":144521,"byte_end":144580,"line_start":513,"line_end":513,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":144585,"byte_end":144588,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ // Get the blue channel at (10, 10).","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":144593,"byte_end":144633,"line_start":515,"line_end":515,"column_start":5,"column_end":45}},{"value":"/ assert!(flat.get_sample(1, 10, 10).is_some());","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":144638,"byte_end":144688,"line_start":516,"line_end":516,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":144693,"byte_end":144696,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ // There is no alpha channel.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":144701,"byte_end":144734,"line_start":518,"line_end":518,"column_start":5,"column_end":38}},{"value":"/ assert!(flat.get_sample(3, 10, 10).is_none());","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":144739,"byte_end":144789,"line_start":519,"line_end":519,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":144794,"byte_end":144801,"line_start":520,"line_end":520,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":144806,"byte_end":144809,"line_start":521,"line_end":521,"column_start":5,"column_end":8}},{"value":"/ For cases where a special buffer does not provide `AsRef<[T]>`, consider encapsulating","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":144814,"byte_end":144904,"line_start":522,"line_end":522,"column_start":5,"column_end":95}},{"value":"/ bounds checks with `min_length` in a type similar to `View`. Then you may use","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":144909,"byte_end":144990,"line_start":523,"line_end":523,"column_start":5,"column_end":86}},{"value":"/ `in_bounds_index` as a small speedup over the index calculation of this method which relies","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":144995,"byte_end":145090,"line_start":524,"line_end":524,"column_start":5,"column_end":100}},{"value":"/ on `index_ignoring_bounds` since it can not have a-priori knowledge that the sample","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":145095,"byte_end":145182,"line_start":525,"line_end":525,"column_start":5,"column_end":92}},{"value":"/ coordinate is in fact backed by any memory buffer.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":145187,"byte_end":145241,"line_start":526,"line_end":526,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":601},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":146860,"byte_end":146874,"line_start":560,"line_end":560,"column_start":12,"column_end":26},"name":"get_mut_sample","qualname":"<FlatSamples<Buffer>>::get_mut_sample","value":"fn <T> (&mut self, channel: u8, x: u32, y: u32) -> Option<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to a single sample.","sig":null,"attributes":[{"value":"/ Get a mutable reference to a single sample.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":145450,"byte_end":145497,"line_start":534,"line_end":534,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":145502,"byte_end":145505,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ This more restrictive than the method based on `std::ops::IndexMut` but guarantees to","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":145510,"byte_end":145599,"line_start":536,"line_end":536,"column_start":5,"column_end":94}},{"value":"/ properly check all bounds and not panic as long as `Buffer::as_ref` does not do so.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":145604,"byte_end":145691,"line_start":537,"line_end":537,"column_start":5,"column_end":92}},{"value":"/ Contrary to conversion to `ViewMut`, this does not require that samples are packed since it","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":145696,"byte_end":145791,"line_start":538,"line_end":538,"column_start":5,"column_end":100}},{"value":"/ does not need to convert samples to a color representation.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":145796,"byte_end":145859,"line_start":539,"line_end":539,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":145864,"byte_end":145867,"line_start":540,"line_end":540,"column_start":5,"column_end":8}},{"value":"/ **WARNING**: Note that of course samples may alias, so that the mutable reference returned","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":145872,"byte_end":145966,"line_start":541,"line_end":541,"column_start":5,"column_end":99}},{"value":"/ here can in fact modify more than the coordinate in the argument.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":145971,"byte_end":146040,"line_start":542,"line_end":542,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":146045,"byte_end":146048,"line_start":543,"line_end":543,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":146053,"byte_end":146060,"line_start":544,"line_end":544,"column_start":5,"column_end":12}},{"value":"/ # use image::{RgbImage};","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":146065,"byte_end":146093,"line_start":545,"line_end":545,"column_start":5,"column_end":33}},{"value":"/ let mut flat = RgbImage::new(480, 640).into_flat_samples();","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":146098,"byte_end":146161,"line_start":546,"line_end":546,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":146166,"byte_end":146169,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ // Assign some new color to the blue channel at (10, 10).","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":146174,"byte_end":146235,"line_start":548,"line_end":548,"column_start":5,"column_end":66}},{"value":"/ *flat.get_mut_sample(1, 10, 10).unwrap() = 255;","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":146240,"byte_end":146291,"line_start":549,"line_end":549,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":146296,"byte_end":146299,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ // There is no alpha channel.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":146304,"byte_end":146337,"line_start":551,"line_end":551,"column_start":5,"column_end":38}},{"value":"/ assert!(flat.get_mut_sample(3, 10, 10).is_none());","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":146342,"byte_end":146396,"line_start":552,"line_end":552,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":146401,"byte_end":146408,"line_start":553,"line_end":553,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":146413,"byte_end":146416,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ For cases where a special buffer does not provide `AsRef<[T]>`, consider encapsulating","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":146421,"byte_end":146511,"line_start":555,"line_end":555,"column_start":5,"column_end":95}},{"value":"/ bounds checks with `min_length` in a type similar to `View`. Then you may use","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":146516,"byte_end":146597,"line_start":556,"line_end":556,"column_start":5,"column_end":86}},{"value":"/ `in_bounds_index` as a small speedup over the index calculation of this method which relies","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":146602,"byte_end":146697,"line_start":557,"line_end":557,"column_start":5,"column_end":100}},{"value":"/ on `index_ignoring_bounds` since it can not have a-priori knowledge that the sample","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":146702,"byte_end":146789,"line_start":558,"line_end":558,"column_start":5,"column_end":92}},{"value":"/ coordinate is in fact backed by any memory buffer.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":146794,"byte_end":146848,"line_start":559,"line_end":559,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":603},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":147538,"byte_end":147545,"line_start":575,"line_end":575,"column_start":12,"column_end":19},"name":"as_view","qualname":"<FlatSamples<Buffer>>::as_view","value":"fn <P> (&self) -> Result<View<&[P::Subpixel], P>, Error>","parent":null,"children":[],"decl_id":null,"docs":" View this buffer as an image over some type of pixel.","sig":null,"attributes":[{"value":"/ View this buffer as an image over some type of pixel.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":147126,"byte_end":147183,"line_start":569,"line_end":569,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":147188,"byte_end":147191,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/ This first ensures that all in-bounds coordinates refer to valid indices in the sample","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":147196,"byte_end":147286,"line_start":571,"line_end":571,"column_start":5,"column_end":95}},{"value":"/ buffer. It also checks that the specified pixel format expects the same number of channels","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":147291,"byte_end":147385,"line_start":572,"line_end":572,"column_start":5,"column_end":99}},{"value":"/ that are present in this buffer. Neither are larger nor a smaller number will be accepted.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":147390,"byte_end":147484,"line_start":573,"line_end":573,"column_start":5,"column_end":99}},{"value":"/ There is no automatic conversion.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":147489,"byte_end":147526,"line_start":574,"line_end":574,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":605},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":149122,"byte_end":149146,"line_start":612,"line_end":612,"column_start":12,"column_end":36},"name":"as_view_with_mut_samples","qualname":"<FlatSamples<Buffer>>::as_view_with_mut_samples","value":"fn <P> (&mut self) -> Result<View<&mut [P::Subpixel], P>, Error>","parent":null,"children":[],"decl_id":null,"docs":" View this buffer but keep mutability at a sample level.","sig":null,"attributes":[{"value":"/ View this buffer but keep mutability at a sample level.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":148157,"byte_end":148216,"line_start":597,"line_end":597,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":148221,"byte_end":148224,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/ This is similar to `as_view` but subtly different from `as_view_mut`. The resulting type","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":148229,"byte_end":148321,"line_start":599,"line_end":599,"column_start":5,"column_end":97}},{"value":"/ can be used as a `GenericImage` with the same prior invariants needed as for `as_view`.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":148326,"byte_end":148417,"line_start":600,"line_end":600,"column_start":5,"column_end":96}},{"value":"/ It can not be used as a mutable `GenericImage` but does not need channels to be packed in","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":148422,"byte_end":148515,"line_start":601,"line_end":601,"column_start":5,"column_end":98}},{"value":"/ their pixel representation.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":148520,"byte_end":148551,"line_start":602,"line_end":602,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":148556,"byte_end":148559,"line_start":603,"line_end":603,"column_start":5,"column_end":8}},{"value":"/ This first ensures that all in-bounds coordinates refer to valid indices in the sample","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":148564,"byte_end":148654,"line_start":604,"line_end":604,"column_start":5,"column_end":95}},{"value":"/ buffer. It also checks that the specified pixel format expects the same number of channels","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":148659,"byte_end":148753,"line_start":605,"line_end":605,"column_start":5,"column_end":99}},{"value":"/ that are present in this buffer. Neither are larger nor a smaller number will be accepted.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":148758,"byte_end":148852,"line_start":606,"line_end":606,"column_start":5,"column_end":99}},{"value":"/ There is no automatic conversion.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":148857,"byte_end":148894,"line_start":607,"line_end":607,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":148899,"byte_end":148902,"line_start":608,"line_end":608,"column_start":5,"column_end":8}},{"value":"/ **WARNING**: Note that of course samples may alias, so that the mutable reference returned","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":148907,"byte_end":149001,"line_start":609,"line_end":609,"column_start":5,"column_end":99}},{"value":"/ for one sample can in fact modify other samples as well. Sometimes exactly this is","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":149006,"byte_end":149092,"line_start":610,"line_end":610,"column_start":5,"column_end":91}},{"value":"/ intended.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":149097,"byte_end":149110,"line_start":611,"line_end":611,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":607},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":150509,"byte_end":150520,"line_start":645,"line_end":645,"column_start":12,"column_end":23},"name":"as_view_mut","qualname":"<FlatSamples<Buffer>>::as_view_mut","value":"fn <P> (&mut self) -> Result<ViewMut<&mut [P::Subpixel], P>, Error>","parent":null,"children":[],"decl_id":null,"docs":" Interpret this buffer as a mutable image.","sig":null,"attributes":[{"value":"/ Interpret this buffer as a mutable image.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":149766,"byte_end":149811,"line_start":634,"line_end":634,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":149816,"byte_end":149819,"line_start":635,"line_end":635,"column_start":5,"column_end":8}},{"value":"/ To succeed, the pixels in this buffer may not alias each other and the samples of each","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":149824,"byte_end":149914,"line_start":636,"line_end":636,"column_start":5,"column_end":95}},{"value":"/ pixel must be packed (i.e. `channel_stride` is `1`). The number of channels must be","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":149919,"byte_end":150006,"line_start":637,"line_end":637,"column_start":5,"column_end":92}},{"value":"/ consistent with the channel count expected by the pixel format.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":150011,"byte_end":150078,"line_start":638,"line_end":638,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":150083,"byte_end":150086,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ This is similar to an `ImageBuffer` except it is a temporary view that is not normalized as","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":150091,"byte_end":150186,"line_start":640,"line_end":640,"column_start":5,"column_end":100}},{"value":"/ strongly. To get an owning version, consider copying the data into an `ImageBuffer`. This","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":150191,"byte_end":150284,"line_start":641,"line_end":641,"column_start":5,"column_end":98}},{"value":"/ provides many more operations, is possibly faster (if not you may want to open an issue) is","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":150289,"byte_end":150384,"line_start":642,"line_end":642,"column_start":5,"column_end":100}},{"value":"/ generally polished. You can also try to convert this buffer inline, see","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":150389,"byte_end":150464,"line_start":643,"line_end":643,"column_start":5,"column_end":80}},{"value":"/ `ImageBuffer::from_raw`.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":150469,"byte_end":150497,"line_start":644,"line_end":644,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":609},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":151517,"byte_end":151525,"line_start":675,"line_end":675,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<FlatSamples<Buffer>>::as_slice","value":"fn <T> (&self) -> &[T]","parent":null,"children":[],"decl_id":null,"docs":" View the samples as a slice.","sig":null,"attributes":[{"value":"/ View the samples as a slice.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":151293,"byte_end":151325,"line_start":671,"line_end":671,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":151330,"byte_end":151333,"line_start":672,"line_end":672,"column_start":5,"column_end":8}},{"value":"/ The slice is not limited to the region of the image and not all sample indices are valid","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":151338,"byte_end":151430,"line_start":673,"line_end":673,"column_start":5,"column_end":97}},{"value":"/ indices into this buffer. See `image_mut_slice` as an alternative.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":151435,"byte_end":151505,"line_start":674,"line_end":674,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":611},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":151836,"byte_end":151848,"line_start":683,"line_end":683,"column_start":12,"column_end":24},"name":"as_mut_slice","qualname":"<FlatSamples<Buffer>>::as_mut_slice","value":"fn <T> (&mut self) -> &mut [T]","parent":null,"children":[],"decl_id":null,"docs":" View the samples as a slice.","sig":null,"attributes":[{"value":"/ View the samples as a slice.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":151612,"byte_end":151644,"line_start":679,"line_end":679,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":151649,"byte_end":151652,"line_start":680,"line_end":680,"column_start":5,"column_end":8}},{"value":"/ The slice is not limited to the region of the image and not all sample indices are valid","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":151657,"byte_end":151749,"line_start":681,"line_end":681,"column_start":5,"column_end":97}},{"value":"/ indices into this buffer. See `image_mut_slice` as an alternative.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":151754,"byte_end":151824,"line_start":682,"line_end":682,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":613},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":152279,"byte_end":152290,"line_start":692,"line_end":692,"column_start":12,"column_end":23},"name":"image_slice","qualname":"<FlatSamples<Buffer>>::image_slice","value":"fn <T> (&self) -> Option<&[T]>","parent":null,"children":[],"decl_id":null,"docs":" Return the portion of the buffer that holds sample values.","sig":null,"attributes":[{"value":"/ Return the portion of the buffer that holds sample values.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":151943,"byte_end":152005,"line_start":687,"line_end":687,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":152010,"byte_end":152013,"line_start":688,"line_end":688,"column_start":5,"column_end":8}},{"value":"/ This may fail when the coordinates in this image are either out-of-bounds of the underlying","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":152018,"byte_end":152113,"line_start":689,"line_end":689,"column_start":5,"column_end":100}},{"value":"/ buffer or can not be represented. Note that the slice may have holes that do not correspond","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":152118,"byte_end":152213,"line_start":690,"line_end":690,"column_start":5,"column_end":100}},{"value":"/ to any sample in the image represented by it.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":152218,"byte_end":152267,"line_start":691,"line_end":691,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":615},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":152707,"byte_end":152722,"line_start":707,"line_end":707,"column_start":12,"column_end":27},"name":"image_mut_slice","qualname":"<FlatSamples<Buffer>>::image_mut_slice","value":"fn <T> (&mut self) -> Option<&mut [T]>","parent":null,"children":[],"decl_id":null,"docs":" Mutable portion of the buffer that holds sample values.\n","sig":null,"attributes":[{"value":"/ Mutable portion of the buffer that holds sample values.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":152636,"byte_end":152695,"line_start":706,"line_end":706,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":617},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":153376,"byte_end":153391,"line_start":726,"line_end":726,"column_start":12,"column_end":27},"name":"try_into_buffer","qualname":"<FlatSamples<Buffer>>::try_into_buffer","value":"fn <P> (self) -> Result<ImageBuffer<P, Buffer>, (Error, Self)>","parent":null,"children":[],"decl_id":null,"docs":" Move the data into an image buffer.","sig":null,"attributes":[{"value":"/ Move the data into an image buffer.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":153080,"byte_end":153119,"line_start":721,"line_end":721,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":153124,"byte_end":153127,"line_start":722,"line_end":722,"column_start":5,"column_end":8}},{"value":"/ This does **not** convert the sample layout. The buffer needs to be in packed row-major form","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":153132,"byte_end":153228,"line_start":723,"line_end":723,"column_start":5,"column_end":101}},{"value":"/ before calling this function. In case of an error, returns the buffer again so that it does","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":153233,"byte_end":153328,"line_start":724,"line_end":724,"column_start":5,"column_end":100}},{"value":"/ not release any allocation.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":153333,"byte_end":153364,"line_start":725,"line_end":725,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":620},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":156227,"byte_end":156237,"line_start":800,"line_end":800,"column_start":12,"column_end":22},"name":"min_length","qualname":"<FlatSamples<Buffer>>::min_length","value":"fn (&self) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Get the minimum length of a buffer such that all in-bounds samples have valid indices.","sig":null,"attributes":[{"value":"/ Get the minimum length of a buffer such that all in-bounds samples have valid indices.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":154162,"byte_end":154252,"line_start":749,"line_end":749,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":154257,"byte_end":154260,"line_start":750,"line_end":750,"column_start":5,"column_end":8}},{"value":"/ This method will allow zero strides, allowing compact representations of monochrome images.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":154265,"byte_end":154360,"line_start":751,"line_end":751,"column_start":5,"column_end":100}},{"value":"/ To check that no aliasing occurs, try `check_alias_invariants`. For compact images (no","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":154365,"byte_end":154455,"line_start":752,"line_end":752,"column_start":5,"column_end":95}},{"value":"/ aliasing and no unindexed samples) this is `width*height*channels`. But for both of the","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":154460,"byte_end":154551,"line_start":753,"line_end":753,"column_start":5,"column_end":96}},{"value":"/ other cases, the reasoning is slightly more involved.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":154556,"byte_end":154613,"line_start":754,"line_end":754,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":154618,"byte_end":154621,"line_start":755,"line_end":755,"column_start":5,"column_end":8}},{"value":"/ # Explanation","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":154626,"byte_end":154643,"line_start":756,"line_end":756,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":154648,"byte_end":154651,"line_start":757,"line_end":757,"column_start":5,"column_end":8}},{"value":"/ Note that there is a difference between `min_length` and the index of the sample","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":154656,"byte_end":154740,"line_start":758,"line_end":758,"column_start":5,"column_end":89}},{"value":"/ 'one-past-the-end`. This is due to strides that may be larger than the dimension below.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":154745,"byte_end":154836,"line_start":759,"line_end":759,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":154841,"byte_end":154844,"line_start":760,"line_end":760,"column_start":5,"column_end":8}},{"value":"/ ## Example with holes","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":154849,"byte_end":154874,"line_start":761,"line_end":761,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":154879,"byte_end":154882,"line_start":762,"line_end":762,"column_start":5,"column_end":8}},{"value":"/ Let's look at an example of a grayscale image with","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":154887,"byte_end":154941,"line_start":763,"line_end":763,"column_start":5,"column_end":59}},{"value":"/ * `width_stride = 1`","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":154946,"byte_end":154970,"line_start":764,"line_end":764,"column_start":5,"column_end":29}},{"value":"/ * `width = 2`","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":154975,"byte_end":154992,"line_start":765,"line_end":765,"column_start":5,"column_end":22}},{"value":"/ * `height_stride = 3`","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":154997,"byte_end":155022,"line_start":766,"line_end":766,"column_start":5,"column_end":30}},{"value":"/ * `height = 2`","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":155027,"byte_end":155045,"line_start":767,"line_end":767,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":155050,"byte_end":155053,"line_start":768,"line_end":768,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":155058,"byte_end":155069,"line_start":769,"line_end":769,"column_start":5,"column_end":16}},{"value":"/ | x x   | x x m | $","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":155074,"byte_end":155097,"line_start":770,"line_end":770,"column_start":5,"column_end":28}},{"value":"/  min_length m ^","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":155102,"byte_end":155121,"line_start":771,"line_end":771,"column_start":5,"column_end":24}},{"value":"/                   ^ one-past-the-end $","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":155126,"byte_end":155168,"line_start":772,"line_end":772,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":155173,"byte_end":155180,"line_start":773,"line_end":773,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":155185,"byte_end":155188,"line_start":774,"line_end":774,"column_start":5,"column_end":8}},{"value":"/ The difference is also extreme for empty images with large strides. The one-past-the-end","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":155193,"byte_end":155285,"line_start":775,"line_end":775,"column_start":5,"column_end":97}},{"value":"/ sample index is still as large as the largest of these strides while `min_length = 0`.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":155290,"byte_end":155380,"line_start":776,"line_end":776,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":155385,"byte_end":155388,"line_start":777,"line_end":777,"column_start":5,"column_end":8}},{"value":"/ ## Example with aliasing","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":155393,"byte_end":155421,"line_start":778,"line_end":778,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":155426,"byte_end":155429,"line_start":779,"line_end":779,"column_start":5,"column_end":8}},{"value":"/ The concept gets even more important when you allow samples to alias each other. Here we","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":155434,"byte_end":155526,"line_start":780,"line_end":780,"column_start":5,"column_end":97}},{"value":"/ have the buffer of a small grayscale image where this is the case, this time we will first","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":155531,"byte_end":155625,"line_start":781,"line_end":781,"column_start":5,"column_end":99}},{"value":"/ show the buffer and then the individual rows below.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":155630,"byte_end":155685,"line_start":782,"line_end":782,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":155690,"byte_end":155693,"line_start":783,"line_end":783,"column_start":5,"column_end":8}},{"value":"/ * `width_stride = 1`","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":155698,"byte_end":155722,"line_start":784,"line_end":784,"column_start":5,"column_end":29}},{"value":"/ * `width = 3`","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":155727,"byte_end":155744,"line_start":785,"line_end":785,"column_start":5,"column_end":22}},{"value":"/ * `height_stride = 2`","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":155749,"byte_end":155774,"line_start":786,"line_end":786,"column_start":5,"column_end":30}},{"value":"/ * `height = 2`","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":155779,"byte_end":155797,"line_start":787,"line_end":787,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":155802,"byte_end":155805,"line_start":788,"line_end":788,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":155810,"byte_end":155821,"line_start":789,"line_end":789,"column_start":5,"column_end":16}},{"value":"/  1 2 3 4 5 m","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":155826,"byte_end":155842,"line_start":790,"line_end":790,"column_start":5,"column_end":21}},{"value":"/ |1 2 3| row one","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":155847,"byte_end":155866,"line_start":791,"line_end":791,"column_start":5,"column_end":24}},{"value":"/     |3 4 5| row two","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":155871,"byte_end":155894,"line_start":792,"line_end":792,"column_start":5,"column_end":28}},{"value":"/            ^ m min_length","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":155899,"byte_end":155928,"line_start":793,"line_end":793,"column_start":5,"column_end":34}},{"value":"/          ^ ??? one-past-the-end","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":155933,"byte_end":155968,"line_start":794,"line_end":794,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":155973,"byte_end":155980,"line_start":795,"line_end":795,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":155985,"byte_end":155988,"line_start":796,"line_end":796,"column_start":5,"column_end":8}},{"value":"/ This time 'one-past-the-end' is not even simply the largest stride times the extent of its","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":155993,"byte_end":156087,"line_start":797,"line_end":797,"column_start":5,"column_end":99}},{"value":"/ dimension. That still points inside the image because `height*height_stride = 4` but also","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":156092,"byte_end":156185,"line_start":798,"line_end":798,"column_start":5,"column_end":98}},{"value":"/ `index_of(1, 2) = 4`.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":156190,"byte_end":156215,"line_start":799,"line_end":799,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":621},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":156374,"byte_end":156378,"line_start":805,"line_end":805,"column_start":12,"column_end":16},"name":"fits","qualname":"<FlatSamples<Buffer>>::fits","value":"fn (&self, len: usize) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if a buffer of length `len` is large enough.\n","sig":null,"attributes":[{"value":"/ Check if a buffer of length `len` is large enough.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":156308,"byte_end":156362,"line_start":804,"line_end":804,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":622},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":156799,"byte_end":156818,"line_start":814,"line_end":814,"column_start":12,"column_end":31},"name":"has_aliased_samples","qualname":"<FlatSamples<Buffer>>::has_aliased_samples","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" If there are any samples aliasing each other.","sig":null,"attributes":[{"value":"/ If there are any samples aliasing each other.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":156449,"byte_end":156498,"line_start":809,"line_end":809,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":156503,"byte_end":156506,"line_start":810,"line_end":810,"column_start":5,"column_end":8}},{"value":"/ If this is not the case, it would always be safe to allow mutable access to two different","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":156511,"byte_end":156604,"line_start":811,"line_end":811,"column_start":5,"column_end":98}},{"value":"/ samples at the same time. Otherwise, this operation would need additional checks. When one","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":156609,"byte_end":156703,"line_start":812,"line_end":812,"column_start":5,"column_end":99}},{"value":"/ dimension overflows `usize` with its stride we also consider this aliasing.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":156708,"byte_end":156787,"line_start":813,"line_end":813,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":623},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":157399,"byte_end":157408,"line_start":825,"line_end":825,"column_start":12,"column_end":21},"name":"is_normal","qualname":"<FlatSamples<Buffer>>::is_normal","value":"fn (&self, form: NormalForm) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if a buffer fulfills the requirements of a normal form.","sig":null,"attributes":[{"value":"/ Check if a buffer fulfills the requirements of a normal form.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":156889,"byte_end":156954,"line_start":818,"line_end":818,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":156959,"byte_end":156962,"line_start":819,"line_end":819,"column_start":5,"column_end":8}},{"value":"/ Certain conversions have preconditions on the structure of the sample buffer that are not","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":156967,"byte_end":157060,"line_start":820,"line_end":820,"column_start":5,"column_end":98}},{"value":"/ captured (by design) by the type system. These are then checked before the conversion. Such","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":157065,"byte_end":157160,"line_start":821,"line_end":821,"column_start":5,"column_end":100}},{"value":"/ checks can all be done in constant time and will not inspect the buffer content. You can","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":157165,"byte_end":157257,"line_start":822,"line_end":822,"column_start":5,"column_end":97}},{"value":"/ perform these checks yourself when the conversion is not required at this moment but maybe","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":157262,"byte_end":157356,"line_start":823,"line_end":823,"column_start":5,"column_end":99}},{"value":"/ still performed later.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":157361,"byte_end":157387,"line_start":824,"line_end":824,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":624},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":157833,"byte_end":157842,"line_start":834,"line_end":834,"column_start":12,"column_end":21},"name":"in_bounds","qualname":"<FlatSamples<Buffer>>::in_bounds","value":"fn (&self, channel: u8, x: u32, y: u32) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check that the pixel and the channel index are in bounds.","sig":null,"attributes":[{"value":"/ Check that the pixel and the channel index are in bounds.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":157491,"byte_end":157552,"line_start":829,"line_end":829,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":157557,"byte_end":157560,"line_start":830,"line_end":830,"column_start":5,"column_end":8}},{"value":"/ An in-bound coordinate does not yet guarantee that the corresponding calculation of a","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":157565,"byte_end":157654,"line_start":831,"line_end":831,"column_start":5,"column_end":94}},{"value":"/ buffer index does not overflow. However, if such a buffer large enough to hold all samples","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":157659,"byte_end":157753,"line_start":832,"line_end":832,"column_start":5,"column_end":99}},{"value":"/ actually exists in memory, this porperty of course follows.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":157758,"byte_end":157821,"line_start":833,"line_end":833,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":625},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":158092,"byte_end":158097,"line_start":841,"line_end":841,"column_start":12,"column_end":17},"name":"index","qualname":"<FlatSamples<Buffer>>::index","value":"fn (&self, channel: u8, x: u32, y: u32) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Resolve the index of a particular sample.","sig":null,"attributes":[{"value":"/ Resolve the index of a particular sample.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":157945,"byte_end":157990,"line_start":838,"line_end":838,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":157995,"byte_end":157998,"line_start":839,"line_end":839,"column_start":5,"column_end":8}},{"value":"/ `None` if the index is outside the bounds or does not fit into a `usize`.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":158003,"byte_end":158080,"line_start":840,"line_end":840,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":626},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":158576,"byte_end":158597,"line_start":850,"line_end":850,"column_start":12,"column_end":33},"name":"index_ignoring_bounds","qualname":"<FlatSamples<Buffer>>::index_ignoring_bounds","value":"fn (&self, channel: usize, x: usize, y: usize) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Get the theoretical position of sample (x, y, channel).","sig":null,"attributes":[{"value":"/ Get the theoretical position of sample (x, y, channel).","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":158205,"byte_end":158264,"line_start":845,"line_end":845,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":158269,"byte_end":158272,"line_start":846,"line_end":846,"column_start":5,"column_end":8}},{"value":"/ The 'check' is for overflow during index calculation, not that it is contained in the","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":158277,"byte_end":158366,"line_start":847,"line_end":847,"column_start":5,"column_end":94}},{"value":"/ image. Two samples may return the same index, even when one of them is out of bounds. This","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":158371,"byte_end":158465,"line_start":848,"line_end":848,"column_start":5,"column_end":99}},{"value":"/ happens when all strides are `0`, i.e. the image is an arbitrarily large monochrome image.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":158470,"byte_end":158564,"line_start":849,"line_end":849,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":627},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":159029,"byte_end":159044,"line_start":859,"line_end":859,"column_start":12,"column_end":27},"name":"in_bounds_index","qualname":"<FlatSamples<Buffer>>::in_bounds_index","value":"fn (&self, channel: u8, x: u32, y: u32) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get an index provided it is inbouds.","sig":null,"attributes":[{"value":"/ Get an index provided it is inbouds.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":158728,"byte_end":158768,"line_start":854,"line_end":854,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":158773,"byte_end":158776,"line_start":855,"line_end":855,"column_start":5,"column_end":8}},{"value":"/ Assumes that the image is backed by some sufficiently large buffer. Then computation can","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":158781,"byte_end":158873,"line_start":856,"line_end":856,"column_start":5,"column_end":97}},{"value":"/ not overflow as we could represent the maximum coordinate. Since overflow is defined either","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":158878,"byte_end":158973,"line_start":857,"line_end":857,"column_start":5,"column_end":100}},{"value":"/ way, this method can not be unsafe.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":158978,"byte_end":159017,"line_start":858,"line_end":858,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":628},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":159479,"byte_end":159488,"line_start":868,"line_end":868,"column_start":12,"column_end":21},"name":"shrink_to","qualname":"<FlatSamples<Buffer>>::shrink_to","value":"fn (&mut self, channels: u8, width: u32, height: u32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Shrink the image to the minimum of current and given extents.","sig":null,"attributes":[{"value":"/ Shrink the image to the minimum of current and given extents.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":159154,"byte_end":159219,"line_start":863,"line_end":863,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":159224,"byte_end":159227,"line_start":864,"line_end":864,"column_start":5,"column_end":8}},{"value":"/ This does not modify the strides, so that the resulting sample buffer may have holes","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":159232,"byte_end":159320,"line_start":865,"line_end":865,"column_start":5,"column_end":93}},{"value":"/ created by the shrinking operation. Shrinking could also lead to an non-aliasing image when","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":159325,"byte_end":159420,"line_start":866,"line_end":866,"column_start":5,"column_end":100}},{"value":"/ samples had aliased each other before.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":159425,"byte_end":159467,"line_start":867,"line_end":867,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":632},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":160374,"byte_end":160388,"line_start":894,"line_end":894,"column_start":12,"column_end":26},"name":"with_monocolor","qualname":"<FlatSamples<&'buf [Subpixel]>>::with_monocolor","value":"fn <P> (pixel: &'buf P, width: u32, height: u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a monocolor image from a single pixel.","sig":null,"attributes":[{"value":"/ Create a monocolor image from a single pixel.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":159662,"byte_end":159711,"line_start":874,"line_end":874,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":159716,"byte_end":159719,"line_start":875,"line_end":875,"column_start":5,"column_end":8}},{"value":"/ This can be used as a very cheap source of a `GenericImageView` with an arbitrary number of","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":159724,"byte_end":159819,"line_start":876,"line_end":876,"column_start":5,"column_end":100}},{"value":"/ pixels of a single color, without any dynamic allocation.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":159824,"byte_end":159885,"line_start":877,"line_end":877,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":159890,"byte_end":159893,"line_start":878,"line_end":878,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":159898,"byte_end":159913,"line_start":879,"line_end":879,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":159918,"byte_end":159921,"line_start":880,"line_end":880,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":159926,"byte_end":159933,"line_start":881,"line_end":881,"column_start":5,"column_end":12}},{"value":"/ # fn paint_something<T>(_: T) {}","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":159938,"byte_end":159974,"line_start":882,"line_end":882,"column_start":5,"column_end":41}},{"value":"/ use image::{flat::FlatSamples, GenericImage, RgbImage, Rgb};","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":159979,"byte_end":160043,"line_start":883,"line_end":883,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":160048,"byte_end":160051,"line_start":884,"line_end":884,"column_start":5,"column_end":8}},{"value":"/ let background = Rgb([20, 20, 20]);","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":160056,"byte_end":160095,"line_start":885,"line_end":885,"column_start":5,"column_end":44}},{"value":"/ let bg = FlatSamples::with_monocolor(&background, 200, 200);;","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":160100,"byte_end":160165,"line_start":886,"line_end":886,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":160170,"byte_end":160173,"line_start":887,"line_end":887,"column_start":5,"column_end":8}},{"value":"/ let mut image = RgbImage::new(200, 200);","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":160178,"byte_end":160222,"line_start":888,"line_end":888,"column_start":5,"column_end":49}},{"value":"/ paint_something(&mut image);","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":160227,"byte_end":160259,"line_start":889,"line_end":889,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":160264,"byte_end":160267,"line_start":890,"line_end":890,"column_start":5,"column_end":8}},{"value":"/ // Reset the canvas","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":160272,"byte_end":160295,"line_start":891,"line_end":891,"column_start":5,"column_end":28}},{"value":"/ image.copy_from(&bg.as_view().unwrap(), 0, 0);","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":160300,"byte_end":160350,"line_start":892,"line_end":892,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":160355,"byte_end":160362,"line_start":893,"line_end":893,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":4099},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":161608,"byte_end":161612,"line_start":929,"line_end":929,"column_start":12,"column_end":16},"name":"View","qualname":"::flat::View","value":"View {  }","parent":null,"children":[{"krate":0,"index":4102},{"krate":0,"index":4103}],"decl_id":null,"docs":" A flat buffer that can be used as an image view.","sig":null,"attributes":[{"value":"/ A flat buffer that can be used as an image view.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":160906,"byte_end":160958,"line_start":914,"line_end":914,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":160959,"byte_end":160962,"line_start":915,"line_end":915,"column_start":1,"column_end":4}},{"value":"/ This is a nearly trivial wrapper around a buffer but at least sanitizes by checking the buffer","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":160963,"byte_end":161061,"line_start":916,"line_end":916,"column_start":1,"column_end":99}},{"value":"/ length first and constraining the pixel type.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":161062,"byte_end":161111,"line_start":917,"line_end":917,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":161112,"byte_end":161115,"line_start":918,"line_end":918,"column_start":1,"column_end":4}},{"value":"/ Note that this does not eliminate panics as the `AsRef<[T]>` implementation of `Buffer` may be","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":161116,"byte_end":161214,"line_start":919,"line_end":919,"column_start":1,"column_end":99}},{"value":"/ unreliable, i.e. return different buffers at different times. This of course is a non-issue for","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":161215,"byte_end":161314,"line_start":920,"line_end":920,"column_start":1,"column_end":100}},{"value":"/ all common collections where the bounds check once must be enough.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":161315,"byte_end":161385,"line_start":921,"line_end":921,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":161386,"byte_end":161389,"line_start":922,"line_end":922,"column_start":1,"column_end":4}},{"value":"/ # Inner invariants","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":161390,"byte_end":161412,"line_start":923,"line_end":923,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":161413,"byte_end":161416,"line_start":924,"line_end":924,"column_start":1,"column_end":4}},{"value":"/ * For all indices inside bounds, the corresponding index is valid in the buffer","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":161417,"byte_end":161500,"line_start":925,"line_end":925,"column_start":1,"column_end":84}},{"value":"/ * `P::channel_count()` agrees with `self.inner.layout.channels`","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":161501,"byte_end":161568,"line_start":926,"line_end":926,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":161569,"byte_end":161572,"line_start":927,"line_end":927,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":4112},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":162458,"byte_end":162465,"line_start":952,"line_end":952,"column_start":12,"column_end":19},"name":"ViewMut","qualname":"::flat::ViewMut","value":"ViewMut {  }","parent":null,"children":[{"krate":0,"index":4115},{"krate":0,"index":4116}],"decl_id":null,"docs":" A mutable owning version of a flat buffer.","sig":null,"attributes":[{"value":"/ A mutable owning version of a flat buffer.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":161736,"byte_end":161782,"line_start":937,"line_end":937,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":161783,"byte_end":161786,"line_start":938,"line_end":938,"column_start":1,"column_end":4}},{"value":"/ While this wraps a buffer similar to `ImageBuffer`, this is mostly intended as a utility. The","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":161787,"byte_end":161884,"line_start":939,"line_end":939,"column_start":1,"column_end":98}},{"value":"/ library endorsed normalized representation is still `ImageBuffer`. Also, the implementation of","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":161885,"byte_end":161983,"line_start":940,"line_end":940,"column_start":1,"column_end":99}},{"value":"/ `AsMut<[P::Subpixel]>` must always yield the same buffer. Therefore there is no public way to","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":161984,"byte_end":162081,"line_start":941,"line_end":941,"column_start":1,"column_end":98}},{"value":"/ construct this with an owning buffer.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":162082,"byte_end":162123,"line_start":942,"line_end":942,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":162124,"byte_end":162127,"line_start":943,"line_end":943,"column_start":1,"column_end":4}},{"value":"/ # Inner invariants","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":162128,"byte_end":162150,"line_start":944,"line_end":944,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":162151,"byte_end":162154,"line_start":945,"line_end":945,"column_start":1,"column_end":4}},{"value":"/ * For all indices inside bounds, the corresponding index is valid in the buffer","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":162155,"byte_end":162238,"line_start":946,"line_end":946,"column_start":1,"column_end":84}},{"value":"/ * There is no aliasing of samples","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":162239,"byte_end":162276,"line_start":947,"line_end":947,"column_start":1,"column_end":38}},{"value":"/ * The samples are packed, i.e. `self.inner.layout.sample_stride == 1`","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":162277,"byte_end":162350,"line_start":948,"line_end":948,"column_start":1,"column_end":74}},{"value":"/ * `P::channel_count()` agrees with `self.inner.layout.channels`","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":162351,"byte_end":162418,"line_start":949,"line_end":949,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":162419,"byte_end":162422,"line_start":950,"line_end":950,"column_start":1,"column_end":4}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4126},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":163173,"byte_end":163181,"line_start":971,"line_end":971,"column_start":5,"column_end":13},"name":"TooLarge","qualname":"::flat::Error::TooLarge","value":"Error::TooLarge","parent":{"krate":0,"index":4125},"children":[],"decl_id":null,"docs":" The represented image was too large.","sig":null,"attributes":[{"value":"/ The represented image was too large.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":163050,"byte_end":163090,"line_start":968,"line_end":968,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":163095,"byte_end":163098,"line_start":969,"line_end":969,"column_start":5,"column_end":8}},{"value":"/ The optional value denotes a possibly accepted maximal bound.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":163103,"byte_end":163168,"line_start":970,"line_end":970,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4128},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":163338,"byte_end":163356,"line_start":976,"line_end":976,"column_start":5,"column_end":23},"name":"NormalFormRequired","qualname":"::flat::Error::NormalFormRequired","value":"Error::NormalFormRequired(NormalForm)","parent":{"krate":0,"index":4125},"children":[],"decl_id":null,"docs":" The represented image can not use this representation.","sig":null,"attributes":[{"value":"/ The represented image can not use this representation.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":163188,"byte_end":163246,"line_start":973,"line_end":973,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":163251,"byte_end":163254,"line_start":974,"line_end":974,"column_start":5,"column_end":8}},{"value":"/ Has an additional value of the normalized form that would be accepted.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":163259,"byte_end":163333,"line_start":975,"line_end":975,"column_start":5,"column_end":79}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4131},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":163965,"byte_end":163975,"line_start":987,"line_end":987,"column_start":5,"column_end":15},"name":"WrongColor","qualname":"::flat::Error::WrongColor","value":"Error::WrongColor(ColorType)","parent":{"krate":0,"index":4125},"children":[],"decl_id":null,"docs":" The color format did not match the channel count.","sig":null,"attributes":[{"value":"/ The color format did not match the channel count.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":163375,"byte_end":163428,"line_start":978,"line_end":978,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":163433,"byte_end":163436,"line_start":979,"line_end":979,"column_start":5,"column_end":8}},{"value":"/ In some cases you might be able to fix this by lowering the reported pixel count of the","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":163441,"byte_end":163532,"line_start":980,"line_end":980,"column_start":5,"column_end":96}},{"value":"/ buffer without touching the strides.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":163537,"byte_end":163577,"line_start":981,"line_end":981,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":163582,"byte_end":163585,"line_start":982,"line_end":982,"column_start":5,"column_end":8}},{"value":"/ In very special circumstances you *may* do the opposite. This is **VERY** dangerous but not","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":163590,"byte_end":163685,"line_start":983,"line_end":983,"column_start":5,"column_end":100}},{"value":"/ directly memory unsafe although that will likely alias pixels. One scenario is when you","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":163690,"byte_end":163781,"line_start":984,"line_end":984,"column_start":5,"column_end":96}},{"value":"/ want to construct an `Rgba` image but have only 3 bytes per pixel and for some reason don't","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":163786,"byte_end":163881,"line_start":985,"line_end":985,"column_start":5,"column_end":100}},{"value":"/ care about the value of the alpha channel even though you need `Rgba`.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":163886,"byte_end":163960,"line_start":986,"line_end":986,"column_start":5,"column_end":79}}]},{"kind":"Enum","id":{"krate":0,"index":4125},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":163038,"byte_end":163043,"line_start":967,"line_end":967,"column_start":10,"column_end":15},"name":"Error","qualname":"::flat::Error","value":"Error::{TooLarge, NormalFormRequired, WrongColor}","parent":null,"children":[{"krate":0,"index":4126},{"krate":0,"index":4128},{"krate":0,"index":4131}],"decl_id":null,"docs":" Denotes invalid flat sample buffers when trying to convert to stricter types.","sig":null,"attributes":[{"value":"/ Denotes invalid flat sample buffers when trying to convert to stricter types.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":162589,"byte_end":162670,"line_start":960,"line_end":960,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":162671,"byte_end":162674,"line_start":961,"line_end":961,"column_start":1,"column_end":4}},{"value":"/ The biggest use case being `ImageBuffer` which expects closely packed","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":162675,"byte_end":162748,"line_start":962,"line_end":962,"column_start":1,"column_end":74}},{"value":"/ samples in a row major matrix representation. But this error type may be","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":162749,"byte_end":162825,"line_start":963,"line_end":963,"column_start":1,"column_end":77}},{"value":"/ resused for other import functions. A more versatile user may also try to","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":162826,"byte_end":162903,"line_start":964,"line_end":964,"column_start":1,"column_end":78}},{"value":"/ correct the underlying representation depending on the error variant.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":162904,"byte_end":162977,"line_start":965,"line_end":965,"column_start":1,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4150},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":164474,"byte_end":164483,"line_start":1000,"line_end":1000,"column_start":5,"column_end":14},"name":"Unaliased","qualname":"::flat::NormalForm::Unaliased","value":"NormalForm::Unaliased","parent":{"krate":0,"index":4149},"children":[],"decl_id":null,"docs":" No pixel aliases another.","sig":null,"attributes":[{"value":"/ No pixel aliases another.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":164251,"byte_end":164280,"line_start":996,"line_end":996,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":164285,"byte_end":164288,"line_start":997,"line_end":997,"column_start":5,"column_end":8}},{"value":"/ Unaliased also guarantees that all index calculations in the image bounds using","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":164293,"byte_end":164376,"line_start":998,"line_end":998,"column_start":5,"column_end":88}},{"value":"/ `dim_index*dim_stride` (such as `x*width_stride + y*height_stride`) do not overflow.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":164381,"byte_end":164469,"line_start":999,"line_end":999,"column_start":5,"column_end":93}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4152},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":164713,"byte_end":164724,"line_start":1006,"line_end":1006,"column_start":5,"column_end":16},"name":"PixelPacked","qualname":"::flat::NormalForm::PixelPacked","value":"NormalForm::PixelPacked","parent":{"krate":0,"index":4149},"children":[],"decl_id":null,"docs":" At least pixels are packed.","sig":null,"attributes":[{"value":"/ At least pixels are packed.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":164490,"byte_end":164521,"line_start":1002,"line_end":1002,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":164526,"byte_end":164529,"line_start":1003,"line_end":1003,"column_start":5,"column_end":8}},{"value":"/ Images of these types can wrap `[T]`-slices into the standard color types. This is a","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":164534,"byte_end":164622,"line_start":1004,"line_end":1004,"column_start":5,"column_end":93}},{"value":"/ precondition for `GenericImage` which requires by-reference access to pixels.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":164627,"byte_end":164708,"line_start":1005,"line_end":1005,"column_start":5,"column_end":86}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4154},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":165008,"byte_end":165019,"line_start":1013,"line_end":1013,"column_start":5,"column_end":16},"name":"ImagePacked","qualname":"::flat::NormalForm::ImagePacked","value":"NormalForm::ImagePacked","parent":{"krate":0,"index":4149},"children":[],"decl_id":null,"docs":" All samples are packed.","sig":null,"attributes":[{"value":"/ All samples are packed.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":164731,"byte_end":164758,"line_start":1008,"line_end":1008,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":164763,"byte_end":164766,"line_start":1009,"line_end":1009,"column_start":5,"column_end":8}},{"value":"/ This is orthogonal to `PixelPacked`. It requires that there are no holes in the image but","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":164771,"byte_end":164864,"line_start":1010,"line_end":1010,"column_start":5,"column_end":98}},{"value":"/ it is not necessary that the pixel samples themselves are adjacent. An example of this","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":164869,"byte_end":164959,"line_start":1011,"line_end":1011,"column_start":5,"column_end":95}},{"value":"/ behaviour is a planar image layout.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":164964,"byte_end":165003,"line_start":1012,"line_end":1012,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4156},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":165229,"byte_end":165243,"line_start":1019,"line_end":1019,"column_start":5,"column_end":19},"name":"RowMajorPacked","qualname":"::flat::NormalForm::RowMajorPacked","value":"NormalForm::RowMajorPacked","parent":{"krate":0,"index":4149},"children":[],"decl_id":null,"docs":" The samples are in row-major form and all samples are packed.","sig":null,"attributes":[{"value":"/ The samples are in row-major form and all samples are packed.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":165026,"byte_end":165091,"line_start":1015,"line_end":1015,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":165096,"byte_end":165099,"line_start":1016,"line_end":1016,"column_start":5,"column_end":8}},{"value":"/ In addition to `PixelPacked` and `ImagePacked` this also asserts that the pixel matrix is","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":165104,"byte_end":165197,"line_start":1017,"line_end":1017,"column_start":5,"column_end":98}},{"value":"/ in row-major form.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":165202,"byte_end":165224,"line_start":1018,"line_end":1018,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4158},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":165459,"byte_end":165476,"line_start":1025,"line_end":1025,"column_start":5,"column_end":22},"name":"ColumnMajorPacked","qualname":"::flat::NormalForm::ColumnMajorPacked","value":"NormalForm::ColumnMajorPacked","parent":{"krate":0,"index":4149},"children":[],"decl_id":null,"docs":" The samples are in column-major form and all samples are packed.","sig":null,"attributes":[{"value":"/ The samples are in column-major form and all samples are packed.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":165250,"byte_end":165318,"line_start":1021,"line_end":1021,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":165323,"byte_end":165326,"line_start":1022,"line_end":1022,"column_start":5,"column_end":8}},{"value":"/ In addition to `PixelPacked` and `ImagePacked` this also asserts that the pixel matrix is","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":165331,"byte_end":165424,"line_start":1023,"line_end":1023,"column_start":5,"column_end":98}},{"value":"/ in column-major form.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":165429,"byte_end":165454,"line_start":1024,"line_end":1024,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":4149},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":164234,"byte_end":164244,"line_start":995,"line_end":995,"column_start":10,"column_end":20},"name":"NormalForm","qualname":"::flat::NormalForm","value":"NormalForm::{Unaliased, PixelPacked, ImagePacked, RowMajorPacked, ColumnMajorPacked}","parent":null,"children":[{"krate":0,"index":4150},{"krate":0,"index":4152},{"krate":0,"index":4154},{"krate":0,"index":4156},{"krate":0,"index":4158}],"decl_id":null,"docs":" Different normal forms of buffers.","sig":null,"attributes":[{"value":"/ Different normal forms of buffers.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":163991,"byte_end":164029,"line_start":990,"line_end":990,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":164030,"byte_end":164033,"line_start":991,"line_end":991,"column_start":1,"column_end":4}},{"value":"/ A normal form is an unaliased buffer with some additional constraints.  The `ÌmageBuffer` uses","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":164034,"byte_end":164133,"line_start":992,"line_end":992,"column_start":1,"column_end":99}},{"value":"/ row major form with packed samples.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":164134,"byte_end":164173,"line_start":993,"line_end":993,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":637},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":165684,"byte_end":165694,"line_start":1035,"line_end":1035,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<View<Buffer, P>>::into_inner","value":"fn (self) -> FlatSamples<Buffer>","parent":null,"children":[],"decl_id":null,"docs":" Take out the sample buffer.","sig":null,"attributes":[{"value":"/ Take out the sample buffer.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":165565,"byte_end":165596,"line_start":1032,"line_end":1032,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":165601,"byte_end":165604,"line_start":1033,"line_end":1033,"column_start":5,"column_end":8}},{"value":"/ Gives up the normalization invariants on the buffer format.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":165609,"byte_end":165672,"line_start":1034,"line_end":1034,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":638},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":166177,"byte_end":166181,"line_start":1045,"line_end":1045,"column_start":12,"column_end":16},"name":"flat","qualname":"<View<Buffer, P>>::flat","value":"fn (&self) -> &FlatSamples<Buffer>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference on the inner sample descriptor.","sig":null,"attributes":[{"value":"/ Get a reference on the inner sample descriptor.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":165756,"byte_end":165807,"line_start":1039,"line_end":1039,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":165812,"byte_end":165815,"line_start":1040,"line_end":1040,"column_start":5,"column_end":8}},{"value":"/ There is no mutable counterpart as modifying the buffer format, including strides and","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":165820,"byte_end":165909,"line_start":1041,"line_end":1041,"column_start":5,"column_end":94}},{"value":"/ lengths, could invalidate the accessibility invariants of the `View`. It is not specified","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":165914,"byte_end":166007,"line_start":1042,"line_end":1042,"column_start":5,"column_end":98}},{"value":"/ if the inner buffer is the same as the buffer of the image from which this view was","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":166012,"byte_end":166099,"line_start":1043,"line_end":1043,"column_start":5,"column_end":92}},{"value":"/ created. It might have been truncated as an optimization.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":166104,"byte_end":166165,"line_start":1044,"line_end":1044,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":639},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":166460,"byte_end":166467,"line_start":1053,"line_end":1053,"column_start":12,"column_end":19},"name":"samples","qualname":"<View<Buffer, P>>::samples","value":"fn (&self) -> &Buffer","parent":null,"children":[],"decl_id":null,"docs":" Get a reference on the inner buffer.","sig":null,"attributes":[{"value":"/ Get a reference on the inner buffer.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":166246,"byte_end":166286,"line_start":1049,"line_end":1049,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":166291,"byte_end":166294,"line_start":1050,"line_end":1050,"column_start":5,"column_end":8}},{"value":"/ There is no mutable counter part since it is not intended to allow you to reassign the","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":166299,"byte_end":166389,"line_start":1051,"line_end":1051,"column_start":5,"column_end":95}},{"value":"/ buffer or otherwise change its size or properties.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":166394,"byte_end":166448,"line_start":1052,"line_end":1052,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":640},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":166786,"byte_end":166796,"line_start":1061,"line_end":1061,"column_start":12,"column_end":22},"name":"get_sample","qualname":"<View<Buffer, P>>::get_sample","value":"fn (&self, channel: u8, x: u32, y: u32) -> Option<&P::Subpixel>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to a selected subpixel if it is in-bounds.","sig":null,"attributes":[{"value":"/ Get a reference to a selected subpixel if it is in-bounds.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":166527,"byte_end":166589,"line_start":1057,"line_end":1057,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":166594,"byte_end":166597,"line_start":1058,"line_end":1058,"column_start":5,"column_end":8}},{"value":"/ This method will return `None` when the sample is out-of-bounds. All errors that could","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":166602,"byte_end":166692,"line_start":1059,"line_end":1059,"column_start":5,"column_end":95}},{"value":"/ occur due to overflow have been eliminated while construction the `View`.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":166697,"byte_end":166774,"line_start":1060,"line_end":1060,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":641},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":167670,"byte_end":167684,"line_start":1079,"line_end":1079,"column_start":12,"column_end":26},"name":"get_mut_sample","qualname":"<View<Buffer, P>>::get_mut_sample","value":"fn (&mut self, channel: u8, x: u32, y: u32) -> Option<&mut P::Subpixel>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to a selected subpixel if it is in-bounds.","sig":null,"attributes":[{"value":"/ Get a mutable reference to a selected subpixel if it is in-bounds.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":167128,"byte_end":167198,"line_start":1071,"line_end":1071,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":167203,"byte_end":167206,"line_start":1072,"line_end":1072,"column_start":5,"column_end":8}},{"value":"/ This is relevant only when constructed with `FlatSamples::as_view_with_mut_samples`.  This","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":167211,"byte_end":167305,"line_start":1073,"line_end":1073,"column_start":5,"column_end":99}},{"value":"/ method will return `None` when the sample is out-of-bounds. All errors that could occur due","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":167310,"byte_end":167405,"line_start":1074,"line_end":1074,"column_start":5,"column_end":100}},{"value":"/ to overflow have been eliminated while construction the `View`.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":167410,"byte_end":167477,"line_start":1075,"line_end":1075,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":167482,"byte_end":167485,"line_start":1076,"line_end":1076,"column_start":5,"column_end":8}},{"value":"/ **WARNING**: Note that of course samples may alias, so that the mutable reference returned","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":167490,"byte_end":167584,"line_start":1077,"line_end":1077,"column_start":5,"column_end":99}},{"value":"/ here can in fact modify more than the coordinate in the argument.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":167589,"byte_end":167658,"line_start":1078,"line_end":1078,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":642},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":168261,"byte_end":168271,"line_start":1094,"line_end":1094,"column_start":12,"column_end":22},"name":"min_length","qualname":"<View<Buffer, P>>::min_length","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the minimum length of a buffer such that all in-bounds samples have valid indices.","sig":null,"attributes":[{"value":"/ Get the minimum length of a buffer such that all in-bounds samples have valid indices.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":168079,"byte_end":168169,"line_start":1091,"line_end":1091,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":168174,"byte_end":168177,"line_start":1092,"line_end":1092,"column_start":5,"column_end":8}},{"value":"/ See `FlatSamples::min_length`. This method will always succeed.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":168182,"byte_end":168249,"line_start":1093,"line_end":1093,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":643},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":168605,"byte_end":168616,"line_start":1102,"line_end":1102,"column_start":12,"column_end":23},"name":"image_slice","qualname":"<View<Buffer, P>>::image_slice","value":"fn (&self) -> &[P::Subpixel]","parent":null,"children":[],"decl_id":null,"docs":" Return the portion of the buffer that holds sample values.","sig":null,"attributes":[{"value":"/ Return the portion of the buffer that holds sample values.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":168342,"byte_end":168404,"line_start":1098,"line_end":1098,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":168409,"byte_end":168412,"line_start":1099,"line_end":1099,"column_start":5,"column_end":8}},{"value":"/ While this can not fail–the validity of all coordinates has been validated during the","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":168417,"byte_end":168508,"line_start":1100,"line_end":1100,"column_start":5,"column_end":94}},{"value":"/ conversion from `FlatSamples`–the resulting slice may still contain holes.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":168513,"byte_end":168593,"line_start":1101,"line_end":1101,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":644},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":169073,"byte_end":169088,"line_start":1111,"line_end":1111,"column_start":12,"column_end":27},"name":"image_mut_slice","qualname":"<View<Buffer, P>>::image_mut_slice","value":"fn (&mut self) -> &mut [P::Subpixel]","parent":null,"children":[],"decl_id":null,"docs":" Return the mutable portion of the buffer that holds sample values.","sig":null,"attributes":[{"value":"/ Return the mutable portion of the buffer that holds sample values.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":168709,"byte_end":168779,"line_start":1106,"line_end":1106,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":168784,"byte_end":168787,"line_start":1107,"line_end":1107,"column_start":5,"column_end":8}},{"value":"/ This is relevant only when constructed with `FlatSamples::as_view_with_mut_samples`. While","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":168792,"byte_end":168886,"line_start":1108,"line_end":1108,"column_start":5,"column_end":99}},{"value":"/ this can not fail–the validity of all coordinates has been validated during the conversion","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":168891,"byte_end":168987,"line_start":1109,"line_end":1109,"column_start":5,"column_end":99}},{"value":"/ from `FlatSamples`–the resulting slice may still contain holes.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":168992,"byte_end":169061,"line_start":1110,"line_end":1110,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":645},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":169611,"byte_end":169620,"line_start":1123,"line_end":1123,"column_start":12,"column_end":21},"name":"shrink_to","qualname":"<View<Buffer, P>>::shrink_to","value":"fn (&mut self, width: u32, height: u32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Shrink the inner image.","sig":null,"attributes":[{"value":"/ Shrink the inner image.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":169281,"byte_end":169308,"line_start":1118,"line_end":1118,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":169313,"byte_end":169316,"line_start":1119,"line_end":1119,"column_start":5,"column_end":8}},{"value":"/ The new dimensions will be the minimum of the previous dimensions. Since the set of","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":169321,"byte_end":169408,"line_start":1120,"line_end":1120,"column_start":5,"column_end":92}},{"value":"/ in-bounds pixels afterwards is a subset of the current ones, this is allowed on a `View`.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":169413,"byte_end":169506,"line_start":1121,"line_end":1121,"column_start":5,"column_end":98}},{"value":"/ Note that you can not change the number of channels as an intrinsic property of `P`.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":169511,"byte_end":169599,"line_start":1122,"line_end":1122,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":646},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":170624,"byte_end":170635,"line_start":1146,"line_end":1146,"column_start":12,"column_end":23},"name":"try_upgrade","qualname":"<View<Buffer, P>>::try_upgrade","value":"fn (self) -> Result<ViewMut<Buffer, P>, (Error, Self)>","parent":null,"children":[],"decl_id":null,"docs":" Try to convert this into an image with mutable pixels.","sig":null,"attributes":[{"value":"/ Try to convert this into an image with mutable pixels.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":169775,"byte_end":169833,"line_start":1128,"line_end":1128,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":169838,"byte_end":169841,"line_start":1129,"line_end":1129,"column_start":5,"column_end":8}},{"value":"/ The resulting image implements `GenericImage` in addition to `GenericImageView`. While this","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":169846,"byte_end":169941,"line_start":1130,"line_end":1130,"column_start":5,"column_end":100}},{"value":"/ has mutable samples, it does not enforce that pixel can not alias and that samples are","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":169946,"byte_end":170036,"line_start":1131,"line_end":1131,"column_start":5,"column_end":95}},{"value":"/ packed enough for a mutable pixel reference. This is slightly cheaper than the chain","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":170041,"byte_end":170129,"line_start":1132,"line_end":1132,"column_start":5,"column_end":93}},{"value":"/ `self.into_inner().as_view_mut()` and keeps the `View` alive on failure.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":170134,"byte_end":170210,"line_start":1133,"line_end":1133,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":170215,"byte_end":170218,"line_start":1134,"line_end":1134,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":170223,"byte_end":170230,"line_start":1135,"line_end":1135,"column_start":5,"column_end":12}},{"value":"/ # use image::RgbImage;","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":170235,"byte_end":170261,"line_start":1136,"line_end":1136,"column_start":5,"column_end":31}},{"value":"/ # use image::Rgb;","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":170266,"byte_end":170287,"line_start":1137,"line_end":1137,"column_start":5,"column_end":26}},{"value":"/ let mut buffer = RgbImage::new(480, 640).into_flat_samples();","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":170292,"byte_end":170357,"line_start":1138,"line_end":1138,"column_start":5,"column_end":70}},{"value":"/ let view = buffer.as_view_with_mut_samples::<Rgb<u8>>().unwrap();","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":170362,"byte_end":170431,"line_start":1139,"line_end":1139,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":170436,"byte_end":170439,"line_start":1140,"line_end":1140,"column_start":5,"column_end":8}},{"value":"/ // Inspect some pixels, …","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":170444,"byte_end":170475,"line_start":1141,"line_end":1141,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":170480,"byte_end":170483,"line_start":1142,"line_end":1142,"column_start":5,"column_end":8}},{"value":"/ // Doesn't fail because it was originally an `RgbImage`.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":170488,"byte_end":170548,"line_start":1143,"line_end":1143,"column_start":5,"column_end":65}},{"value":"/ let view_mut = view.try_upgrade().unwrap();","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":170553,"byte_end":170600,"line_start":1144,"line_end":1144,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":170605,"byte_end":170612,"line_start":1145,"line_end":1145,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":650},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":171276,"byte_end":171286,"line_start":1168,"line_end":1168,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<ViewMut<Buffer, P>>::into_inner","value":"fn (self) -> FlatSamples<Buffer>","parent":null,"children":[],"decl_id":null,"docs":" Take out the sample buffer.","sig":null,"attributes":[{"value":"/ Take out the sample buffer.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":171157,"byte_end":171188,"line_start":1165,"line_end":1165,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":171193,"byte_end":171196,"line_start":1166,"line_end":1166,"column_start":5,"column_end":8}},{"value":"/ Gives up the normalization invariants on the buffer format.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":171201,"byte_end":171264,"line_start":1167,"line_end":1167,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":651},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":171770,"byte_end":171774,"line_start":1178,"line_end":1178,"column_start":12,"column_end":16},"name":"flat","qualname":"<ViewMut<Buffer, P>>::flat","value":"fn (&self) -> &FlatSamples<Buffer>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference on the sample buffer descriptor.","sig":null,"attributes":[{"value":"/ Get a reference on the sample buffer descriptor.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":171348,"byte_end":171400,"line_start":1172,"line_end":1172,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":171405,"byte_end":171408,"line_start":1173,"line_end":1173,"column_start":5,"column_end":8}},{"value":"/ There is no mutable counterpart as modifying the buffer format, including strides and","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":171413,"byte_end":171502,"line_start":1174,"line_end":1174,"column_start":5,"column_end":94}},{"value":"/ lengths, could invalidate the accessibility invariants of the `View`. It is not specified","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":171507,"byte_end":171600,"line_start":1175,"line_end":1175,"column_start":5,"column_end":98}},{"value":"/ if the inner buffer is the same as the buffer of the image from which this view was","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":171605,"byte_end":171692,"line_start":1176,"line_end":1176,"column_start":5,"column_end":92}},{"value":"/ created. It might have been truncated as an optimization.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":171697,"byte_end":171758,"line_start":1177,"line_end":1177,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":652},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":172147,"byte_end":172154,"line_start":1187,"line_end":1187,"column_start":12,"column_end":19},"name":"samples","qualname":"<ViewMut<Buffer, P>>::samples","value":"fn (&self) -> &Buffer","parent":null,"children":[],"decl_id":null,"docs":" Get a reference on the inner buffer.","sig":null,"attributes":[{"value":"/ Get a reference on the inner buffer.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":171839,"byte_end":171879,"line_start":1182,"line_end":1182,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":171884,"byte_end":171887,"line_start":1183,"line_end":1183,"column_start":5,"column_end":8}},{"value":"/ There is no mutable counter part since it is not intended to allow you to reassign the","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":171892,"byte_end":171982,"line_start":1184,"line_end":1184,"column_start":5,"column_end":95}},{"value":"/ buffer or otherwise change its size or properties. However, its contents can be accessed","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":171987,"byte_end":172079,"line_start":1185,"line_end":1185,"column_start":5,"column_end":97}},{"value":"/ mutable through a slice with `image_mut_slice`.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":172084,"byte_end":172135,"line_start":1186,"line_end":1186,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":653},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":172396,"byte_end":172406,"line_start":1194,"line_end":1194,"column_start":12,"column_end":22},"name":"min_length","qualname":"<ViewMut<Buffer, P>>::min_length","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the minimum length of a buffer such that all in-bounds samples have valid indices.","sig":null,"attributes":[{"value":"/ Get the minimum length of a buffer such that all in-bounds samples have valid indices.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":172214,"byte_end":172304,"line_start":1191,"line_end":1191,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":172309,"byte_end":172312,"line_start":1192,"line_end":1192,"column_start":5,"column_end":8}},{"value":"/ See `FlatSamples::min_length`. This method will always succeed.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":172317,"byte_end":172384,"line_start":1193,"line_end":1193,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":654},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":172717,"byte_end":172727,"line_start":1202,"line_end":1202,"column_start":12,"column_end":22},"name":"get_sample","qualname":"<ViewMut<Buffer, P>>::get_sample","value":"fn (&self, channel: u8, x: u32, y: u32) -> Option<&P::Subpixel>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to a selected subpixel.","sig":null,"attributes":[{"value":"/ Get a reference to a selected subpixel.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":172477,"byte_end":172520,"line_start":1198,"line_end":1198,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":172525,"byte_end":172528,"line_start":1199,"line_end":1199,"column_start":5,"column_end":8}},{"value":"/ This method will return `None` when the sample is out-of-bounds. All errors that could","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":172533,"byte_end":172623,"line_start":1200,"line_end":1200,"column_start":5,"column_end":95}},{"value":"/ occur due to overflow have been eliminated while construction the `View`.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":172628,"byte_end":172705,"line_start":1201,"line_end":1201,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":655},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":173352,"byte_end":173366,"line_start":1218,"line_end":1218,"column_start":12,"column_end":26},"name":"get_mut_sample","qualname":"<ViewMut<Buffer, P>>::get_mut_sample","value":"fn (&mut self, channel: u8, x: u32, y: u32) -> Option<&mut P::Subpixel>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to a selected sample.","sig":null,"attributes":[{"value":"/ Get a mutable reference to a selected sample.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":173106,"byte_end":173155,"line_start":1214,"line_end":1214,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":173160,"byte_end":173163,"line_start":1215,"line_end":1215,"column_start":5,"column_end":8}},{"value":"/ This method will return `None` when the sample is out-of-bounds. All errors that could","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":173168,"byte_end":173258,"line_start":1216,"line_end":1216,"column_start":5,"column_end":95}},{"value":"/ occur due to overflow have been eliminated while construction the `View`.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":173263,"byte_end":173340,"line_start":1217,"line_end":1217,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":656},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":173977,"byte_end":173988,"line_start":1232,"line_end":1232,"column_start":12,"column_end":23},"name":"image_slice","qualname":"<ViewMut<Buffer, P>>::image_slice","value":"fn (&self) -> &[P::Subpixel]","parent":null,"children":[],"decl_id":null,"docs":" Return the portion of the buffer that holds sample values.","sig":null,"attributes":[{"value":"/ Return the portion of the buffer that holds sample values.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":173714,"byte_end":173776,"line_start":1228,"line_end":1228,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":173781,"byte_end":173784,"line_start":1229,"line_end":1229,"column_start":5,"column_end":8}},{"value":"/ While this can not fail–the validity of all coordinates has been validated during the","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":173789,"byte_end":173880,"line_start":1230,"line_end":1230,"column_start":5,"column_end":94}},{"value":"/ conversion from `FlatSamples`–the resulting slice may still contain holes.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":173885,"byte_end":173965,"line_start":1231,"line_end":1231,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":657},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":174187,"byte_end":174202,"line_start":1237,"line_end":1237,"column_start":12,"column_end":27},"name":"image_mut_slice","qualname":"<ViewMut<Buffer, P>>::image_mut_slice","value":"fn (&mut self) -> &mut [P::Subpixel]","parent":null,"children":[],"decl_id":null,"docs":" Return the mutable buffer that holds sample values.\n","sig":null,"attributes":[{"value":"/ Return the mutable buffer that holds sample values.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":174120,"byte_end":174175,"line_start":1236,"line_end":1236,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":658},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":174670,"byte_end":174679,"line_start":1247,"line_end":1247,"column_start":12,"column_end":21},"name":"shrink_to","qualname":"<ViewMut<Buffer, P>>::shrink_to","value":"fn (&mut self, width: u32, height: u32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Shrink the inner image.","sig":null,"attributes":[{"value":"/ Shrink the inner image.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":174340,"byte_end":174367,"line_start":1242,"line_end":1242,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":174372,"byte_end":174375,"line_start":1243,"line_end":1243,"column_start":5,"column_end":8}},{"value":"/ The new dimensions will be the minimum of the previous dimensions. Since the set of","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":174380,"byte_end":174467,"line_start":1244,"line_end":1244,"column_start":5,"column_end":92}},{"value":"/ in-bounds pixels afterwards is a subset of the current ones, this is allowed on a `View`.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":174472,"byte_end":174565,"line_start":1245,"line_end":1245,"column_start":5,"column_end":98}},{"value":"/ Note that you can not change the number of channels as an intrinsic property of `P`.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":174570,"byte_end":174658,"line_start":1246,"line_end":1246,"column_start":5,"column_end":93}}]},{"kind":"Mod","id":{"krate":0,"index":709},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/bmp/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"bmp","qualname":"::bmp","value":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/bmp/mod.rs","parent":null,"children":[{"krate":0,"index":710},{"krate":0,"index":711},{"krate":0,"index":712},{"krate":0,"index":920}],"decl_id":null,"docs":"  Decoding and Encoding of BMP Images","sig":null,"attributes":[{"value":"cfg(feature = \"bmp\")","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":8771,"byte_end":8794,"line_start":212,"line_end":212,"column_start":1,"column_end":24}},{"value":"!  Decoding and Encoding of BMP Images","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/bmp/mod.rs","byte_start":186883,"byte_end":186923,"line_start":1,"line_end":1,"column_start":1,"column_end":41}},{"value":"!","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/bmp/mod.rs","byte_start":186924,"byte_end":186927,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"!  A decoder and encoder for BMP (Windows Bitmap) images","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/bmp/mod.rs","byte_start":186928,"byte_end":186986,"line_start":3,"line_end":3,"column_start":1,"column_end":59}},{"value":"!","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/bmp/mod.rs","byte_start":186987,"byte_end":186990,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"!  # Related Links","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/bmp/mod.rs","byte_start":186991,"byte_end":187011,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"!  * <https://msdn.microsoft.com/en-us/library/windows/desktop/dd183375%28v=vs.85%29.aspx>","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/bmp/mod.rs","byte_start":187012,"byte_end":187104,"line_start":6,"line_end":6,"column_start":1,"column_end":93}},{"value":"!  * <https://en.wikipedia.org/wiki/BMP_file_format>","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/bmp/mod.rs","byte_start":187105,"byte_end":187159,"line_start":7,"line_end":7,"column_start":1,"column_end":55}},{"value":"!","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/bmp/mod.rs","byte_start":187160,"byte_end":187163,"line_start":8,"line_end":8,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":818},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/bmp/decoder.rs","byte_start":205209,"byte_end":205219,"line_start":545,"line_end":545,"column_start":12,"column_end":22},"name":"BmpDecoder","qualname":"::bmp::decoder::BmpDecoder","value":"BmpDecoder {  }","parent":null,"children":[{"krate":0,"index":820},{"krate":0,"index":821},{"krate":0,"index":822},{"krate":0,"index":823},{"krate":0,"index":824},{"krate":0,"index":825},{"krate":0,"index":826},{"krate":0,"index":827},{"krate":0,"index":828},{"krate":0,"index":829},{"krate":0,"index":830},{"krate":0,"index":831},{"krate":0,"index":832},{"krate":0,"index":833}],"decl_id":null,"docs":" A bmp decoder\n","sig":null,"attributes":[{"value":"/ A bmp decoder","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/bmp/decoder.rs","byte_start":205180,"byte_end":205197,"line_start":544,"line_end":544,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":863},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/bmp/decoder.rs","byte_start":207787,"byte_end":207790,"line_start":632,"line_end":632,"column_start":12,"column_end":15},"name":"new","qualname":"<BmpDecoder<R>>::new","value":"fn (reader: R) -> ImageResult<BmpDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Create a new decoder that decodes from the stream ```r```\n","sig":null,"attributes":[{"value":"/ Create a new decoder that decodes from the stream ```r```","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/bmp/decoder.rs","byte_start":207714,"byte_end":207775,"line_start":631,"line_end":631,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":872},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/bmp/decoder.rs","byte_start":219588,"byte_end":219615,"line_start":945,"line_end":945,"column_start":12,"column_end":39},"name":"read_metadata_in_ico_format","qualname":"<BmpDecoder<R>>::read_metadata_in_ico_format","value":"fn (&mut self) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"ico\")","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/bmp/decoder.rs","byte_start":219534,"byte_end":219557,"line_start":943,"line_end":943,"column_start":5,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":896},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/bmp/decoder.rs","byte_start":239544,"byte_end":239553,"line_start":1419,"line_end":1419,"column_start":12,"column_end":21},"name":"BmpReader","qualname":"::bmp::decoder::BmpReader","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper struct around a `Cursor<Vec<u8>>`\n","sig":null,"attributes":[{"value":"/ Wrapper struct around a `Cursor<Vec<u8>>`","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/bmp/decoder.rs","byte_start":239487,"byte_end":239532,"line_start":1418,"line_end":1418,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":937},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/bmp/encoder.rs","byte_start":242179,"byte_end":242189,"line_start":13,"line_end":13,"column_start":12,"column_end":22},"name":"BMPEncoder","qualname":"::bmp::encoder::BMPEncoder","value":"BMPEncoder {  }","parent":null,"children":[{"krate":0,"index":940}],"decl_id":null,"docs":" The representation of a BMP encoder.\n","sig":null,"attributes":[{"value":"/ The representation of a BMP encoder.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/bmp/encoder.rs","byte_start":242127,"byte_end":242167,"line_start":12,"line_end":12,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":944},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/bmp/encoder.rs","byte_start":242348,"byte_end":242351,"line_start":19,"line_end":19,"column_start":12,"column_end":15},"name":"new","qualname":"<BMPEncoder>::new","value":"fn (w: &'a mut W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that writes its output to ```w```.\n","sig":null,"attributes":[{"value":"/ Create a new encoder that writes its output to ```w```.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/bmp/encoder.rs","byte_start":242277,"byte_end":242336,"line_start":18,"line_end":18,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":945},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/bmp/encoder.rs","byte_start":242559,"byte_end":242565,"line_start":26,"line_end":26,"column_start":12,"column_end":18},"name":"encode","qualname":"<BMPEncoder>::encode","value":"fn (&mut self, image: &[u8], width: u32, height: u32, c: color::ColorType) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes the image ```image```\n that has dimensions ```width``` and ```height```\n and ```ColorType``` ```c```.\n","sig":null,"attributes":[{"value":"/ Encodes the image ```image```","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/bmp/encoder.rs","byte_start":242420,"byte_end":242453,"line_start":23,"line_end":23,"column_start":5,"column_end":38}},{"value":"/ that has dimensions ```width``` and ```height```","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/bmp/encoder.rs","byte_start":242458,"byte_end":242510,"line_start":24,"line_end":24,"column_start":5,"column_end":57}},{"value":"/ and ```ColorType``` ```c```.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/bmp/encoder.rs","byte_start":242515,"byte_end":242547,"line_start":25,"line_end":25,"column_start":5,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":959},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dds.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"dds","qualname":"::dds","value":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dds.rs","parent":null,"children":[{"krate":0,"index":960},{"krate":0,"index":963},{"krate":0,"index":964},{"krate":0,"index":967},{"krate":0,"index":968},{"krate":0,"index":972},{"krate":0,"index":979},{"krate":0,"index":4362},{"krate":0,"index":4395},{"krate":0,"index":4394},{"krate":0,"index":4392},{"krate":0,"index":4389},{"krate":0,"index":4385},{"krate":0,"index":4386},{"krate":0,"index":4382},{"krate":0,"index":4383},{"krate":0,"index":4376},{"krate":0,"index":4374},{"krate":0,"index":982},{"krate":0,"index":984},{"krate":0,"index":986},{"krate":0,"index":4397},{"krate":0,"index":4407},{"krate":0,"index":4409},{"krate":0,"index":4418},{"krate":0,"index":987},{"krate":0,"index":990},{"krate":0,"index":996},{"krate":0,"index":999},{"krate":0,"index":1003}],"decl_id":null,"docs":"  Decoding of DDS images","sig":null,"attributes":[{"value":"cfg(feature = \"dds\")","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":8808,"byte_end":8831,"line_start":214,"line_end":214,"column_start":1,"column_end":24}},{"value":"!  Decoding of DDS images","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dds.rs","byte_start":253522,"byte_end":253549,"line_start":1,"line_end":1,"column_start":1,"column_end":28}},{"value":"!","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dds.rs","byte_start":253550,"byte_end":253553,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"!  DDS (DirectDraw Surface) is a container format for storing DXT (S3TC) compressed images.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dds.rs","byte_start":253554,"byte_end":253647,"line_start":3,"line_end":3,"column_start":1,"column_end":94}},{"value":"!","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dds.rs","byte_start":253648,"byte_end":253651,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"!  # Related Links","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dds.rs","byte_start":253652,"byte_end":253672,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"!  * <https://docs.microsoft.com/en-us/windows/win32/direct3ddds/dx-graphics-dds-pguide> - Description of the DDS format.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dds.rs","byte_start":253673,"byte_end":253796,"line_start":6,"line_end":6,"column_start":1,"column_end":124}}]},{"kind":"Struct","id":{"krate":0,"index":996},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dds.rs","byte_start":258228,"byte_end":258238,"line_start":155,"line_end":155,"column_start":12,"column_end":22},"name":"DdsDecoder","qualname":"::dds::DdsDecoder","value":"DdsDecoder {  }","parent":null,"children":[{"krate":0,"index":998}],"decl_id":null,"docs":" The representation of a DDS decoder\n","sig":null,"attributes":[{"value":"/ The representation of a DDS decoder","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dds.rs","byte_start":258177,"byte_end":258216,"line_start":154,"line_end":154,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1001},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dds.rs","byte_start":258382,"byte_end":258385,"line_start":161,"line_end":161,"column_start":12,"column_end":15},"name":"new","qualname":"<DdsDecoder<R>>::new","value":"fn (mut r: R) -> ImageResult<Self>","parent":null,"children":[],"decl_id":null,"docs":" Create a new decoder that decodes from the stream `r`\n","sig":null,"attributes":[{"value":"/ Create a new decoder that decodes from the stream `r`","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dds.rs","byte_start":258313,"byte_end":258370,"line_start":160,"line_end":160,"column_start":5,"column_end":62}}]},{"kind":"Mod","id":{"krate":0,"index":1012},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dxt.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"dxt","qualname":"::dxt","value":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dxt.rs","parent":null,"children":[{"krate":0,"index":1013},{"krate":0,"index":1014},{"krate":0,"index":1020},{"krate":0,"index":1021},{"krate":0,"index":1026},{"krate":0,"index":4420},{"krate":0,"index":4436},{"krate":0,"index":4435},{"krate":0,"index":4433},{"krate":0,"index":4430},{"krate":0,"index":4431},{"krate":0,"index":4427},{"krate":0,"index":4428},{"krate":0,"index":1032},{"krate":0,"index":1036},{"krate":0,"index":1043},{"krate":0,"index":1047},{"krate":0,"index":1056},{"krate":0,"index":1064},{"krate":0,"index":1068},{"krate":0,"index":1072},{"krate":0,"index":1075},{"krate":0,"index":1079},{"krate":0,"index":1080},{"krate":0,"index":1082},{"krate":0,"index":1083},{"krate":0,"index":1084},{"krate":0,"index":1085},{"krate":0,"index":1086},{"krate":0,"index":1088},{"krate":0,"index":1091},{"krate":0,"index":1093},{"krate":0,"index":1095},{"krate":0,"index":1096},{"krate":0,"index":1098},{"krate":0,"index":1100},{"krate":0,"index":1102},{"krate":0,"index":1113},{"krate":0,"index":1117},{"krate":0,"index":1121},{"krate":0,"index":1122},{"krate":0,"index":1123},{"krate":0,"index":1125},{"krate":0,"index":1127}],"decl_id":null,"docs":"  Decoding of DXT (S3TC) compression","sig":null,"attributes":[{"value":"cfg(feature = \"dxt\")","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":8845,"byte_end":8868,"line_start":216,"line_end":216,"column_start":1,"column_end":24}},{"value":"!  Decoding of DXT (S3TC) compression","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dxt.rs","byte_start":260286,"byte_end":260325,"line_start":1,"line_end":1,"column_start":1,"column_end":40}},{"value":"!","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dxt.rs","byte_start":260326,"byte_end":260329,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"!  DXT is an image format that supports lossy compression","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dxt.rs","byte_start":260330,"byte_end":260389,"line_start":3,"line_end":3,"column_start":1,"column_end":60}},{"value":"!","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dxt.rs","byte_start":260390,"byte_end":260393,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"!  # Related Links","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dxt.rs","byte_start":260394,"byte_end":260414,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"!  * <https://www.khronos.org/registry/OpenGL/extensions/EXT/EXT_texture_compression_s3tc.txt> - Description of the DXT compression OpenGL extensions.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dxt.rs","byte_start":260415,"byte_end":260567,"line_start":6,"line_end":6,"column_start":1,"column_end":153}},{"value":"!","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dxt.rs","byte_start":260568,"byte_end":260571,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"!  Note: this module only implements bare DXT encoding/decoding, it does not parse formats that can contain DXT files like .dds","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dxt.rs","byte_start":260572,"byte_end":260701,"line_start":8,"line_end":8,"column_start":1,"column_end":130}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4421},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dxt.rs","byte_start":261322,"byte_end":261326,"line_start":24,"line_end":24,"column_start":5,"column_end":9},"name":"DXT1","qualname":"::dxt::DXTVariant::DXT1","value":"DXTVariant::DXT1","parent":{"krate":0,"index":4420},"children":[],"decl_id":null,"docs":" The DXT1 format. 48 bytes of RGB data in a 4x4 pixel square is\n compressed into an 8 byte block of DXT1 data\n","sig":null,"attributes":[{"value":"/ The DXT1 format. 48 bytes of RGB data in a 4x4 pixel square is","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dxt.rs","byte_start":261198,"byte_end":261264,"line_start":22,"line_end":22,"column_start":5,"column_end":71}},{"value":"/ compressed into an 8 byte block of DXT1 data","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dxt.rs","byte_start":261269,"byte_end":261317,"line_start":23,"line_end":23,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4423},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dxt.rs","byte_start":261457,"byte_end":261461,"line_start":27,"line_end":27,"column_start":5,"column_end":9},"name":"DXT3","qualname":"::dxt::DXTVariant::DXT3","value":"DXTVariant::DXT3","parent":{"krate":0,"index":4420},"children":[],"decl_id":null,"docs":" The DXT3 format. 64 bytes of RGBA data in a 4x4 pixel square is\n compressed into a 16 byte block of DXT3 data\n","sig":null,"attributes":[{"value":"/ The DXT3 format. 64 bytes of RGBA data in a 4x4 pixel square is","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dxt.rs","byte_start":261332,"byte_end":261399,"line_start":25,"line_end":25,"column_start":5,"column_end":72}},{"value":"/ compressed into a 16 byte block of DXT3 data","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dxt.rs","byte_start":261404,"byte_end":261452,"line_start":26,"line_end":26,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4425},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dxt.rs","byte_start":261592,"byte_end":261596,"line_start":30,"line_end":30,"column_start":5,"column_end":9},"name":"DXT5","qualname":"::dxt::DXTVariant::DXT5","value":"DXTVariant::DXT5","parent":{"krate":0,"index":4420},"children":[],"decl_id":null,"docs":" The DXT5 format. 64 bytes of RGBA data in a 4x4 pixel square is\n compressed into a 16 byte block of DXT5 data\n","sig":null,"attributes":[{"value":"/ The DXT5 format. 64 bytes of RGBA data in a 4x4 pixel square is","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dxt.rs","byte_start":261467,"byte_end":261534,"line_start":28,"line_end":28,"column_start":5,"column_end":72}},{"value":"/ compressed into a 16 byte block of DXT5 data","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dxt.rs","byte_start":261539,"byte_end":261587,"line_start":29,"line_end":29,"column_start":5,"column_end":53}}]},{"kind":"Enum","id":{"krate":0,"index":4420},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dxt.rs","byte_start":261181,"byte_end":261191,"line_start":21,"line_end":21,"column_start":10,"column_end":20},"name":"DXTVariant","qualname":"::dxt::DXTVariant","value":"DXTVariant::{DXT1, DXT3, DXT5}","parent":null,"children":[{"krate":0,"index":4421},{"krate":0,"index":4423},{"krate":0,"index":4425}],"decl_id":null,"docs":" What version of DXT compression are we using?\n Note that DXT2 and DXT4 are left away as they're\n just DXT3 and DXT5 with premultiplied alpha\n","sig":null,"attributes":[{"value":"/ What version of DXT compression are we using?","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dxt.rs","byte_start":260976,"byte_end":261025,"line_start":17,"line_end":17,"column_start":1,"column_end":50}},{"value":"/ Note that DXT2 and DXT4 are left away as they're","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dxt.rs","byte_start":261026,"byte_end":261078,"line_start":18,"line_end":18,"column_start":1,"column_end":53}},{"value":"/ just DXT3 and DXT5 with premultiplied alpha","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dxt.rs","byte_start":261079,"byte_end":261126,"line_start":19,"line_end":19,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1035},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dxt.rs","byte_start":262217,"byte_end":262227,"line_start":52,"line_end":52,"column_start":12,"column_end":22},"name":"color_type","qualname":"<DXTVariant>::color_type","value":"fn (self) -> ColorType","parent":null,"children":[],"decl_id":null,"docs":" Returns the color type that is stored in this DXT variant\n","sig":null,"attributes":[{"value":"/ Returns the color type that is stored in this DXT variant","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dxt.rs","byte_start":262144,"byte_end":262205,"line_start":51,"line_end":51,"column_start":5,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":1036},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dxt.rs","byte_start":262434,"byte_end":262444,"line_start":61,"line_end":61,"column_start":12,"column_end":22},"name":"DxtDecoder","qualname":"::dxt::DxtDecoder","value":"DxtDecoder {  }","parent":null,"children":[{"krate":0,"index":1038},{"krate":0,"index":1039},{"krate":0,"index":1040},{"krate":0,"index":1041},{"krate":0,"index":1042}],"decl_id":null,"docs":" DXT decoder\n","sig":null,"attributes":[{"value":"/ DXT decoder","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dxt.rs","byte_start":262407,"byte_end":262422,"line_start":60,"line_end":60,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1045},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dxt.rs","byte_start":263024,"byte_end":263027,"line_start":77,"line_end":77,"column_start":12,"column_end":15},"name":"new","qualname":"<DxtDecoder<R>>::new","value":"fn (r: R, width: u32, height: u32, variant: DXTVariant) -> Result<DxtDecoder<R>, ImageError>","parent":null,"children":[],"decl_id":null,"docs":" Create a new DXT decoder that decodes from the stream ```r```.\n As DXT is often stored as raw buffers with the width/height\n somewhere else the width and height of the image need\n to be passed in ```width``` and ```height```, as well as the\n DXT variant in ```variant```.\n width and height are required to be powers of 2 and at least 4.\n otherwise an error will be returned\n","sig":null,"attributes":[{"value":"/ Create a new DXT decoder that decodes from the stream ```r```.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dxt.rs","byte_start":262593,"byte_end":262659,"line_start":70,"line_end":70,"column_start":5,"column_end":71}},{"value":"/ As DXT is often stored as raw buffers with the width/height","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dxt.rs","byte_start":262664,"byte_end":262727,"line_start":71,"line_end":71,"column_start":5,"column_end":68}},{"value":"/ somewhere else the width and height of the image need","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dxt.rs","byte_start":262732,"byte_end":262789,"line_start":72,"line_end":72,"column_start":5,"column_end":62}},{"value":"/ to be passed in ```width``` and ```height```, as well as the","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dxt.rs","byte_start":262794,"byte_end":262858,"line_start":73,"line_end":73,"column_start":5,"column_end":69}},{"value":"/ DXT variant in ```variant```.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dxt.rs","byte_start":262863,"byte_end":262896,"line_start":74,"line_end":74,"column_start":5,"column_end":38}},{"value":"/ width and height are required to be powers of 2 and at least 4.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dxt.rs","byte_start":262901,"byte_end":262968,"line_start":75,"line_end":75,"column_start":5,"column_end":72}},{"value":"/ otherwise an error will be returned","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dxt.rs","byte_start":262973,"byte_end":263012,"line_start":76,"line_end":76,"column_start":5,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":1064},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dxt.rs","byte_start":266397,"byte_end":266406,"line_start":178,"line_end":178,"column_start":12,"column_end":21},"name":"DXTReader","qualname":"::dxt::DXTReader","value":"DXTReader {  }","parent":null,"children":[{"krate":0,"index":1066},{"krate":0,"index":1067}],"decl_id":null,"docs":" DXT reader\n","sig":null,"attributes":[{"value":"/ DXT reader","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dxt.rs","byte_start":266371,"byte_end":266385,"line_start":177,"line_end":177,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":1072},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dxt.rs","byte_start":266718,"byte_end":266728,"line_start":190,"line_end":190,"column_start":12,"column_end":22},"name":"DXTEncoder","qualname":"::dxt::DXTEncoder","value":"DXTEncoder {  }","parent":null,"children":[{"krate":0,"index":1074}],"decl_id":null,"docs":" DXT encoder\n","sig":null,"attributes":[{"value":"/ DXT encoder","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dxt.rs","byte_start":266691,"byte_end":266706,"line_start":189,"line_end":189,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1077},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dxt.rs","byte_start":266859,"byte_end":266862,"line_start":196,"line_end":196,"column_start":12,"column_end":15},"name":"new","qualname":"<DXTEncoder<W>>::new","value":"fn (w: W) -> DXTEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that writes its output to ```w```\n","sig":null,"attributes":[{"value":"/ Create a new encoder that writes its output to ```w```","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dxt.rs","byte_start":266789,"byte_end":266847,"line_start":195,"line_end":195,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1078},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dxt.rs","byte_start":267126,"byte_end":267132,"line_start":204,"line_end":204,"column_start":12,"column_end":18},"name":"encode","qualname":"<DXTEncoder<W>>::encode","value":"fn (mut self, data: &[u8], width: u32, height: u32, variant: DXTVariant) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes the image data ```data```\n that has dimensions ```width``` and ```height```\n in ```DXTVariant``` ```variant```\n data is assumed to be in variant.color_type()\n","sig":null,"attributes":[{"value":"/ Encodes the image data ```data```","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dxt.rs","byte_start":266924,"byte_end":266961,"line_start":200,"line_end":200,"column_start":5,"column_end":42}},{"value":"/ that has dimensions ```width``` and ```height```","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dxt.rs","byte_start":266966,"byte_end":267018,"line_start":201,"line_end":201,"column_start":5,"column_end":57}},{"value":"/ in ```DXTVariant``` ```variant```","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dxt.rs","byte_start":267023,"byte_end":267060,"line_start":202,"line_end":202,"column_start":5,"column_end":42}},{"value":"/ data is assumed to be in variant.color_type()","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dxt.rs","byte_start":267065,"byte_end":267114,"line_start":203,"line_end":203,"column_start":5,"column_end":54}}]},{"kind":"Mod","id":{"krate":0,"index":1129},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/gif.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"gif","qualname":"::gif","value":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/gif.rs","parent":null,"children":[{"krate":0,"index":1130},{"krate":0,"index":1131},{"krate":0,"index":1132},{"krate":0,"index":1137},{"krate":0,"index":1138},{"krate":0,"index":1139},{"krate":0,"index":1142},{"krate":0,"index":1145},{"krate":0,"index":1146},{"krate":0,"index":1147},{"krate":0,"index":1148},{"krate":0,"index":1151},{"krate":0,"index":1159},{"krate":0,"index":1164},{"krate":0,"index":1165},{"krate":0,"index":1168},{"krate":0,"index":1171},{"krate":0,"index":1176},{"krate":0,"index":1180},{"krate":0,"index":1190},{"krate":0,"index":1196},{"krate":0,"index":1199},{"krate":0,"index":1205},{"krate":0,"index":1209},{"krate":0,"index":1213},{"krate":0,"index":1227}],"decl_id":null,"docs":"  Decoding of GIF Images","sig":null,"attributes":[{"value":"cfg(feature = \"gif\")","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":8882,"byte_end":8905,"line_start":218,"line_end":218,"column_start":1,"column_end":24}},{"value":"!  Decoding of GIF Images","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/gif.rs","byte_start":289138,"byte_end":289165,"line_start":1,"line_end":1,"column_start":1,"column_end":28}},{"value":"!","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/gif.rs","byte_start":289166,"byte_end":289169,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"!  GIF (Graphics Interchange Format) is an image format that supports lossless compression.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/gif.rs","byte_start":289170,"byte_end":289263,"line_start":3,"line_end":3,"column_start":1,"column_end":94}},{"value":"!","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/gif.rs","byte_start":289264,"byte_end":289267,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"!  # Related Links","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/gif.rs","byte_start":289268,"byte_end":289288,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"!  * <http://www.w3.org/Graphics/GIF/spec-gif89a.txt> - The GIF Specification","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/gif.rs","byte_start":289289,"byte_end":289368,"line_start":6,"line_end":6,"column_start":1,"column_end":80}},{"value":"!","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/gif.rs","byte_start":289369,"byte_end":289372,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"! # Examples","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/gif.rs","byte_start":289373,"byte_end":289387,"line_start":8,"line_end":8,"column_start":1,"column_end":15}},{"value":"! ```rust,no_run","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/gif.rs","byte_start":289388,"byte_end":289406,"line_start":9,"line_end":9,"column_start":1,"column_end":19}},{"value":"! use image::gif::{GifDecoder, Encoder};","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/gif.rs","byte_start":289407,"byte_end":289449,"line_start":10,"line_end":10,"column_start":1,"column_end":43}},{"value":"! use image::{ImageDecoder, AnimationDecoder};","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/gif.rs","byte_start":289450,"byte_end":289498,"line_start":11,"line_end":11,"column_start":1,"column_end":49}},{"value":"! use std::fs::File;","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/gif.rs","byte_start":289499,"byte_end":289521,"line_start":12,"line_end":12,"column_start":1,"column_end":23}},{"value":"! # fn main() -> std::io::Result<()> {","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/gif.rs","byte_start":289522,"byte_end":289562,"line_start":13,"line_end":13,"column_start":1,"column_end":41}},{"value":"! // Decode a gif into frames","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/gif.rs","byte_start":289563,"byte_end":289594,"line_start":14,"line_end":14,"column_start":1,"column_end":32}},{"value":"! let file_in = File::open(\"foo.gif\")?;","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/gif.rs","byte_start":289595,"byte_end":289636,"line_start":15,"line_end":15,"column_start":1,"column_end":42}},{"value":"! let mut decoder = GifDecoder::new(file_in).unwrap();","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/gif.rs","byte_start":289637,"byte_end":289693,"line_start":16,"line_end":16,"column_start":1,"column_end":57}},{"value":"! let frames = decoder.into_frames();","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/gif.rs","byte_start":289694,"byte_end":289733,"line_start":17,"line_end":17,"column_start":1,"column_end":40}},{"value":"! let frames = frames.collect_frames().expect(\"error decoding gif\");","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/gif.rs","byte_start":289734,"byte_end":289804,"line_start":18,"line_end":18,"column_start":1,"column_end":71}},{"value":"!","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/gif.rs","byte_start":289805,"byte_end":289808,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"! // Encode frames into a gif and save to a file","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/gif.rs","byte_start":289809,"byte_end":289859,"line_start":20,"line_end":20,"column_start":1,"column_end":51}},{"value":"! let mut file_out = File::open(\"out.gif\")?;","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/gif.rs","byte_start":289860,"byte_end":289906,"line_start":21,"line_end":21,"column_start":1,"column_end":47}},{"value":"! let mut encoder = Encoder::new(file_out);","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/gif.rs","byte_start":289907,"byte_end":289952,"line_start":22,"line_end":22,"column_start":1,"column_end":46}},{"value":"! encoder.encode_frames(frames.into_iter());","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/gif.rs","byte_start":289953,"byte_end":289999,"line_start":23,"line_end":23,"column_start":1,"column_end":47}},{"value":"! # Ok(())","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/gif.rs","byte_start":290000,"byte_end":290012,"line_start":24,"line_end":24,"column_start":1,"column_end":13}},{"value":"! # }","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/gif.rs","byte_start":290013,"byte_end":290020,"line_start":25,"line_end":25,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/gif.rs","byte_start":290021,"byte_end":290028,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"allow(clippy :: while_let_loop)","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/gif.rs","byte_start":290029,"byte_end":290062,"line_start":27,"line_end":27,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":1165},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/gif.rs","byte_start":290647,"byte_end":290657,"line_start":47,"line_end":47,"column_start":12,"column_end":22},"name":"GifDecoder","qualname":"::gif::GifDecoder","value":"GifDecoder {  }","parent":null,"children":[{"krate":0,"index":1167}],"decl_id":null,"docs":" GIF decoder\n","sig":null,"attributes":[{"value":"/ GIF decoder","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/gif.rs","byte_start":290620,"byte_end":290635,"line_start":46,"line_end":46,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1170},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/gif.rs","byte_start":290808,"byte_end":290811,"line_start":53,"line_end":53,"column_start":12,"column_end":15},"name":"new","qualname":"<GifDecoder<R>>::new","value":"fn (r: R) -> ImageResult<GifDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder that decodes the input steam ```r```\n","sig":null,"attributes":[{"value":"/ Creates a new decoder that decodes the input steam ```r```","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/gif.rs","byte_start":290734,"byte_end":290796,"line_start":52,"line_end":52,"column_start":5,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":1171},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/gif.rs","byte_start":291112,"byte_end":291121,"line_start":64,"line_end":64,"column_start":12,"column_end":21},"name":"GifReader","qualname":"::gif::GifReader","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper struct around a `Cursor<Vec<u8>>`\n","sig":null,"attributes":[{"value":"/ Wrapper struct around a `Cursor<Vec<u8>>`","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/gif.rs","byte_start":291055,"byte_end":291100,"line_start":63,"line_end":63,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":1209},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/gif.rs","byte_start":300080,"byte_end":300087,"line_start":293,"line_end":293,"column_start":12,"column_end":19},"name":"Encoder","qualname":"::gif::Encoder","value":"Encoder {  }","parent":null,"children":[{"krate":0,"index":1211},{"krate":0,"index":1212}],"decl_id":null,"docs":" GIF encoder.\n","sig":null,"attributes":[{"value":"/ GIF encoder.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/gif.rs","byte_start":300052,"byte_end":300068,"line_start":292,"line_end":292,"column_start":1,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":1215},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/gif.rs","byte_start":300237,"byte_end":300240,"line_start":300,"line_end":300,"column_start":12,"column_end":15},"name":"new","qualname":"<Encoder<W>>::new","value":"fn (w: W) -> Encoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new GIF encoder.\n","sig":null,"attributes":[{"value":"/ Creates a new GIF encoder.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/gif.rs","byte_start":300195,"byte_end":300225,"line_start":299,"line_end":299,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1216},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/gif.rs","byte_start":300395,"byte_end":300401,"line_start":308,"line_end":308,"column_start":12,"column_end":18},"name":"encode","qualname":"<Encoder<W>>::encode","value":"fn (&mut self, data: &[u8], width: u32, height: u32, color: ColorType) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encode a single image.\n","sig":null,"attributes":[{"value":"/ Encode a single image.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/gif.rs","byte_start":300357,"byte_end":300383,"line_start":307,"line_end":307,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1217},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/gif.rs","byte_start":301116,"byte_end":301128,"line_start":329,"line_end":329,"column_start":12,"column_end":24},"name":"encode_frame","qualname":"<Encoder<W>>::encode_frame","value":"fn (&mut self, img_frame: animation::Frame) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encode one frame of animation.\n","sig":null,"attributes":[{"value":"/ Encode one frame of animation.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/gif.rs","byte_start":301070,"byte_end":301104,"line_start":328,"line_end":328,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1218},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/gif.rs","byte_start":301414,"byte_end":301427,"line_start":336,"line_end":336,"column_start":12,"column_end":25},"name":"encode_frames","qualname":"<Encoder<W>>::encode_frames","value":"fn <F> (&mut self, frames: F) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes Frames.\n Consider using `try_encode_frames` instead to encode an `animation::Frames` like iterator.\n","sig":null,"attributes":[{"value":"/ Encodes Frames.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/gif.rs","byte_start":301284,"byte_end":301303,"line_start":334,"line_end":334,"column_start":5,"column_end":24}},{"value":"/ Consider using `try_encode_frames` instead to encode an `animation::Frames` like iterator.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/gif.rs","byte_start":301308,"byte_end":301402,"line_start":335,"line_end":335,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":1220},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/gif.rs","byte_start":301905,"byte_end":301922,"line_start":349,"line_end":349,"column_start":12,"column_end":29},"name":"try_encode_frames","qualname":"<Encoder<W>>::try_encode_frames","value":"fn <F> (&mut self, frames: F) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Try to encode a collection of `ImageResult<animation::Frame>` objects.\n Use this function to encode an `animation::Frames` like iterator.\n Whenever an `Err` item is encountered, that value is returned without further actions.\n","sig":null,"attributes":[{"value":"/ Try to encode a collection of `ImageResult<animation::Frame>` objects.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/gif.rs","byte_start":301650,"byte_end":301724,"line_start":346,"line_end":346,"column_start":5,"column_end":79}},{"value":"/ Use this function to encode an `animation::Frames` like iterator.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/gif.rs","byte_start":301729,"byte_end":301798,"line_start":347,"line_end":347,"column_start":5,"column_end":74}},{"value":"/ Whenever an `Err` item is encountered, that value is returned without further actions.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/gif.rs","byte_start":301803,"byte_end":301893,"line_start":348,"line_end":348,"column_start":5,"column_end":95}}]},{"kind":"Mod","id":{"krate":0,"index":1230},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"hdr","qualname":"::hdr","value":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/mod.rs","parent":null,"children":[{"krate":0,"index":1231},{"krate":0,"index":1401},{"krate":0,"index":1452},{"krate":0,"index":1453}],"decl_id":null,"docs":"  Decoding of Radiance HDR Images","sig":null,"attributes":[{"value":"cfg(feature = \"hdr\")","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":8919,"byte_end":8942,"line_start":220,"line_end":220,"column_start":1,"column_end":24}},{"value":"!  Decoding of Radiance HDR Images","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/mod.rs","byte_start":304586,"byte_end":304622,"line_start":1,"line_end":1,"column_start":1,"column_end":37}},{"value":"!","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/mod.rs","byte_start":304623,"byte_end":304626,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"!  A decoder for Radiance HDR images","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/mod.rs","byte_start":304627,"byte_end":304665,"line_start":3,"line_end":3,"column_start":1,"column_end":39}},{"value":"!","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/mod.rs","byte_start":304666,"byte_end":304669,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"!  # Related Links","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/mod.rs","byte_start":304670,"byte_end":304690,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/mod.rs","byte_start":304691,"byte_end":304694,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"!  * <http://radsite.lbl.gov/radiance/refer/filefmts.pdf>","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/mod.rs","byte_start":304695,"byte_end":304754,"line_start":7,"line_end":7,"column_start":1,"column_end":60}},{"value":"!  * <http://www.graphics.cornell.edu/~bjw/rgbe/rgbe.c>","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/mod.rs","byte_start":304755,"byte_end":304812,"line_start":8,"line_end":8,"column_start":1,"column_end":58}},{"value":"!","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/mod.rs","byte_start":304813,"byte_end":304816,"line_start":9,"line_end":9,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":4511},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":309375,"byte_end":309385,"line_start":118,"line_end":118,"column_start":12,"column_end":22},"name":"HDRAdapter","qualname":"::hdr::decoder::HDRAdapter","value":"HDRAdapter {  }","parent":null,"children":[{"krate":0,"index":4513},{"krate":0,"index":4514}],"decl_id":null,"docs":" Adapter to conform to ```ImageDecoder``` trait\n","sig":null,"attributes":[{"value":"/ Adapter to conform to ```ImageDecoder``` trait","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":309296,"byte_end":309346,"line_start":116,"line_end":116,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1280},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":309558,"byte_end":309561,"line_start":126,"line_end":126,"column_start":12,"column_end":15},"name":"new","qualname":"<HDRAdapter<R>>::new","value":"fn (r: R) -> ImageResult<HDRAdapter<R>>","parent":null,"children":[],"decl_id":null,"docs":" Creates adapter\n","sig":null,"attributes":[{"value":"/ Creates adapter","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":309527,"byte_end":309546,"line_start":125,"line_end":125,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":1281},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":309834,"byte_end":309847,"line_start":136,"line_end":136,"column_start":12,"column_end":25},"name":"new_nonstrict","qualname":"<HDRAdapter<R>>::new_nonstrict","value":"fn (r: R) -> ImageResult<HDRAdapter<R>>","parent":null,"children":[],"decl_id":null,"docs":" Allows reading old Radiance HDR images\n","sig":null,"attributes":[{"value":"/ Allows reading old Radiance HDR images","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":309780,"byte_end":309822,"line_start":135,"line_end":135,"column_start":5,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":1283},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":310824,"byte_end":310833,"line_start":165,"line_end":165,"column_start":12,"column_end":21},"name":"HdrReader","qualname":"::hdr::decoder::HdrReader","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper struct around a `Cursor<Vec<u8>>`\n","sig":null,"attributes":[{"value":"/ Wrapper struct around a `Cursor<Vec<u8>>`","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":310767,"byte_end":310812,"line_start":164,"line_end":164,"column_start":1,"column_end":46}}]},{"kind":"Const","id":{"krate":0,"index":1307},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":312277,"byte_end":312286,"line_start":216,"line_end":216,"column_start":11,"column_end":20},"name":"SIGNATURE","qualname":"::hdr::decoder::SIGNATURE","value":"&[u8]","parent":null,"children":[],"decl_id":null,"docs":" Radiance HDR file signature\n","sig":null,"attributes":[{"value":"/ Radiance HDR file signature","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":312235,"byte_end":312266,"line_start":215,"line_end":215,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":4518},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":312404,"byte_end":312414,"line_start":221,"line_end":221,"column_start":12,"column_end":22},"name":"HdrDecoder","qualname":"::hdr::decoder::HdrDecoder","value":"HdrDecoder {  }","parent":null,"children":[{"krate":0,"index":4520},{"krate":0,"index":4521},{"krate":0,"index":4522},{"krate":0,"index":4523}],"decl_id":null,"docs":" An Radiance HDR decoder\n","sig":null,"attributes":[{"value":"/ An Radiance HDR decoder","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":312348,"byte_end":312375,"line_start":219,"line_end":219,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":4527},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":312639,"byte_end":312649,"line_start":231,"line_end":231,"column_start":12,"column_end":22},"name":"RGBE8Pixel","qualname":"::hdr::decoder::RGBE8Pixel","value":"RGBE8Pixel { c, e }","parent":null,"children":[{"krate":0,"index":4528},{"krate":0,"index":4530}],"decl_id":null,"docs":" Refer to [wikipedia](https://en.wikipedia.org/wiki/RGBE_image_format)\n","sig":null,"attributes":[{"value":"/ Refer to [wikipedia](https://en.wikipedia.org/wiki/RGBE_image_format)","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":312489,"byte_end":312562,"line_start":228,"line_end":228,"column_start":1,"column_end":74}},{"value":"repr(C)","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":312563,"byte_end":312573,"line_start":229,"line_end":229,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":4528},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":312685,"byte_end":312686,"line_start":233,"line_end":233,"column_start":9,"column_end":10},"name":"c","qualname":"::hdr::decoder::RGBE8Pixel::c","value":"[u8; 3]","parent":{"krate":0,"index":4527},"children":[],"decl_id":null,"docs":" Color components\n","sig":null,"attributes":[{"value":"/ Color components","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":312656,"byte_end":312676,"line_start":232,"line_end":232,"column_start":5,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":4530},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":312722,"byte_end":312723,"line_start":235,"line_end":235,"column_start":9,"column_end":10},"name":"e","qualname":"::hdr::decoder::RGBE8Pixel::e","value":"u8","parent":{"krate":0,"index":4527},"children":[],"decl_id":null,"docs":" Exponent\n","sig":null,"attributes":[{"value":"/ Exponent","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":312701,"byte_end":312713,"line_start":234,"line_end":234,"column_start":5,"column_end":17}}]},{"kind":"Function","id":{"krate":0,"index":1309},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":312784,"byte_end":312789,"line_start":239,"line_end":239,"column_start":8,"column_end":13},"name":"rgbe8","qualname":"::hdr::decoder::rgbe8","value":"fn (r: u8, g: u8, b: u8, e: u8) -> RGBE8Pixel","parent":null,"children":[],"decl_id":null,"docs":" Creates ```RGBE8Pixel``` from components\n","sig":null,"attributes":[{"value":"/ Creates ```RGBE8Pixel``` from components","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":312732,"byte_end":312776,"line_start":238,"line_end":238,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1311},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":312978,"byte_end":312984,"line_start":246,"line_end":246,"column_start":12,"column_end":18},"name":"to_hdr","qualname":"<RGBE8Pixel>::to_hdr","value":"fn (self) -> Rgb<f32>","parent":null,"children":[],"decl_id":null,"docs":" Converts ```RGBE8Pixel``` into ```Rgb<f32>``` linearly\n","sig":null,"attributes":[{"value":"/ Converts ```RGBE8Pixel``` into ```Rgb<f32>``` linearly","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":312894,"byte_end":312952,"line_start":244,"line_end":244,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":312957,"byte_end":312966,"line_start":245,"line_end":245,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1312},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":313744,"byte_end":313750,"line_start":268,"line_end":268,"column_start":12,"column_end":18},"name":"to_ldr","qualname":"<RGBE8Pixel>::to_ldr","value":"fn <T> (self) -> Rgb<T>","parent":null,"children":[],"decl_id":null,"docs":" Converts ```RGBE8Pixel``` into ```Rgb<T>``` with scale=1 and gamma=2.2","sig":null,"attributes":[{"value":"/ Converts ```RGBE8Pixel``` into ```Rgb<T>``` with scale=1 and gamma=2.2","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":313479,"byte_end":313553,"line_start":260,"line_end":260,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":313558,"byte_end":313561,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ color_ldr = (color_hdr*scale)<sup>gamma</sup>","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":313566,"byte_end":313615,"line_start":262,"line_end":262,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":313620,"byte_end":313623,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ # Panic","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":313628,"byte_end":313639,"line_start":264,"line_end":264,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":313644,"byte_end":313647,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ Panics when ```T::max_value()``` cannot be represented as f32.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":313652,"byte_end":313718,"line_start":266,"line_end":266,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":313723,"byte_end":313732,"line_start":267,"line_end":267,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1314},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":314136,"byte_end":314154,"line_start":281,"line_end":281,"column_start":12,"column_end":30},"name":"to_ldr_scale_gamma","qualname":"<RGBE8Pixel>::to_ldr_scale_gamma","value":"fn <T> (self, scale: f32, gamma: f32) -> Rgb<T>","parent":null,"children":[],"decl_id":null,"docs":" Converts RGBE8Pixel into Rgb<T> using provided scale and gamma","sig":null,"attributes":[{"value":"/ Converts RGBE8Pixel into Rgb<T> using provided scale and gamma","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":313843,"byte_end":313909,"line_start":272,"line_end":272,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":313914,"byte_end":313917,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ color_ldr = (color_hdr*scale)<sup>gamma</sup>","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":313922,"byte_end":313971,"line_start":274,"line_end":274,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":313976,"byte_end":313979,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ # Panic","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":313984,"byte_end":313995,"line_start":276,"line_end":276,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":314000,"byte_end":314003,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ Panics when T::max_value() cannot be represented as f32.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":314008,"byte_end":314068,"line_start":278,"line_end":278,"column_start":5,"column_end":65}},{"value":"/ Panics when scale or gamma is NaN","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":314073,"byte_end":314110,"line_start":279,"line_end":279,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":314115,"byte_end":314124,"line_start":280,"line_end":280,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1320},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":315362,"byte_end":315365,"line_start":312,"line_end":312,"column_start":12,"column_end":15},"name":"new","qualname":"<HdrDecoder<R>>::new","value":"fn (reader: R) -> ImageResult<HdrDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Reads Radiance HDR image header from stream ```r```\n if the header is valid, creates HdrDecoder\n strict mode is enabled\n","sig":null,"attributes":[{"value":"/ Reads Radiance HDR image header from stream ```r```","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":315213,"byte_end":315268,"line_start":309,"line_end":309,"column_start":5,"column_end":60}},{"value":"/ if the header is valid, creates HdrDecoder","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":315273,"byte_end":315319,"line_start":310,"line_end":310,"column_start":5,"column_end":51}},{"value":"/ strict mode is enabled","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":315324,"byte_end":315350,"line_start":311,"line_end":311,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1321},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":315773,"byte_end":315788,"line_start":323,"line_end":323,"column_start":12,"column_end":27},"name":"with_strictness","qualname":"<HdrDecoder<R>>::with_strictness","value":"fn (mut reader: R, strict: bool) -> ImageResult<HdrDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Reads Radiance HDR image header from stream ```reader```,\n if the header is valid, creates ```HdrDecoder```.","sig":null,"attributes":[{"value":"/ Reads Radiance HDR image header from stream ```reader```,","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":315470,"byte_end":315531,"line_start":316,"line_end":316,"column_start":5,"column_end":66}},{"value":"/ if the header is valid, creates ```HdrDecoder```.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":315536,"byte_end":315589,"line_start":317,"line_end":317,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":315594,"byte_end":315597,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ strict enables strict mode","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":315602,"byte_end":315632,"line_start":319,"line_end":319,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":315637,"byte_end":315640,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ Warning! Reading wrong file in non-strict mode","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":315645,"byte_end":315695,"line_start":321,"line_end":321,"column_start":5,"column_end":55}},{"value":"/   could consume file size worth of memory in the process.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":315700,"byte_end":315761,"line_start":322,"line_end":322,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1323},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":318341,"byte_end":318349,"line_start":390,"line_end":390,"column_start":12,"column_end":20},"name":"metadata","qualname":"<HdrDecoder<R>>::metadata","value":"fn (&self) -> HDRMetadata","parent":null,"children":[],"decl_id":null,"docs":" Returns file metadata. Refer to ```HDRMetadata``` for details.\n","sig":null,"attributes":[{"value":"/ Returns file metadata. Refer to ```HDRMetadata``` for details.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":318263,"byte_end":318329,"line_start":389,"line_end":389,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1324},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":318480,"byte_end":318497,"line_start":395,"line_end":395,"column_start":12,"column_end":29},"name":"read_image_native","qualname":"<HdrDecoder<R>>::read_image_native","value":"fn (mut self) -> ImageResult<Vec<RGBE8Pixel>>","parent":null,"children":[],"decl_id":null,"docs":" Consumes decoder and returns a vector of RGBE8 pixels\n","sig":null,"attributes":[{"value":"/ Consumes decoder and returns a vector of RGBE8 pixels","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":318411,"byte_end":318468,"line_start":394,"line_end":394,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1325},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":319130,"byte_end":319150,"line_start":410,"line_end":410,"column_start":12,"column_end":32},"name":"read_image_transform","qualname":"<HdrDecoder<R>>::read_image_transform","value":"fn <T, F> (mut self, f: F, output_slice: &mut [T]) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Consumes decoder and returns a vector of transformed pixels\n","sig":null,"attributes":[{"value":"/ Consumes decoder and returns a vector of transformed pixels","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":319055,"byte_end":319118,"line_start":409,"line_end":409,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1330},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":320289,"byte_end":320303,"line_start":446,"line_end":446,"column_start":12,"column_end":26},"name":"read_image_ldr","qualname":"<HdrDecoder<R>>::read_image_ldr","value":"fn (self) -> ImageResult<Vec<Rgb<u8>>>","parent":null,"children":[],"decl_id":null,"docs":" Consumes decoder and returns a vector of Rgb<u8> pixels.\n scale = 1, gamma = 2.2\n","sig":null,"attributes":[{"value":"/ Consumes decoder and returns a vector of Rgb<u8> pixels.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":320186,"byte_end":320246,"line_start":444,"line_end":444,"column_start":5,"column_end":65}},{"value":"/ scale = 1, gamma = 2.2","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":320251,"byte_end":320277,"line_start":445,"line_end":445,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1332},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":320607,"byte_end":320621,"line_start":454,"line_end":454,"column_start":12,"column_end":26},"name":"read_image_hdr","qualname":"<HdrDecoder<R>>::read_image_hdr","value":"fn (self) -> ImageResult<Vec<Rgb<f32>>>","parent":null,"children":[],"decl_id":null,"docs":" Consumes decoder and returns a vector of Rgb<f32> pixels.","sig":null,"attributes":[{"value":"/ Consumes decoder and returns a vector of Rgb<f32> pixels.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":320526,"byte_end":320587,"line_start":452,"line_end":452,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":320592,"byte_end":320595,"line_start":453,"line_end":453,"column_start":5,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1339},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":321432,"byte_end":321455,"line_start":479,"line_end":479,"column_start":12,"column_end":35},"name":"HDRImageDecoderIterator","qualname":"::hdr::decoder::HDRImageDecoderIterator","value":"HDRImageDecoderIterator {  }","parent":null,"children":[{"krate":0,"index":1341},{"krate":0,"index":1342},{"krate":0,"index":1343},{"krate":0,"index":1344},{"krate":0,"index":1345},{"krate":0,"index":1346},{"krate":0,"index":1347}],"decl_id":null,"docs":" Scanline buffered pixel by pixel iterator\n","sig":null,"attributes":[{"value":"/ Scanline buffered pixel by pixel iterator","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":321375,"byte_end":321420,"line_start":478,"line_end":478,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":4547},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":329020,"byte_end":329031,"line_start":701,"line_end":701,"column_start":12,"column_end":23},"name":"HDRMetadata","qualname":"::hdr::decoder::HDRMetadata","value":"HDRMetadata { width, height, orientation, exposure, color_correction, pixel_aspect_ratio, custom_attributes }","parent":null,"children":[{"krate":0,"index":4548},{"krate":0,"index":4549},{"krate":0,"index":4550},{"krate":0,"index":4551},{"krate":0,"index":4552},{"krate":0,"index":4553},{"krate":0,"index":4554}],"decl_id":null,"docs":" Metadata for Radiance HDR image\n","sig":null,"attributes":[{"value":"/ Metadata for Radiance HDR image","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":328949,"byte_end":328984,"line_start":699,"line_end":699,"column_start":1,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":4548},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":329169,"byte_end":329174,"line_start":704,"line_end":704,"column_start":9,"column_end":14},"name":"width","qualname":"::hdr::decoder::HDRMetadata::width","value":"u32","parent":{"krate":0,"index":4547},"children":[],"decl_id":null,"docs":" Width of decoded image. It could be either scanline length,\n or scanline count, depending on image orientation.\n","sig":null,"attributes":[{"value":"/ Width of decoded image. It could be either scanline length,","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":329038,"byte_end":329101,"line_start":702,"line_end":702,"column_start":5,"column_end":68}},{"value":"/ or scanline count, depending on image orientation.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":329106,"byte_end":329160,"line_start":703,"line_end":703,"column_start":5,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":4549},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":329253,"byte_end":329259,"line_start":706,"line_end":706,"column_start":9,"column_end":15},"name":"height","qualname":"::hdr::decoder::HDRMetadata::height","value":"u32","parent":{"krate":0,"index":4547},"children":[],"decl_id":null,"docs":" Height of decoded image. It depends on orientation too.\n","sig":null,"attributes":[{"value":"/ Height of decoded image. It depends on orientation too.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":329185,"byte_end":329244,"line_start":705,"line_end":705,"column_start":5,"column_end":64}}]},{"kind":"Field","id":{"krate":0,"index":4550},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":329534,"byte_end":329545,"line_start":710,"line_end":710,"column_start":9,"column_end":20},"name":"orientation","qualname":"::hdr::decoder::HDRMetadata::orientation","value":"((i8, i8), (i8, i8))","parent":{"krate":0,"index":4547},"children":[],"decl_id":null,"docs":" Orientation matrix. For standard orientation it is ((1,0),(0,1)) - left to right, top to bottom.\n First pair tells how resulting pixel coordinates change along a scanline.\n Second pair tells how they change from one scanline to the next.\n","sig":null,"attributes":[{"value":"/ Orientation matrix. For standard orientation it is ((1,0),(0,1)) - left to right, top to bottom.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":329270,"byte_end":329370,"line_start":707,"line_end":707,"column_start":5,"column_end":105}},{"value":"/ First pair tells how resulting pixel coordinates change along a scanline.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":329375,"byte_end":329452,"line_start":708,"line_end":708,"column_start":5,"column_end":82}},{"value":"/ Second pair tells how they change from one scanline to the next.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":329457,"byte_end":329525,"line_start":709,"line_end":709,"column_start":5,"column_end":73}}]},{"kind":"Field","id":{"krate":0,"index":4551},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":329770,"byte_end":329778,"line_start":715,"line_end":715,"column_start":9,"column_end":17},"name":"exposure","qualname":"::hdr::decoder::HDRMetadata::exposure","value":"std::option::Option<f32>","parent":{"krate":0,"index":4547},"children":[],"decl_id":null,"docs":" Divide color values by exposure to get to get physical radiance in\n watts/steradian/m<sup>2</sup>","sig":null,"attributes":[{"value":"/ Divide color values by exposure to get to get physical radiance in","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":329573,"byte_end":329643,"line_start":711,"line_end":711,"column_start":5,"column_end":75}},{"value":"/ watts/steradian/m<sup>2</sup>","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":329648,"byte_end":329681,"line_start":712,"line_end":712,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":329686,"byte_end":329689,"line_start":713,"line_end":713,"column_start":5,"column_end":8}},{"value":"/ Image may not contain physical data, even if this field is set.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":329694,"byte_end":329761,"line_start":714,"line_end":714,"column_start":5,"column_end":72}}]},{"kind":"Field","id":{"krate":0,"index":4552},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":330022,"byte_end":330038,"line_start":720,"line_end":720,"column_start":9,"column_end":25},"name":"color_correction","qualname":"::hdr::decoder::HDRMetadata::color_correction","value":"std::option::Option<(f32, f32, f32)>","parent":{"krate":0,"index":4547},"children":[],"decl_id":null,"docs":" Divide color values by corresponding tuple member (r, g, b) to get to get physical radiance\n in watts/steradian/m<sup>2</sup>","sig":null,"attributes":[{"value":"/ Divide color values by corresponding tuple member (r, g, b) to get to get physical radiance","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":329797,"byte_end":329892,"line_start":716,"line_end":716,"column_start":5,"column_end":100}},{"value":"/ in watts/steradian/m<sup>2</sup>","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":329897,"byte_end":329933,"line_start":717,"line_end":717,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":329938,"byte_end":329941,"line_start":718,"line_end":718,"column_start":5,"column_end":8}},{"value":"/ Image may not contain physical data, even if this field is set.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":329946,"byte_end":330013,"line_start":719,"line_end":719,"column_start":5,"column_end":72}}]},{"kind":"Field","id":{"krate":0,"index":4553},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":330117,"byte_end":330135,"line_start":722,"line_end":722,"column_start":9,"column_end":27},"name":"pixel_aspect_ratio","qualname":"::hdr::decoder::HDRMetadata::pixel_aspect_ratio","value":"std::option::Option<f32>","parent":{"krate":0,"index":4547},"children":[],"decl_id":null,"docs":" Pixel height divided by pixel width\n","sig":null,"attributes":[{"value":"/ Pixel height divided by pixel width","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":330069,"byte_end":330108,"line_start":721,"line_end":721,"column_start":5,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":4554},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":330364,"byte_end":330381,"line_start":726,"line_end":726,"column_start":9,"column_end":26},"name":"custom_attributes","qualname":"::hdr::decoder::HDRMetadata::custom_attributes","value":"std::vec::Vec<(std::string::String, std::string::String)>","parent":{"krate":0,"index":4547},"children":[],"decl_id":null,"docs":" All lines contained in image header are put here. Ordering of lines is preserved.\n Lines in the form \"key=value\" are represented as (\"key\", \"value\").\n All other lines are (\"\", \"line\")\n","sig":null,"attributes":[{"value":"/ All lines contained in image header are put here. Ordering of lines is preserved.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":330154,"byte_end":330239,"line_start":723,"line_end":723,"column_start":5,"column_end":90}},{"value":"/ Lines in the form \"key=value\" are represented as (\"key\", \"value\").","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":330244,"byte_end":330314,"line_start":724,"line_end":724,"column_start":5,"column_end":75}},{"value":"/ All other lines are (\"\", \"line\")","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":330319,"byte_end":330355,"line_start":725,"line_end":725,"column_start":5,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":1394},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":339473,"byte_end":339486,"line_start":947,"line_end":947,"column_start":8,"column_end":21},"name":"read_raw_file","qualname":"::hdr::decoder::read_raw_file","value":"fn <P> (path: P) -> ::std::io::Result<Vec<Rgb<f32>>>","parent":null,"children":[],"decl_id":null,"docs":" Helper function for reading raw 3-channel f32 images\n","sig":null,"attributes":[{"value":"/ Helper function for reading raw 3-channel f32 images","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":339409,"byte_end":339465,"line_start":946,"line_end":946,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":1412},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/encoder.rs","byte_start":340307,"byte_end":340317,"line_start":8,"line_end":8,"column_start":12,"column_end":22},"name":"HDREncoder","qualname":"::hdr::encoder::HDREncoder","value":"HDREncoder {  }","parent":null,"children":[{"krate":0,"index":1414}],"decl_id":null,"docs":" Radiance HDR encoder\n","sig":null,"attributes":[{"value":"/ Radiance HDR encoder","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/encoder.rs","byte_start":340271,"byte_end":340295,"line_start":7,"line_end":7,"column_start":1,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":1417},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/encoder.rs","byte_start":340409,"byte_end":340412,"line_start":14,"line_end":14,"column_start":12,"column_end":15},"name":"new","qualname":"<HDREncoder<W>>::new","value":"fn (w: W) -> HDREncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates encoder\n","sig":null,"attributes":[{"value":"/ Creates encoder","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/encoder.rs","byte_start":340378,"byte_end":340397,"line_start":13,"line_end":13,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":1418},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/encoder.rs","byte_start":340575,"byte_end":340581,"line_start":20,"line_end":20,"column_start":12,"column_end":18},"name":"encode","qualname":"<HDREncoder<W>>::encode","value":"fn (mut self, data: &[Rgb<f32>], width: usize, height: usize) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes the image ```data```\n that has dimensions ```width``` and ```height```\n","sig":null,"attributes":[{"value":"/ Encodes the image ```data```","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/encoder.rs","byte_start":340474,"byte_end":340506,"line_start":18,"line_end":18,"column_start":5,"column_end":37}},{"value":"/ that has dimensions ```width``` and ```height```","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/encoder.rs","byte_start":340511,"byte_end":340563,"line_start":19,"line_end":19,"column_start":5,"column_end":57}}]},{"kind":"Function","id":{"krate":0,"index":1450},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/encoder.rs","byte_start":348011,"byte_end":348019,"line_start":228,"line_end":228,"column_start":8,"column_end":16},"name":"to_rgbe8","qualname":"::hdr::encoder::to_rgbe8","value":"fn (pix: Rgb<f32>) -> RGBE8Pixel","parent":null,"children":[],"decl_id":null,"docs":" Converts ```Rgb<f32>``` into ```RGBE8Pixel```\n","sig":null,"attributes":[{"value":"/ Converts ```Rgb<f32>``` into ```RGBE8Pixel```","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/encoder.rs","byte_start":347954,"byte_end":348003,"line_start":227,"line_end":227,"column_start":1,"column_end":50}}]},{"kind":"Mod","id":{"krate":0,"index":1454},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/ico/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ico","qualname":"::ico","value":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/ico/mod.rs","parent":null,"children":[{"krate":0,"index":1455},{"krate":0,"index":1456},{"krate":0,"index":1457},{"krate":0,"index":1548}],"decl_id":null,"docs":"  Decoding and Encoding of ICO files","sig":null,"attributes":[{"value":"cfg(feature = \"ico\")","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":8956,"byte_end":8979,"line_start":222,"line_end":222,"column_start":1,"column_end":24}},{"value":"!  Decoding and Encoding of ICO files","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/ico/mod.rs","byte_start":355396,"byte_end":355435,"line_start":1,"line_end":1,"column_start":1,"column_end":40}},{"value":"!","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/ico/mod.rs","byte_start":355436,"byte_end":355439,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"!  A decoder and encoder for ICO (Windows Icon) image container files.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/ico/mod.rs","byte_start":355440,"byte_end":355512,"line_start":3,"line_end":3,"column_start":1,"column_end":73}},{"value":"!","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/ico/mod.rs","byte_start":355513,"byte_end":355516,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"!  # Related Links","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/ico/mod.rs","byte_start":355517,"byte_end":355537,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"!  * <https://msdn.microsoft.com/en-us/library/ms997538.aspx>","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/ico/mod.rs","byte_start":355538,"byte_end":355601,"line_start":6,"line_end":6,"column_start":1,"column_end":64}},{"value":"!  * <https://en.wikipedia.org/wiki/ICO_%28file_format%29>","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/ico/mod.rs","byte_start":355602,"byte_end":355662,"line_start":7,"line_end":7,"column_start":1,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":1498},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/ico/decoder.rs","byte_start":359824,"byte_end":359834,"line_start":105,"line_end":105,"column_start":12,"column_end":22},"name":"IcoDecoder","qualname":"::ico::decoder::IcoDecoder","value":"IcoDecoder {  }","parent":null,"children":[{"krate":0,"index":1500},{"krate":0,"index":1501}],"decl_id":null,"docs":" An ico decoder\n","sig":null,"attributes":[{"value":"/ An ico decoder","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/ico/decoder.rs","byte_start":359794,"byte_end":359812,"line_start":104,"line_end":104,"column_start":1,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":1512},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/ico/decoder.rs","byte_start":360332,"byte_end":360335,"line_start":131,"line_end":131,"column_start":12,"column_end":15},"name":"new","qualname":"<IcoDecoder<R>>::new","value":"fn (mut r: R) -> ImageResult<IcoDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Create a new decoder that decodes from the stream ```r```\n","sig":null,"attributes":[{"value":"/ Create a new decoder that decodes from the stream ```r```","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/ico/decoder.rs","byte_start":360259,"byte_end":360320,"line_start":130,"line_end":130,"column_start":5,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":1531},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/ico/decoder.rs","byte_start":363803,"byte_end":363812,"line_start":248,"line_end":248,"column_start":12,"column_end":21},"name":"IcoReader","qualname":"::ico::decoder::IcoReader","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper struct around a `Cursor<Vec<u8>>`\n","sig":null,"attributes":[{"value":"/ Wrapper struct around a `Cursor<Vec<u8>>`","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/ico/decoder.rs","byte_start":363746,"byte_end":363791,"line_start":247,"line_end":247,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":1562},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/ico/encoder.rs","byte_start":369378,"byte_end":369388,"line_start":18,"line_end":18,"column_start":12,"column_end":22},"name":"ICOEncoder","qualname":"::ico::encoder::ICOEncoder","value":"ICOEncoder {  }","parent":null,"children":[{"krate":0,"index":1564}],"decl_id":null,"docs":" ICO encoder\n","sig":null,"attributes":[{"value":"/ ICO encoder","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/ico/encoder.rs","byte_start":369351,"byte_end":369366,"line_start":17,"line_end":17,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1567},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/ico/encoder.rs","byte_start":369520,"byte_end":369523,"line_start":24,"line_end":24,"column_start":12,"column_end":15},"name":"new","qualname":"<ICOEncoder<W>>::new","value":"fn (w: W) -> ICOEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that writes its output to ```w```.\n","sig":null,"attributes":[{"value":"/ Create a new encoder that writes its output to ```w```.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/ico/encoder.rs","byte_start":369449,"byte_end":369508,"line_start":23,"line_end":23,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1568},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/ico/encoder.rs","byte_start":369821,"byte_end":369827,"line_start":31,"line_end":31,"column_start":12,"column_end":18},"name":"encode","qualname":"<ICOEncoder<W>>::encode","value":"fn (mut self, data: &[u8], width: u32, height: u32, color: ColorType) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes the image ```image``` that has dimensions ```width``` and\n ```height``` and ```ColorType``` ```c```.  The dimensions of the image\n must be between 1 and 256 (inclusive) or an error will be returned.\n","sig":null,"attributes":[{"value":"/ Encodes the image ```image``` that has dimensions ```width``` and","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/ico/encoder.rs","byte_start":369585,"byte_end":369654,"line_start":28,"line_end":28,"column_start":5,"column_end":74}},{"value":"/ ```height``` and ```ColorType``` ```c```.  The dimensions of the image","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/ico/encoder.rs","byte_start":369659,"byte_end":369733,"line_start":29,"line_end":29,"column_start":5,"column_end":79}},{"value":"/ must be between 1 and 256 (inclusive) or an error will be returned.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/ico/encoder.rs","byte_start":369738,"byte_end":369809,"line_start":30,"line_end":30,"column_start":5,"column_end":76}}]},{"kind":"Mod","id":{"krate":0,"index":1578},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/jpeg/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"jpeg","qualname":"::jpeg","value":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/jpeg/mod.rs","parent":null,"children":[{"krate":0,"index":1579},{"krate":0,"index":1580},{"krate":0,"index":1584},{"krate":0,"index":1633},{"krate":0,"index":1776},{"krate":0,"index":1779}],"decl_id":null,"docs":" Decoding and Encoding of JPEG Images","sig":null,"attributes":[{"value":"cfg(feature = \"jpeg\")","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":8993,"byte_end":9017,"line_start":224,"line_end":224,"column_start":1,"column_end":25}},{"value":"! Decoding and Encoding of JPEG Images","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/jpeg/mod.rs","byte_start":372267,"byte_end":372307,"line_start":1,"line_end":1,"column_start":1,"column_end":41}},{"value":"!","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/jpeg/mod.rs","byte_start":372308,"byte_end":372311,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! JPEG (Joint Photographic Experts Group) is an image format that supports lossy compression.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/jpeg/mod.rs","byte_start":372312,"byte_end":372407,"line_start":3,"line_end":3,"column_start":1,"column_end":96}},{"value":"! This module implements the Baseline JPEG standard.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/jpeg/mod.rs","byte_start":372408,"byte_end":372462,"line_start":4,"line_end":4,"column_start":1,"column_end":55}},{"value":"!","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/jpeg/mod.rs","byte_start":372463,"byte_end":372466,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"! # Related Links","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/jpeg/mod.rs","byte_start":372467,"byte_end":372486,"line_start":6,"line_end":6,"column_start":1,"column_end":20}},{"value":"! * <http://www.w3.org/Graphics/JPEG/itu-t81.pdf> - The JPEG specification","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/jpeg/mod.rs","byte_start":372487,"byte_end":372563,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"!","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/jpeg/mod.rs","byte_start":372564,"byte_end":372567,"line_start":8,"line_end":8,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":1602},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/jpeg/decoder.rs","byte_start":373050,"byte_end":373061,"line_start":13,"line_end":13,"column_start":12,"column_end":23},"name":"JpegDecoder","qualname":"::jpeg::decoder::JpegDecoder","value":"JpegDecoder {  }","parent":null,"children":[{"krate":0,"index":1604},{"krate":0,"index":1605}],"decl_id":null,"docs":" JPEG decoder\n","sig":null,"attributes":[{"value":"/ JPEG decoder","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/jpeg/decoder.rs","byte_start":373022,"byte_end":373038,"line_start":12,"line_end":12,"column_start":1,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":1608},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/jpeg/decoder.rs","byte_start":373240,"byte_end":373243,"line_start":20,"line_end":20,"column_start":12,"column_end":15},"name":"new","qualname":"<JpegDecoder<R>>::new","value":"fn (r: R) -> ImageResult<JpegDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Create a new decoder that decodes from the stream ```r```\n","sig":null,"attributes":[{"value":"/ Create a new decoder that decodes from the stream ```r```","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/jpeg/decoder.rs","byte_start":373167,"byte_end":373228,"line_start":19,"line_end":19,"column_start":5,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":1609},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/jpeg/decoder.rs","byte_start":373801,"byte_end":373811,"line_start":39,"line_end":39,"column_start":12,"column_end":22},"name":"JpegReader","qualname":"::jpeg::decoder::JpegReader","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper struct around a `Cursor<Vec<u8>>`\n","sig":null,"attributes":[{"value":"/ Wrapper struct around a `Cursor<Vec<u8>>`","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/jpeg/decoder.rs","byte_start":373744,"byte_end":373789,"line_start":38,"line_end":38,"column_start":1,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4680},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/jpeg/encoder.rs","byte_start":405479,"byte_end":405495,"line_start":280,"line_end":280,"column_start":5,"column_end":21},"name":"PixelAspectRatio","qualname":"::jpeg::encoder::PixelDensityUnit::PixelAspectRatio","value":"PixelDensityUnit::PixelAspectRatio","parent":{"krate":0,"index":4679},"children":[],"decl_id":null,"docs":" Represents the absence of a unit, the values indicate only a\n [pixel aspect ratio](https://en.wikipedia.org/wiki/Pixel_aspect_ratio)\n","sig":null,"attributes":[{"value":"/ Represents the absence of a unit, the values indicate only a","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/jpeg/encoder.rs","byte_start":405331,"byte_end":405395,"line_start":278,"line_end":278,"column_start":5,"column_end":69}},{"value":"/ [pixel aspect ratio](https://en.wikipedia.org/wiki/Pixel_aspect_ratio)","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/jpeg/encoder.rs","byte_start":405400,"byte_end":405474,"line_start":279,"line_end":279,"column_start":5,"column_end":79}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4682},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/jpeg/encoder.rs","byte_start":405536,"byte_end":405542,"line_start":283,"line_end":283,"column_start":5,"column_end":11},"name":"Inches","qualname":"::jpeg::encoder::PixelDensityUnit::Inches","value":"PixelDensityUnit::Inches","parent":{"krate":0,"index":4679},"children":[],"decl_id":null,"docs":" Pixels per inch (2.54 cm)\n","sig":null,"attributes":[{"value":"/ Pixels per inch (2.54 cm)","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/jpeg/encoder.rs","byte_start":405502,"byte_end":405531,"line_start":282,"line_end":282,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4684},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/jpeg/encoder.rs","byte_start":405579,"byte_end":405590,"line_start":286,"line_end":286,"column_start":5,"column_end":16},"name":"Centimeters","qualname":"::jpeg::encoder::PixelDensityUnit::Centimeters","value":"PixelDensityUnit::Centimeters","parent":{"krate":0,"index":4679},"children":[],"decl_id":null,"docs":" Pixels per centimeter\n","sig":null,"attributes":[{"value":"/ Pixels per centimeter","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/jpeg/encoder.rs","byte_start":405549,"byte_end":405574,"line_start":285,"line_end":285,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":4679},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/jpeg/encoder.rs","byte_start":405308,"byte_end":405324,"line_start":277,"line_end":277,"column_start":10,"column_end":26},"name":"PixelDensityUnit","qualname":"::jpeg::encoder::PixelDensityUnit","value":"PixelDensityUnit::{PixelAspectRatio, Inches, Centimeters}","parent":null,"children":[{"krate":0,"index":4680},{"krate":0,"index":4682},{"krate":0,"index":4684}],"decl_id":null,"docs":" Represents a unit in which the density of an image is measured\n","sig":null,"attributes":[{"value":"/ Represents a unit in which the density of an image is measured","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/jpeg/encoder.rs","byte_start":405187,"byte_end":405253,"line_start":275,"line_end":275,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":4697},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/jpeg/encoder.rs","byte_start":405927,"byte_end":405939,"line_start":299,"line_end":299,"column_start":12,"column_end":24},"name":"PixelDensity","qualname":"::jpeg::encoder::PixelDensity","value":"PixelDensity { density, unit }","parent":null,"children":[{"krate":0,"index":4698},{"krate":0,"index":4699}],"decl_id":null,"docs":" Represents the pixel density of an image","sig":null,"attributes":[{"value":"/ Represents the pixel density of an image","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/jpeg/encoder.rs","byte_start":405595,"byte_end":405639,"line_start":289,"line_end":289,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/jpeg/encoder.rs","byte_start":405640,"byte_end":405643,"line_start":290,"line_end":290,"column_start":1,"column_end":4}},{"value":"/ For example, a 300 DPI image is represented by:","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/jpeg/encoder.rs","byte_start":405644,"byte_end":405695,"line_start":291,"line_end":291,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/jpeg/encoder.rs","byte_start":405696,"byte_end":405699,"line_start":292,"line_end":292,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/jpeg/encoder.rs","byte_start":405700,"byte_end":405711,"line_start":293,"line_end":293,"column_start":1,"column_end":12}},{"value":"/ use image::jpeg::*;","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/jpeg/encoder.rs","byte_start":405712,"byte_end":405735,"line_start":294,"line_end":294,"column_start":1,"column_end":24}},{"value":"/ let hdpi = PixelDensity::dpi(300);","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/jpeg/encoder.rs","byte_start":405736,"byte_end":405774,"line_start":295,"line_end":295,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(hdpi, PixelDensity {density: (300,300), unit: PixelDensityUnit::Inches})","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/jpeg/encoder.rs","byte_start":405775,"byte_end":405862,"line_start":296,"line_end":296,"column_start":1,"column_end":88}},{"value":"/ ```","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/jpeg/encoder.rs","byte_start":405863,"byte_end":405870,"line_start":297,"line_end":297,"column_start":1,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":4698},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/jpeg/encoder.rs","byte_start":406002,"byte_end":406009,"line_start":301,"line_end":301,"column_start":9,"column_end":16},"name":"density","qualname":"::jpeg::encoder::PixelDensity::density","value":"(u16, u16)","parent":{"krate":0,"index":4697},"children":[],"decl_id":null,"docs":" A couple of values for (Xdensity, Ydensity)\n","sig":null,"attributes":[{"value":"/ A couple of values for (Xdensity, Ydensity)","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/jpeg/encoder.rs","byte_start":405946,"byte_end":405993,"line_start":300,"line_end":300,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":4699},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/jpeg/encoder.rs","byte_start":406081,"byte_end":406085,"line_start":303,"line_end":303,"column_start":9,"column_end":13},"name":"unit","qualname":"::jpeg::encoder::PixelDensity::unit","value":"jpeg::encoder::PixelDensityUnit","parent":{"krate":0,"index":4697},"children":[],"decl_id":null,"docs":" The unit in which the density is measured\n","sig":null,"attributes":[{"value":"/ The unit in which the density is measured","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/jpeg/encoder.rs","byte_start":406027,"byte_end":406072,"line_start":302,"line_end":302,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1712},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/jpeg/encoder.rs","byte_start":406291,"byte_end":406294,"line_start":310,"line_end":310,"column_start":12,"column_end":15},"name":"dpi","qualname":"<PixelDensity>::dpi","value":"fn (density: u16) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates the most common pixel density type:\n the horizontal and the vertical density are equal,\n and measured in pixels per inch.\n","sig":null,"attributes":[{"value":"/ Creates the most common pixel density type:","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/jpeg/encoder.rs","byte_start":406132,"byte_end":406179,"line_start":307,"line_end":307,"column_start":5,"column_end":52}},{"value":"/ the horizontal and the vertical density are equal,","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/jpeg/encoder.rs","byte_start":406184,"byte_end":406238,"line_start":308,"line_end":308,"column_start":5,"column_end":59}},{"value":"/ and measured in pixels per inch.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/jpeg/encoder.rs","byte_start":406243,"byte_end":406279,"line_start":309,"line_end":309,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":1715},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/jpeg/encoder.rs","byte_start":406745,"byte_end":406756,"line_start":329,"line_end":329,"column_start":12,"column_end":23},"name":"JPEGEncoder","qualname":"::jpeg::encoder::JPEGEncoder","value":"JPEGEncoder {  }","parent":null,"children":[{"krate":0,"index":1718},{"krate":0,"index":1719},{"krate":0,"index":1720},{"krate":0,"index":1721},{"krate":0,"index":1722},{"krate":0,"index":1723},{"krate":0,"index":1724},{"krate":0,"index":1725}],"decl_id":null,"docs":" The representation of a JPEG encoder\n","sig":null,"attributes":[{"value":"/ The representation of a JPEG encoder","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/jpeg/encoder.rs","byte_start":406693,"byte_end":406733,"line_start":328,"line_end":328,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1729},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/jpeg/encoder.rs","byte_start":407146,"byte_end":407149,"line_start":345,"line_end":345,"column_start":12,"column_end":15},"name":"new","qualname":"<JPEGEncoder>::new","value":"fn (w: &mut W) -> JPEGEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that writes its output to ```w```\n","sig":null,"attributes":[{"value":"/ Create a new encoder that writes its output to ```w```","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/jpeg/encoder.rs","byte_start":407076,"byte_end":407134,"line_start":344,"line_end":344,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1730},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/jpeg/encoder.rs","byte_start":407442,"byte_end":407458,"line_start":352,"line_end":352,"column_start":12,"column_end":28},"name":"new_with_quality","qualname":"<JPEGEncoder>::new_with_quality","value":"fn (w: &mut W, quality: u8) -> JPEGEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that writes its output to ```w```, and has\n the quality parameter ```quality``` with a value in the range 1-100\n where 1 is the worst and 100 is the best.\n","sig":null,"attributes":[{"value":"/ Create a new encoder that writes its output to ```w```, and has","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/jpeg/encoder.rs","byte_start":407237,"byte_end":407304,"line_start":349,"line_end":349,"column_start":5,"column_end":72}},{"value":"/ the quality parameter ```quality``` with a value in the range 1-100","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/jpeg/encoder.rs","byte_start":407309,"byte_end":407380,"line_start":350,"line_end":350,"column_start":5,"column_end":76}},{"value":"/ where 1 is the worst and 100 is the best.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/jpeg/encoder.rs","byte_start":407385,"byte_end":407430,"line_start":351,"line_end":351,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1732},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/jpeg/encoder.rs","byte_start":409826,"byte_end":409843,"line_start":424,"line_end":424,"column_start":12,"column_end":29},"name":"set_pixel_density","qualname":"<JPEGEncoder>::set_pixel_density","value":"fn (&mut self, pixel_density: PixelDensity) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set the pixel density of the images the encoder will encode.\n If this method is not called, then a default pixel aspect ratio of 1x1 will be applied,\n and no DPI information will be stored in the image.\n","sig":null,"attributes":[{"value":"/ Set the pixel density of the images the encoder will encode.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/jpeg/encoder.rs","byte_start":409594,"byte_end":409658,"line_start":421,"line_end":421,"column_start":5,"column_end":69}},{"value":"/ If this method is not called, then a default pixel aspect ratio of 1x1 will be applied,","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/jpeg/encoder.rs","byte_start":409663,"byte_end":409754,"line_start":422,"line_end":422,"column_start":5,"column_end":96}},{"value":"/ and no DPI information will be stored in the image.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/jpeg/encoder.rs","byte_start":409759,"byte_end":409814,"line_start":423,"line_end":423,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1733},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/jpeg/encoder.rs","byte_start":410175,"byte_end":410181,"line_start":433,"line_end":433,"column_start":12,"column_end":18},"name":"encode","qualname":"<JPEGEncoder>::encode","value":"fn (&mut self, image: &[u8], width: u32, height: u32, color_type: ColorType) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes the image stored in the raw byte buffer ```image```\n that has dimensions ```width``` and ```height```\n and ```ColorType``` ```c```","sig":null,"attributes":[{"value":"/ Encodes the image stored in the raw byte buffer ```image```","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/jpeg/encoder.rs","byte_start":409941,"byte_end":410004,"line_start":428,"line_end":428,"column_start":5,"column_end":68}},{"value":"/ that has dimensions ```width``` and ```height```","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/jpeg/encoder.rs","byte_start":410009,"byte_end":410061,"line_start":429,"line_end":429,"column_start":5,"column_end":57}},{"value":"/ and ```ColorType``` ```c```","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/jpeg/encoder.rs","byte_start":410066,"byte_end":410097,"line_start":430,"line_end":430,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/jpeg/encoder.rs","byte_start":410102,"byte_end":410105,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ The Image in encoded with subsampling ratio 4:2:2","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/jpeg/encoder.rs","byte_start":410110,"byte_end":410163,"line_start":432,"line_end":432,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1734},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/jpeg/encoder.rs","byte_start":412389,"byte_end":412401,"line_start":485,"line_end":485,"column_start":12,"column_end":24},"name":"encode_image","qualname":"<JPEGEncoder>::encode_image","value":"fn <I> (&mut self, image: &I) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes the given image.","sig":null,"attributes":[{"value":"/ Encodes the given image.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/jpeg/encoder.rs","byte_start":411861,"byte_end":411889,"line_start":476,"line_end":476,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/jpeg/encoder.rs","byte_start":411894,"byte_end":411897,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ As a special feature this does not require the whole image to be present in memory at the","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/jpeg/encoder.rs","byte_start":411902,"byte_end":411995,"line_start":478,"line_end":478,"column_start":5,"column_end":98}},{"value":"/ same time such that it may be computed on the fly, which is why this method exists on this","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/jpeg/encoder.rs","byte_start":412000,"byte_end":412094,"line_start":479,"line_end":479,"column_start":5,"column_end":99}},{"value":"/ encoder but not on others. Instead the encoder will iterate over 8-by-8 blocks of pixels at","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/jpeg/encoder.rs","byte_start":412099,"byte_end":412194,"line_start":480,"line_end":480,"column_start":5,"column_end":100}},{"value":"/ a time, inspecting each pixel exactly once. You can rely on this behaviour when calling","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/jpeg/encoder.rs","byte_start":412199,"byte_end":412290,"line_start":481,"line_end":481,"column_start":5,"column_end":96}},{"value":"/ this method.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/jpeg/encoder.rs","byte_start":412295,"byte_end":412311,"line_start":482,"line_end":482,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/jpeg/encoder.rs","byte_start":412316,"byte_end":412319,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ The Image in encoded with subsampling ratio 4:2:2","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/jpeg/encoder.rs","byte_start":412324,"byte_end":412377,"line_start":484,"line_end":484,"column_start":5,"column_end":58}}]},{"kind":"Mod","id":{"krate":0,"index":1795},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"png","qualname":"::png","value":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","parent":null,"children":[{"krate":0,"index":1796},{"krate":0,"index":1797},{"krate":0,"index":1801},{"krate":0,"index":1802},{"krate":0,"index":1805},{"krate":0,"index":1814},{"krate":0,"index":1818},{"krate":0,"index":1822},{"krate":0,"index":1832},{"krate":0,"index":1837},{"krate":0,"index":1842},{"krate":0,"index":1845},{"krate":0,"index":1849},{"krate":0,"index":1853},{"krate":0,"index":1858},{"krate":0,"index":1859},{"krate":0,"index":1873},{"krate":0,"index":1881},{"krate":0,"index":1887},{"krate":0,"index":1899},{"krate":0,"index":4712},{"krate":0,"index":4736},{"krate":0,"index":4735},{"krate":0,"index":4733},{"krate":0,"index":4730},{"krate":0,"index":4731},{"krate":0,"index":4726},{"krate":0,"index":4727},{"krate":0,"index":4738},{"krate":0,"index":4762},{"krate":0,"index":4761},{"krate":0,"index":4759},{"krate":0,"index":4756},{"krate":0,"index":4757},{"krate":0,"index":4752},{"krate":0,"index":4753},{"krate":0,"index":1904},{"krate":0,"index":1911},{"krate":0,"index":1919},{"krate":0,"index":1922},{"krate":0,"index":1924}],"decl_id":null,"docs":" Decoding and Encoding of PNG Images","sig":null,"attributes":[{"value":"cfg(feature = \"png\")","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":9032,"byte_end":9055,"line_start":226,"line_end":226,"column_start":1,"column_end":24}},{"value":"! Decoding and Encoding of PNG Images","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","byte_start":437722,"byte_end":437761,"line_start":1,"line_end":1,"column_start":1,"column_end":40}},{"value":"!","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","byte_start":437762,"byte_end":437765,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! PNG (Portable Network Graphics) is an image format that supports lossless compression.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","byte_start":437766,"byte_end":437856,"line_start":3,"line_end":3,"column_start":1,"column_end":91}},{"value":"!","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","byte_start":437857,"byte_end":437860,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! # Related Links","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","byte_start":437861,"byte_end":437880,"line_start":5,"line_end":5,"column_start":1,"column_end":20}},{"value":"! * <http://www.w3.org/TR/PNG/> - The PNG Specification","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","byte_start":437881,"byte_end":437938,"line_start":6,"line_end":6,"column_start":1,"column_end":58}},{"value":"!","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","byte_start":437939,"byte_end":437942,"line_start":7,"line_end":7,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":1837},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","byte_start":438695,"byte_end":438704,"line_start":28,"line_end":28,"column_start":12,"column_end":21},"name":"PNGReader","qualname":"::png::PNGReader","value":"PNGReader {  }","parent":null,"children":[{"krate":0,"index":1839},{"krate":0,"index":1840},{"krate":0,"index":1841}],"decl_id":null,"docs":" PNG Reader","sig":null,"attributes":[{"value":"/ PNG Reader","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","byte_start":438505,"byte_end":438519,"line_start":23,"line_end":23,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","byte_start":438520,"byte_end":438523,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ This reader will try to read the png one row at a time,","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","byte_start":438524,"byte_end":438583,"line_start":25,"line_end":25,"column_start":1,"column_end":60}},{"value":"/ however for interlaced png files this is not possible and","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","byte_start":438584,"byte_end":438645,"line_start":26,"line_end":26,"column_start":1,"column_end":62}},{"value":"/ these are therefore read at once.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","byte_start":438646,"byte_end":438683,"line_start":27,"line_end":27,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":1849},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","byte_start":440737,"byte_end":440747,"line_start":99,"line_end":99,"column_start":12,"column_end":22},"name":"PngDecoder","qualname":"::png::PngDecoder","value":"PngDecoder {  }","parent":null,"children":[{"krate":0,"index":1851},{"krate":0,"index":1852}],"decl_id":null,"docs":" PNG decoder\n","sig":null,"attributes":[{"value":"/ PNG decoder","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","byte_start":440710,"byte_end":440725,"line_start":98,"line_end":98,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1855},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","byte_start":440925,"byte_end":440928,"line_start":106,"line_end":106,"column_start":12,"column_end":15},"name":"new","qualname":"<PngDecoder<R>>::new","value":"fn (r: R) -> ImageResult<PngDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder that decodes from the stream ```r```\n","sig":null,"attributes":[{"value":"/ Creates a new decoder that decodes from the stream ```r```","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","byte_start":440851,"byte_end":440913,"line_start":105,"line_end":105,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1856},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","byte_start":444681,"byte_end":444685,"line_start":171,"line_end":171,"column_start":12,"column_end":16},"name":"apng","qualname":"<PngDecoder<R>>::apng","value":"fn (self) -> ApngDecoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Turn this into an iterator over the animation frames.","sig":null,"attributes":[{"value":"/ Turn this into an iterator over the animation frames.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","byte_start":444034,"byte_end":444091,"line_start":161,"line_end":161,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","byte_start":444096,"byte_end":444099,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ Reading the complete animation requires more memory than reading the data from the IDAT","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","byte_start":444104,"byte_end":444195,"line_start":163,"line_end":163,"column_start":5,"column_end":96}},{"value":"/ frame–multiple frame buffers need to be reserved at the same time. We further do not","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","byte_start":444200,"byte_end":444290,"line_start":164,"line_end":164,"column_start":5,"column_end":93}},{"value":"/ support compositing 16-bit colors. In any case this would be lossy as the interface of","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","byte_start":444295,"byte_end":444385,"line_start":165,"line_end":165,"column_start":5,"column_end":95}},{"value":"/ animation decoders does not support 16-bit colors.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","byte_start":444390,"byte_end":444444,"line_start":166,"line_end":166,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","byte_start":444449,"byte_end":444452,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ If something is not supported or a limit is violated then the decoding step that requires","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","byte_start":444457,"byte_end":444550,"line_start":168,"line_end":168,"column_start":5,"column_end":98}},{"value":"/ them will fail and an error will be returned instead of the frame. No further frames will","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","byte_start":444555,"byte_end":444648,"line_start":169,"line_end":169,"column_start":5,"column_end":98}},{"value":"/ be returned.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","byte_start":444653,"byte_end":444669,"line_start":170,"line_end":170,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":1857},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","byte_start":445108,"byte_end":445115,"line_start":181,"line_end":181,"column_start":12,"column_end":19},"name":"is_apng","qualname":"<PngDecoder<R>>::is_apng","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns if the image contains an animation.","sig":null,"attributes":[{"value":"/ Returns if the image contains an animation.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","byte_start":444754,"byte_end":444801,"line_start":175,"line_end":175,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","byte_start":444806,"byte_end":444809,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ Note that the file itself decides if the default image is considered to be part of the","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","byte_start":444814,"byte_end":444904,"line_start":177,"line_end":177,"column_start":5,"column_end":95}},{"value":"/ animation. When it is not the common interpretation is to use it as a thumbnail.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","byte_start":444909,"byte_end":444993,"line_start":178,"line_end":178,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","byte_start":444998,"byte_end":445001,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ If a non-animated image is converted into an `ApngDecoder` then its iterator is empty.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","byte_start":445006,"byte_end":445096,"line_start":180,"line_end":180,"column_start":5,"column_end":95}}]},{"kind":"Struct","id":{"krate":0,"index":1873},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","byte_start":447084,"byte_end":447095,"line_start":242,"line_end":242,"column_start":12,"column_end":23},"name":"ApngDecoder","qualname":"::png::ApngDecoder","value":"ApngDecoder {  }","parent":null,"children":[{"krate":0,"index":1875},{"krate":0,"index":1876},{"krate":0,"index":1877},{"krate":0,"index":1878},{"krate":0,"index":1879},{"krate":0,"index":1880}],"decl_id":null,"docs":" An [`AnimationDecoder`] adapter of [`PngDecoder`].","sig":null,"attributes":[{"value":"/ An [`AnimationDecoder`] adapter of [`PngDecoder`].","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","byte_start":446798,"byte_end":446852,"line_start":235,"line_end":235,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","byte_start":446853,"byte_end":446856,"line_start":236,"line_end":236,"column_start":1,"column_end":4}},{"value":"/ See [`PngDecoder::apng`] for more information.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","byte_start":446857,"byte_end":446907,"line_start":237,"line_end":237,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","byte_start":446908,"byte_end":446911,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ [`AnimationDecoder`]: ../trait.AnimationDecoder.html","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","byte_start":446912,"byte_end":446968,"line_start":239,"line_end":239,"column_start":1,"column_end":57}},{"value":"/ [`PngDecoder`]: struct.PngDecoder.html","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","byte_start":446969,"byte_end":447011,"line_start":240,"line_end":240,"column_start":1,"column_end":43}},{"value":"/ [`PngDecoder::apng`]: struct.PngDecoder.html#method.apng","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","byte_start":447012,"byte_end":447072,"line_start":241,"line_end":241,"column_start":1,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":1899},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","byte_start":454295,"byte_end":454305,"line_start":429,"line_end":429,"column_start":12,"column_end":22},"name":"PNGEncoder","qualname":"::png::PNGEncoder","value":"PNGEncoder {  }","parent":null,"children":[{"krate":0,"index":1901},{"krate":0,"index":1902},{"krate":0,"index":1903}],"decl_id":null,"docs":" PNG encoder\n","sig":null,"attributes":[{"value":"/ PNG encoder","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","byte_start":454268,"byte_end":454283,"line_start":428,"line_end":428,"column_start":1,"column_end":16}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4713},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","byte_start":454570,"byte_end":454577,"line_start":439,"line_end":439,"column_start":5,"column_end":12},"name":"Default","qualname":"::png::CompressionType::Default","value":"CompressionType::Default","parent":{"krate":0,"index":4712},"children":[],"decl_id":null,"docs":" Default compression level\n","sig":null,"attributes":[{"value":"/ Default compression level","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","byte_start":454536,"byte_end":454565,"line_start":438,"line_end":438,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4715},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","byte_start":454617,"byte_end":454621,"line_start":441,"line_end":441,"column_start":5,"column_end":9},"name":"Fast","qualname":"::png::CompressionType::Fast","value":"CompressionType::Fast","parent":{"krate":0,"index":4712},"children":[],"decl_id":null,"docs":" Fast, minimal compression\n","sig":null,"attributes":[{"value":"/ Fast, minimal compression","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","byte_start":454583,"byte_end":454612,"line_start":440,"line_end":440,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4717},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","byte_start":454658,"byte_end":454662,"line_start":443,"line_end":443,"column_start":5,"column_end":9},"name":"Best","qualname":"::png::CompressionType::Best","value":"CompressionType::Best","parent":{"krate":0,"index":4712},"children":[],"decl_id":null,"docs":" High compression level\n","sig":null,"attributes":[{"value":"/ High compression level","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","byte_start":454627,"byte_end":454653,"line_start":442,"line_end":442,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4719},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","byte_start":454703,"byte_end":454710,"line_start":445,"line_end":445,"column_start":5,"column_end":12},"name":"Huffman","qualname":"::png::CompressionType::Huffman","value":"CompressionType::Huffman","parent":{"krate":0,"index":4712},"children":[],"decl_id":null,"docs":" Huffman coding compression\n","sig":null,"attributes":[{"value":"/ Huffman coding compression","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","byte_start":454668,"byte_end":454698,"line_start":444,"line_end":444,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4721},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","byte_start":454756,"byte_end":454759,"line_start":447,"line_end":447,"column_start":5,"column_end":8},"name":"Rle","qualname":"::png::CompressionType::Rle","value":"CompressionType::Rle","parent":{"krate":0,"index":4712},"children":[],"decl_id":null,"docs":" Run-length encoding compression\n","sig":null,"attributes":[{"value":"/ Run-length encoding compression","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","byte_start":454716,"byte_end":454751,"line_start":446,"line_end":446,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4723},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","byte_start":454785,"byte_end":454800,"line_start":450,"line_end":450,"column_start":5,"column_end":20},"name":"__NonExhaustive","qualname":"::png::CompressionType::__NonExhaustive","value":"CompressionType::__NonExhaustive(crate::utils::NonExhaustiveMarker)","parent":{"krate":0,"index":4712},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4712},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","byte_start":454514,"byte_end":454529,"line_start":437,"line_end":437,"column_start":10,"column_end":25},"name":"CompressionType","qualname":"::png::CompressionType","value":"CompressionType::{Default, Fast, Best, Huffman, Rle, __NonExhaustive}","parent":null,"children":[{"krate":0,"index":4713},{"krate":0,"index":4715},{"krate":0,"index":4717},{"krate":0,"index":4719},{"krate":0,"index":4721},{"krate":0,"index":4723}],"decl_id":null,"docs":" Compression level of a PNG encoder. The default setting is `Fast`.\n","sig":null,"attributes":[{"value":"/ Compression level of a PNG encoder. The default setting is `Fast`.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","byte_start":454389,"byte_end":454459,"line_start":435,"line_end":435,"column_start":1,"column_end":71}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4739},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","byte_start":455235,"byte_end":455243,"line_start":461,"line_end":461,"column_start":5,"column_end":13},"name":"NoFilter","qualname":"::png::FilterType::NoFilter","value":"FilterType::NoFilter","parent":{"krate":0,"index":4738},"children":[],"decl_id":null,"docs":" No processing done, best used for low bit depth greyscale or data with a\n low color count\n","sig":null,"attributes":[{"value":"/ No processing done, best used for low bit depth greyscale or data with a","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","byte_start":455130,"byte_end":455206,"line_start":459,"line_end":459,"column_start":5,"column_end":81}},{"value":"/ low color count","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","byte_start":455211,"byte_end":455230,"line_start":460,"line_end":460,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4741},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","byte_start":455310,"byte_end":455313,"line_start":463,"line_end":463,"column_start":5,"column_end":8},"name":"Sub","qualname":"::png::FilterType::Sub","value":"FilterType::Sub","parent":{"krate":0,"index":4738},"children":[],"decl_id":null,"docs":" Filters based on previous pixel in the same scanline\n","sig":null,"attributes":[{"value":"/ Filters based on previous pixel in the same scanline","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","byte_start":455249,"byte_end":455305,"line_start":462,"line_end":462,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4743},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","byte_start":455363,"byte_end":455365,"line_start":465,"line_end":465,"column_start":5,"column_end":7},"name":"Up","qualname":"::png::FilterType::Up","value":"FilterType::Up","parent":{"krate":0,"index":4738},"children":[],"decl_id":null,"docs":" Filters based on the scanline above\n","sig":null,"attributes":[{"value":"/ Filters based on the scanline above","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","byte_start":455319,"byte_end":455358,"line_start":464,"line_end":464,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4745},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","byte_start":455442,"byte_end":455445,"line_start":467,"line_end":467,"column_start":5,"column_end":8},"name":"Avg","qualname":"::png::FilterType::Avg","value":"FilterType::Avg","parent":{"krate":0,"index":4738},"children":[],"decl_id":null,"docs":" Filters based on the average of left and right neighbor pixels\n","sig":null,"attributes":[{"value":"/ Filters based on the average of left and right neighbor pixels","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","byte_start":455371,"byte_end":455437,"line_start":466,"line_end":466,"column_start":5,"column_end":71}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4747},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","byte_start":455532,"byte_end":455537,"line_start":469,"line_end":469,"column_start":5,"column_end":10},"name":"Paeth","qualname":"::png::FilterType::Paeth","value":"FilterType::Paeth","parent":{"krate":0,"index":4738},"children":[],"decl_id":null,"docs":" Algorithm that takes into account the left, upper left, and above pixels\n","sig":null,"attributes":[{"value":"/ Algorithm that takes into account the left, upper left, and above pixels","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","byte_start":455451,"byte_end":455527,"line_start":468,"line_end":468,"column_start":5,"column_end":81}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4749},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","byte_start":455563,"byte_end":455578,"line_start":472,"line_end":472,"column_start":5,"column_end":20},"name":"__NonExhaustive","qualname":"::png::FilterType::__NonExhaustive","value":"FilterType::__NonExhaustive(crate::utils::NonExhaustiveMarker)","parent":{"krate":0,"index":4738},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4738},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","byte_start":455113,"byte_end":455123,"line_start":458,"line_end":458,"column_start":10,"column_end":20},"name":"FilterType","qualname":"::png::FilterType","value":"FilterType::{NoFilter, Sub, Up, Avg, Paeth, __NonExhaustive}","parent":null,"children":[{"krate":0,"index":4739},{"krate":0,"index":4741},{"krate":0,"index":4743},{"krate":0,"index":4745},{"krate":0,"index":4747},{"krate":0,"index":4749}],"decl_id":null,"docs":" Filter algorithms used to process image data to improve compression.","sig":null,"attributes":[{"value":"/ Filter algorithms used to process image data to improve compression.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","byte_start":454840,"byte_end":454912,"line_start":453,"line_end":453,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","byte_start":454913,"byte_end":454916,"line_start":454,"line_end":454,"column_start":1,"column_end":4}},{"value":"/ The default filter is `Sub` though this default may change in the future, most notable if an","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","byte_start":454917,"byte_end":455013,"line_start":455,"line_end":455,"column_start":1,"column_end":97}},{"value":"/ adaptive encoding option is implemented.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","byte_start":455014,"byte_end":455058,"line_start":456,"line_end":456,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1906},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","byte_start":455723,"byte_end":455726,"line_start":477,"line_end":477,"column_start":12,"column_end":15},"name":"new","qualname":"<PNGEncoder<W>>::new","value":"fn (w: W) -> PNGEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that writes its output to ```w```\n","sig":null,"attributes":[{"value":"/ Create a new encoder that writes its output to ```w```","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","byte_start":455653,"byte_end":455711,"line_start":476,"line_end":476,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1907},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","byte_start":456908,"byte_end":456924,"line_start":499,"line_end":499,"column_start":12,"column_end":28},"name":"new_with_quality","qualname":"<PNGEncoder<W>>::new_with_quality","value":"fn (w: W, compression: CompressionType, filter: FilterType) -> PNGEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that writes its output to `w` with `CompressionType` `compression` and\n `FilterType` `filter`.","sig":null,"attributes":[{"value":"/ Create a new encoder that writes its output to `w` with `CompressionType` `compression` and","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","byte_start":455894,"byte_end":455989,"line_start":485,"line_end":485,"column_start":5,"column_end":100}},{"value":"/ `FilterType` `filter`.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","byte_start":455994,"byte_end":456020,"line_start":486,"line_end":486,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","byte_start":456025,"byte_end":456028,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ It is best to view the options as a _hint_ to the implementation on the smallest or fastest","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","byte_start":456033,"byte_end":456128,"line_start":488,"line_end":488,"column_start":5,"column_end":100}},{"value":"/ option for encoding a particular image. That is, using options that map directly to a PNG","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","byte_start":456133,"byte_end":456226,"line_start":489,"line_end":489,"column_start":5,"column_end":98}},{"value":"/ image parameter will use this parameter where possible. But variants that have no direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","byte_start":456231,"byte_end":456323,"line_start":490,"line_end":490,"column_start":5,"column_end":97}},{"value":"/ mapping may be interpreted differently in minor versions. The exact output is expressly","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","byte_start":456328,"byte_end":456419,"line_start":491,"line_end":491,"column_start":5,"column_end":96}},{"value":"/ __not__ part the SemVer stability guarantee.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","byte_start":456424,"byte_end":456472,"line_start":492,"line_end":492,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","byte_start":456477,"byte_end":456480,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ Note that it is not optimal to use a single filter type. It is likely that the library used","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","byte_start":456485,"byte_end":456580,"line_start":494,"line_end":494,"column_start":5,"column_end":100}},{"value":"/ will at some point gain the ability to use adaptive filtering methods per pixel row (or","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","byte_start":456585,"byte_end":456676,"line_start":495,"line_end":495,"column_start":5,"column_end":96}},{"value":"/ even interlaced row). We might make it the new default variant in which case choosing a","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","byte_start":456681,"byte_end":456772,"line_start":496,"line_end":496,"column_start":5,"column_end":96}},{"value":"/ particular filter method likely produces larger images. Be sure to check the release notes","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","byte_start":456777,"byte_end":456871,"line_start":497,"line_end":497,"column_start":5,"column_end":99}},{"value":"/ once in a while.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","byte_start":456876,"byte_end":456896,"line_start":498,"line_end":498,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":1908},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","byte_start":457204,"byte_end":457210,"line_start":508,"line_end":508,"column_start":12,"column_end":18},"name":"encode","qualname":"<PNGEncoder<W>>::encode","value":"fn (self, data: &[u8], width: u32, height: u32, color: ColorType) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes the image `data` that has dimensions `width` and `height` and `ColorType` `c`.\n","sig":null,"attributes":[{"value":"/ Encodes the image `data` that has dimensions `width` and `height` and `ColorType` `c`.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","byte_start":457102,"byte_end":457192,"line_start":507,"line_end":507,"column_start":5,"column_end":95}}]},{"kind":"Mod","id":{"krate":0,"index":1926},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"pnm","qualname":"::pnm","value":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/mod.rs","parent":null,"children":[{"krate":0,"index":1927},{"krate":0,"index":1928},{"krate":0,"index":1929},{"krate":0,"index":1930},{"krate":0,"index":1931},{"krate":0,"index":1937},{"krate":0,"index":1941},{"krate":0,"index":1961},{"krate":0,"index":2127},{"krate":0,"index":2263}],"decl_id":null,"docs":" Decoding of netpbm image formats (pbm, pgm, ppm and pam).","sig":null,"attributes":[{"value":"cfg(feature = \"pnm\")","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":9069,"byte_end":9092,"line_start":228,"line_end":228,"column_start":1,"column_end":24}},{"value":"! Decoding of netpbm image formats (pbm, pgm, ppm and pam).","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/mod.rs","byte_start":463189,"byte_end":463250,"line_start":1,"line_end":1,"column_start":1,"column_end":62}},{"value":"!","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/mod.rs","byte_start":463251,"byte_end":463254,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! The formats pbm, pgm and ppm are fully supported. The pam decoder recognizes the tuple types","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/mod.rs","byte_start":463255,"byte_end":463351,"line_start":3,"line_end":3,"column_start":1,"column_end":97}},{"value":"! `BLACKANDWHITE`, `GRAYSCALE` and `RGB` and explicitely recognizes but rejects their `_ALPHA`","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/mod.rs","byte_start":463352,"byte_end":463448,"line_start":4,"line_end":4,"column_start":1,"column_end":97}},{"value":"! variants for now as alpha color types are unsupported.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/mod.rs","byte_start":463449,"byte_end":463507,"line_start":5,"line_end":5,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":2032},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/decoder.rs","byte_start":480532,"byte_end":480542,"line_start":220,"line_end":220,"column_start":12,"column_end":22},"name":"PnmDecoder","qualname":"::pnm::decoder::PnmDecoder","value":"PnmDecoder {  }","parent":null,"children":[{"krate":0,"index":2034},{"krate":0,"index":2035},{"krate":0,"index":2036}],"decl_id":null,"docs":" PNM decoder\n","sig":null,"attributes":[{"value":"/ PNM decoder","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/decoder.rs","byte_start":480505,"byte_end":480520,"line_start":219,"line_end":219,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2039},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/decoder.rs","byte_start":480732,"byte_end":480735,"line_start":228,"line_end":228,"column_start":12,"column_end":15},"name":"new","qualname":"<PnmDecoder<R>>::new","value":"fn (read: R) -> ImageResult<PnmDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Create a new decoder that decodes from the stream ```read```\n","sig":null,"attributes":[{"value":"/ Create a new decoder that decodes from the stream ```read```","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/decoder.rs","byte_start":480656,"byte_end":480720,"line_start":227,"line_end":227,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":2040},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/decoder.rs","byte_start":481909,"byte_end":481919,"line_start":252,"line_end":252,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<PnmDecoder<R>>::into_inner","value":"fn (self) -> (R, PNMHeader)","parent":null,"children":[],"decl_id":null,"docs":" Extract the reader and header after an image has been read.\n","sig":null,"attributes":[{"value":"/ Extract the reader and header after an image has been read.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/decoder.rs","byte_start":481834,"byte_end":481897,"line_start":251,"line_end":251,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":2067},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/decoder.rs","byte_start":491396,"byte_end":491405,"line_start":514,"line_end":514,"column_start":12,"column_end":21},"name":"PnmReader","qualname":"::pnm::decoder::PnmReader","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper struct around a `Cursor<Vec<u8>>`\n","sig":null,"attributes":[{"value":"/ Wrapper struct around a `Cursor<Vec<u8>>`","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/decoder.rs","byte_start":491339,"byte_end":491384,"line_start":513,"line_end":513,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":2091},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/decoder.rs","byte_start":494997,"byte_end":495004,"line_start":611,"line_end":611,"column_start":12,"column_end":19},"name":"subtype","qualname":"<PnmDecoder<R>>::subtype","value":"fn (&self) -> PNMSubtype","parent":null,"children":[],"decl_id":null,"docs":" Get the pnm subtype, depending on the magic constant contained in the header\n","sig":null,"attributes":[{"value":"/ Get the pnm subtype, depending on the magic constant contained in the header","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/decoder.rs","byte_start":494905,"byte_end":494985,"line_start":610,"line_end":610,"column_start":5,"column_end":85}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4897},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/encoder.rs","byte_start":517482,"byte_end":517484,"line_start":27,"line_end":27,"column_start":5,"column_end":7},"name":"U8","qualname":"::pnm::encoder::FlatSamples::U8","value":"FlatSamples::U8(&'a [u8])","parent":{"krate":0,"index":4895},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4900},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/encoder.rs","byte_start":517500,"byte_end":517503,"line_start":28,"line_end":28,"column_start":5,"column_end":8},"name":"U16","qualname":"::pnm::encoder::FlatSamples::U16","value":"FlatSamples::U16(&'a [u16])","parent":{"krate":0,"index":4895},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4895},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/encoder.rs","byte_start":517460,"byte_end":517471,"line_start":26,"line_end":26,"column_start":10,"column_end":21},"name":"FlatSamples","qualname":"::pnm::encoder::FlatSamples","value":"FlatSamples::{U8, U16}","parent":null,"children":[{"krate":0,"index":4897},{"krate":0,"index":4900}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2168},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/encoder.rs","byte_start":517584,"byte_end":517594,"line_start":32,"line_end":32,"column_start":12,"column_end":22},"name":"PNMEncoder","qualname":"::pnm::encoder::PNMEncoder","value":"PNMEncoder {  }","parent":null,"children":[{"krate":0,"index":2170},{"krate":0,"index":2171}],"decl_id":null,"docs":" Encodes images to any of the `pnm` image formats.\n","sig":null,"attributes":[{"value":"/ Encodes images to any of the `pnm` image formats.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/encoder.rs","byte_start":517519,"byte_end":517572,"line_start":31,"line_end":31,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2206},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/encoder.rs","byte_start":518984,"byte_end":518987,"line_start":87,"line_end":87,"column_start":12,"column_end":15},"name":"new","qualname":"<PNMEncoder<W>>::new","value":"fn (writer: W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create new PNMEncoder from the `writer`.","sig":null,"attributes":[{"value":"/ Create new PNMEncoder from the `writer`.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/encoder.rs","byte_start":518682,"byte_end":518726,"line_start":82,"line_end":82,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/encoder.rs","byte_start":518731,"byte_end":518734,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ The encoded images will have some `pnm` format. If more control over the image type is","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/encoder.rs","byte_start":518739,"byte_end":518829,"line_start":84,"line_end":84,"column_start":5,"column_end":95}},{"value":"/ required, use either one of `with_subtype` or `with_header`. For more information on the","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/encoder.rs","byte_start":518834,"byte_end":518926,"line_start":85,"line_end":85,"column_start":5,"column_end":97}},{"value":"/ behaviour, see `with_dynamic_header`.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/encoder.rs","byte_start":518931,"byte_end":518972,"line_start":86,"line_end":86,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":2207},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/encoder.rs","byte_start":519537,"byte_end":519549,"line_start":101,"line_end":101,"column_start":12,"column_end":24},"name":"with_subtype","qualname":"<PNMEncoder<W>>::with_subtype","value":"fn (self, subtype: PNMSubtype) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Encode a specific pnm subtype image.","sig":null,"attributes":[{"value":"/ Encode a specific pnm subtype image.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/encoder.rs","byte_start":519116,"byte_end":519156,"line_start":94,"line_end":94,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/encoder.rs","byte_start":519161,"byte_end":519164,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ The magic number and encoding type will be chosen as provided while the rest of the header","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/encoder.rs","byte_start":519169,"byte_end":519263,"line_start":96,"line_end":96,"column_start":5,"column_end":99}},{"value":"/ data will be generated dynamically. Trying to encode incompatible images (e.g. encoding an","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/encoder.rs","byte_start":519268,"byte_end":519362,"line_start":97,"line_end":97,"column_start":5,"column_end":99}},{"value":"/ RGB image as Graymap) will result in an error.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/encoder.rs","byte_start":519367,"byte_end":519417,"line_start":98,"line_end":98,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/encoder.rs","byte_start":519422,"byte_end":519425,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ This will overwrite the effect of earlier calls to `with_header` and `with_dynamic_header`.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/encoder.rs","byte_start":519430,"byte_end":519525,"line_start":100,"line_end":100,"column_start":5,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":2208},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/encoder.rs","byte_start":520255,"byte_end":520266,"line_start":117,"line_end":117,"column_start":12,"column_end":23},"name":"with_header","qualname":"<PNMEncoder<W>>::with_header","value":"fn (self, header: PNMHeader) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Enforce the use of a chosen header.","sig":null,"attributes":[{"value":"/ Enforce the use of a chosen header.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/encoder.rs","byte_start":519716,"byte_end":519755,"line_start":108,"line_end":108,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/encoder.rs","byte_start":519760,"byte_end":519763,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ While this option gives the most control over the actual written data, the encoding process","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/encoder.rs","byte_start":519768,"byte_end":519863,"line_start":110,"line_end":110,"column_start":5,"column_end":100}},{"value":"/ will error in case the header data and image parameters do not agree. It is the users","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/encoder.rs","byte_start":519868,"byte_end":519957,"line_start":111,"line_end":111,"column_start":5,"column_end":94}},{"value":"/ obligation to ensure that the width and height are set accordingly, for example.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/encoder.rs","byte_start":519962,"byte_end":520046,"line_start":112,"line_end":112,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/encoder.rs","byte_start":520051,"byte_end":520054,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ Choose this option if you want a lossless decoding/encoding round trip.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/encoder.rs","byte_start":520059,"byte_end":520134,"line_start":114,"line_end":114,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/encoder.rs","byte_start":520139,"byte_end":520142,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ This will overwrite the effect of earlier calls to `with_subtype` and `with_dynamic_header`.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/encoder.rs","byte_start":520147,"byte_end":520243,"line_start":116,"line_end":116,"column_start":5,"column_end":101}}]},{"kind":"Method","id":{"krate":0,"index":2209},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/encoder.rs","byte_start":520837,"byte_end":520856,"line_start":131,"line_end":131,"column_start":12,"column_end":31},"name":"with_dynamic_header","qualname":"<PNMEncoder<W>>::with_dynamic_header","value":"fn (self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create the header dynamically for each image.","sig":null,"attributes":[{"value":"/ Create the header dynamically for each image.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/encoder.rs","byte_start":520429,"byte_end":520478,"line_start":124,"line_end":124,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/encoder.rs","byte_start":520483,"byte_end":520486,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ This is the default option upon creation of the encoder. With this, most images should be","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/encoder.rs","byte_start":520491,"byte_end":520584,"line_start":126,"line_end":126,"column_start":5,"column_end":98}},{"value":"/ encodable but the specific format chosen is out of the users control. The pnm subtype is","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/encoder.rs","byte_start":520589,"byte_end":520681,"line_start":127,"line_end":127,"column_start":5,"column_end":97}},{"value":"/ chosen arbitrarily by the library.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/encoder.rs","byte_start":520686,"byte_end":520724,"line_start":128,"line_end":128,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/encoder.rs","byte_start":520729,"byte_end":520732,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ This will overwrite the effect of earlier calls to `with_subtype` and `with_header`.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/encoder.rs","byte_start":520737,"byte_end":520825,"line_start":130,"line_end":130,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":2210},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/encoder.rs","byte_start":521232,"byte_end":521238,"line_start":142,"line_end":142,"column_start":12,"column_end":18},"name":"encode","qualname":"<PNMEncoder<W>>::encode","value":"fn <'s, S> (&mut self, image: S, width: u32, height: u32, color: ColorType) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encode an image whose samples are represented as `u8`.","sig":null,"attributes":[{"value":"/ Encode an image whose samples are represented as `u8`.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/encoder.rs","byte_start":520993,"byte_end":521051,"line_start":138,"line_end":138,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/encoder.rs","byte_start":521056,"byte_end":521059,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ Some `pnm` subtypes are incompatible with some color options, a chosen header most","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/encoder.rs","byte_start":521064,"byte_end":521150,"line_start":140,"line_end":140,"column_start":5,"column_end":91}},{"value":"/ certainly with any deviation from the original decoded image.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/encoder.rs","byte_start":521155,"byte_end":521220,"line_start":141,"line_end":141,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4909},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/header.rs","byte_start":540285,"byte_end":540291,"line_start":7,"line_end":7,"column_start":5,"column_end":11},"name":"Binary","qualname":"::pnm::header::SampleEncoding::Binary","value":"SampleEncoding::Binary","parent":{"krate":0,"index":4908},"children":[],"decl_id":null,"docs":" Samples are unsigned binary integers in big endian\n","sig":null,"attributes":[{"value":"/ Samples are unsigned binary integers in big endian","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/header.rs","byte_start":540226,"byte_end":540280,"line_start":6,"line_end":6,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4911},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/header.rs","byte_start":540375,"byte_end":540380,"line_start":10,"line_end":10,"column_start":5,"column_end":10},"name":"Ascii","qualname":"::pnm::header::SampleEncoding::Ascii","value":"SampleEncoding::Ascii","parent":{"krate":0,"index":4908},"children":[],"decl_id":null,"docs":" Samples are encoded as decimal ascii strings separated by whitespace\n","sig":null,"attributes":[{"value":"/ Samples are encoded as decimal ascii strings separated by whitespace","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/header.rs","byte_start":540298,"byte_end":540370,"line_start":9,"line_end":9,"column_start":5,"column_end":77}}]},{"kind":"Enum","id":{"krate":0,"index":4908},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/header.rs","byte_start":540205,"byte_end":540219,"line_start":5,"line_end":5,"column_start":10,"column_end":24},"name":"SampleEncoding","qualname":"::pnm::header::SampleEncoding","value":"SampleEncoding::{Binary, Ascii}","parent":null,"children":[{"krate":0,"index":4909},{"krate":0,"index":4911}],"decl_id":null,"docs":" The kind of encoding used to store sample values\n","sig":null,"attributes":[{"value":"/ The kind of encoding used to store sample values","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/header.rs","byte_start":540098,"byte_end":540150,"line_start":3,"line_end":3,"column_start":1,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4925},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/header.rs","byte_start":540533,"byte_end":540539,"line_start":17,"line_end":17,"column_start":5,"column_end":11},"name":"Bitmap","qualname":"::pnm::header::PNMSubtype::Bitmap","value":"PNMSubtype::Bitmap(SampleEncoding)","parent":{"krate":0,"index":4924},"children":[],"decl_id":null,"docs":" Magic numbers P1 and P4\n","sig":null,"attributes":[{"value":"/ Magic numbers P1 and P4","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/header.rs","byte_start":540501,"byte_end":540528,"line_start":16,"line_end":16,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4928},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/header.rs","byte_start":540594,"byte_end":540601,"line_start":20,"line_end":20,"column_start":5,"column_end":12},"name":"Graymap","qualname":"::pnm::header::PNMSubtype::Graymap","value":"PNMSubtype::Graymap(SampleEncoding)","parent":{"krate":0,"index":4924},"children":[],"decl_id":null,"docs":" Magic numbers P2 and P5\n","sig":null,"attributes":[{"value":"/ Magic numbers P2 and P5","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/header.rs","byte_start":540562,"byte_end":540589,"line_start":19,"line_end":19,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4931},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/header.rs","byte_start":540656,"byte_end":540662,"line_start":23,"line_end":23,"column_start":5,"column_end":11},"name":"Pixmap","qualname":"::pnm::header::PNMSubtype::Pixmap","value":"PNMSubtype::Pixmap(SampleEncoding)","parent":{"krate":0,"index":4924},"children":[],"decl_id":null,"docs":" Magic numbers P3 and P6\n","sig":null,"attributes":[{"value":"/ Magic numbers P3 and P6","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/header.rs","byte_start":540624,"byte_end":540651,"line_start":22,"line_end":22,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4934},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/header.rs","byte_start":540709,"byte_end":540721,"line_start":26,"line_end":26,"column_start":5,"column_end":17},"name":"ArbitraryMap","qualname":"::pnm::header::PNMSubtype::ArbitraryMap","value":"PNMSubtype::ArbitraryMap","parent":{"krate":0,"index":4924},"children":[],"decl_id":null,"docs":" Magic number P7\n","sig":null,"attributes":[{"value":"/ Magic number P7","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/header.rs","byte_start":540685,"byte_end":540704,"line_start":25,"line_end":25,"column_start":5,"column_end":24}}]},{"kind":"Enum","id":{"krate":0,"index":4924},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/header.rs","byte_start":540484,"byte_end":540494,"line_start":15,"line_end":15,"column_start":10,"column_end":20},"name":"PNMSubtype","qualname":"::pnm::header::PNMSubtype","value":"PNMSubtype::{Bitmap, Graymap, Pixmap, ArbitraryMap}","parent":null,"children":[{"krate":0,"index":4925},{"krate":0,"index":4928},{"krate":0,"index":4931},{"krate":0,"index":4934}],"decl_id":null,"docs":" Denotes the category of the magic number\n","sig":null,"attributes":[{"value":"/ Denotes the category of the magic number","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/header.rs","byte_start":540385,"byte_end":540429,"line_start":13,"line_end":13,"column_start":1,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":2267},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/header.rs","byte_start":541113,"byte_end":541122,"line_start":35,"line_end":35,"column_start":12,"column_end":21},"name":"PNMHeader","qualname":"::pnm::header::PNMHeader","value":"PNMHeader {  }","parent":null,"children":[{"krate":0,"index":2268},{"krate":0,"index":2269}],"decl_id":null,"docs":" Stores the complete header data of a file.","sig":null,"attributes":[{"value":"/ Stores the complete header data of a file.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/header.rs","byte_start":540726,"byte_end":540772,"line_start":29,"line_end":29,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/header.rs","byte_start":540773,"byte_end":540776,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Internally, provides mechanisms for lossless reencoding. After reading a file with the decoder","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/header.rs","byte_start":540777,"byte_end":540875,"line_start":31,"line_end":31,"column_start":1,"column_end":99}},{"value":"/ it is possible to recover the header and construct an encoder. Using the encoder on the just","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/header.rs","byte_start":540876,"byte_end":540972,"line_start":32,"line_end":32,"column_start":1,"column_end":97}},{"value":"/ loaded image should result in a byte copy of the original file (for single image pnms without","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/header.rs","byte_start":540973,"byte_end":541070,"line_start":33,"line_end":33,"column_start":1,"column_end":98}},{"value":"/ additional trailing data).","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/header.rs","byte_start":541071,"byte_end":541101,"line_start":34,"line_end":34,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":4948},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/header.rs","byte_start":541451,"byte_end":541463,"line_start":49,"line_end":49,"column_start":12,"column_end":24},"name":"BitmapHeader","qualname":"::pnm::header::BitmapHeader","value":"BitmapHeader { encoding, height, width }","parent":null,"children":[{"krate":0,"index":4949},{"krate":0,"index":4950},{"krate":0,"index":4951}],"decl_id":null,"docs":" Header produced by a `pbm` file (\"Portable Bit Map\")\n","sig":null,"attributes":[{"value":"/ Header produced by a `pbm` file (\"Portable Bit Map\")","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/header.rs","byte_start":541353,"byte_end":541409,"line_start":47,"line_end":47,"column_start":1,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":4949},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/header.rs","byte_start":541511,"byte_end":541519,"line_start":51,"line_end":51,"column_start":9,"column_end":17},"name":"encoding","qualname":"::pnm::header::BitmapHeader::encoding","value":"pnm::header::SampleEncoding","parent":{"krate":0,"index":4948},"children":[],"decl_id":null,"docs":" Binary or Ascii encoded file\n","sig":null,"attributes":[{"value":"/ Binary or Ascii encoded file","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/header.rs","byte_start":541470,"byte_end":541502,"line_start":50,"line_end":50,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":4950},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/header.rs","byte_start":541579,"byte_end":541585,"line_start":54,"line_end":54,"column_start":9,"column_end":15},"name":"height","qualname":"::pnm::header::BitmapHeader::height","value":"u32","parent":{"krate":0,"index":4948},"children":[],"decl_id":null,"docs":" Height of the image file\n","sig":null,"attributes":[{"value":"/ Height of the image file","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/header.rs","byte_start":541542,"byte_end":541570,"line_start":53,"line_end":53,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":4951},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/header.rs","byte_start":541633,"byte_end":541638,"line_start":57,"line_end":57,"column_start":9,"column_end":14},"name":"width","qualname":"::pnm::header::BitmapHeader::width","value":"u32","parent":{"krate":0,"index":4948},"children":[],"decl_id":null,"docs":" Width of the image file\n","sig":null,"attributes":[{"value":"/ Width of the image file","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/header.rs","byte_start":541597,"byte_end":541624,"line_start":56,"line_end":56,"column_start":5,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":4957},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/header.rs","byte_start":541747,"byte_end":541760,"line_start":62,"line_end":62,"column_start":12,"column_end":25},"name":"GraymapHeader","qualname":"::pnm::header::GraymapHeader","value":"GraymapHeader { encoding, height, width, maxwhite }","parent":null,"children":[{"krate":0,"index":4958},{"krate":0,"index":4959},{"krate":0,"index":4960},{"krate":0,"index":4961}],"decl_id":null,"docs":" Header produced by a `pgm` file (\"Portable Gray Map\")\n","sig":null,"attributes":[{"value":"/ Header produced by a `pgm` file (\"Portable Gray Map\")","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/header.rs","byte_start":541648,"byte_end":541705,"line_start":60,"line_end":60,"column_start":1,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":4958},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/header.rs","byte_start":541808,"byte_end":541816,"line_start":64,"line_end":64,"column_start":9,"column_end":17},"name":"encoding","qualname":"::pnm::header::GraymapHeader::encoding","value":"pnm::header::SampleEncoding","parent":{"krate":0,"index":4957},"children":[],"decl_id":null,"docs":" Binary or Ascii encoded file\n","sig":null,"attributes":[{"value":"/ Binary or Ascii encoded file","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/header.rs","byte_start":541767,"byte_end":541799,"line_start":63,"line_end":63,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":4959},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/header.rs","byte_start":541876,"byte_end":541882,"line_start":67,"line_end":67,"column_start":9,"column_end":15},"name":"height","qualname":"::pnm::header::GraymapHeader::height","value":"u32","parent":{"krate":0,"index":4957},"children":[],"decl_id":null,"docs":" Height of the image file\n","sig":null,"attributes":[{"value":"/ Height of the image file","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/header.rs","byte_start":541839,"byte_end":541867,"line_start":66,"line_end":66,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":4960},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/header.rs","byte_start":541930,"byte_end":541935,"line_start":70,"line_end":70,"column_start":9,"column_end":14},"name":"width","qualname":"::pnm::header::GraymapHeader::width","value":"u32","parent":{"krate":0,"index":4957},"children":[],"decl_id":null,"docs":" Width of the image file\n","sig":null,"attributes":[{"value":"/ Width of the image file","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/header.rs","byte_start":541894,"byte_end":541921,"line_start":69,"line_end":69,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":4961},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/header.rs","byte_start":541997,"byte_end":542005,"line_start":73,"line_end":73,"column_start":9,"column_end":17},"name":"maxwhite","qualname":"::pnm::header::GraymapHeader::maxwhite","value":"u32","parent":{"krate":0,"index":4957},"children":[],"decl_id":null,"docs":" Maximum sample value within the image\n","sig":null,"attributes":[{"value":"/ Maximum sample value within the image","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/header.rs","byte_start":541947,"byte_end":541988,"line_start":72,"line_end":72,"column_start":5,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":4967},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/header.rs","byte_start":542115,"byte_end":542127,"line_start":78,"line_end":78,"column_start":12,"column_end":24},"name":"PixmapHeader","qualname":"::pnm::header::PixmapHeader","value":"PixmapHeader { encoding, height, width, maxval }","parent":null,"children":[{"krate":0,"index":4968},{"krate":0,"index":4969},{"krate":0,"index":4970},{"krate":0,"index":4971}],"decl_id":null,"docs":" Header produced by a `ppm` file (\"Portable Pixel Map\")\n","sig":null,"attributes":[{"value":"/ Header produced by a `ppm` file (\"Portable Pixel Map\")","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/header.rs","byte_start":542015,"byte_end":542073,"line_start":76,"line_end":76,"column_start":1,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":4968},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/header.rs","byte_start":542175,"byte_end":542183,"line_start":80,"line_end":80,"column_start":9,"column_end":17},"name":"encoding","qualname":"::pnm::header::PixmapHeader::encoding","value":"pnm::header::SampleEncoding","parent":{"krate":0,"index":4967},"children":[],"decl_id":null,"docs":" Binary or Ascii encoded file\n","sig":null,"attributes":[{"value":"/ Binary or Ascii encoded file","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/header.rs","byte_start":542134,"byte_end":542166,"line_start":79,"line_end":79,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":4969},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/header.rs","byte_start":542243,"byte_end":542249,"line_start":83,"line_end":83,"column_start":9,"column_end":15},"name":"height","qualname":"::pnm::header::PixmapHeader::height","value":"u32","parent":{"krate":0,"index":4967},"children":[],"decl_id":null,"docs":" Height of the image file\n","sig":null,"attributes":[{"value":"/ Height of the image file","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/header.rs","byte_start":542206,"byte_end":542234,"line_start":82,"line_end":82,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":4970},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/header.rs","byte_start":542297,"byte_end":542302,"line_start":86,"line_end":86,"column_start":9,"column_end":14},"name":"width","qualname":"::pnm::header::PixmapHeader::width","value":"u32","parent":{"krate":0,"index":4967},"children":[],"decl_id":null,"docs":" Width of the image file\n","sig":null,"attributes":[{"value":"/ Width of the image file","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/header.rs","byte_start":542261,"byte_end":542288,"line_start":85,"line_end":85,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":4971},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/header.rs","byte_start":542364,"byte_end":542370,"line_start":89,"line_end":89,"column_start":9,"column_end":15},"name":"maxval","qualname":"::pnm::header::PixmapHeader::maxval","value":"u32","parent":{"krate":0,"index":4967},"children":[],"decl_id":null,"docs":" Maximum sample value within the image\n","sig":null,"attributes":[{"value":"/ Maximum sample value within the image","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/header.rs","byte_start":542314,"byte_end":542355,"line_start":88,"line_end":88,"column_start":5,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":4977},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/header.rs","byte_start":542478,"byte_end":542493,"line_start":94,"line_end":94,"column_start":12,"column_end":27},"name":"ArbitraryHeader","qualname":"::pnm::header::ArbitraryHeader","value":"ArbitraryHeader { height, width, depth, maxval, tupltype }","parent":null,"children":[{"krate":0,"index":4978},{"krate":0,"index":4979},{"krate":0,"index":4980},{"krate":0,"index":4981},{"krate":0,"index":4982}],"decl_id":null,"docs":" Header produced by a `pam` file (\"Portable Arbitrary Map\")\n","sig":null,"attributes":[{"value":"/ Header produced by a `pam` file (\"Portable Arbitrary Map\")","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/header.rs","byte_start":542380,"byte_end":542442,"line_start":92,"line_end":92,"column_start":1,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":4978},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/header.rs","byte_start":542537,"byte_end":542543,"line_start":96,"line_end":96,"column_start":9,"column_end":15},"name":"height","qualname":"::pnm::header::ArbitraryHeader::height","value":"u32","parent":{"krate":0,"index":4977},"children":[],"decl_id":null,"docs":" Height of the image file\n","sig":null,"attributes":[{"value":"/ Height of the image file","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/header.rs","byte_start":542500,"byte_end":542528,"line_start":95,"line_end":95,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":4979},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/header.rs","byte_start":542591,"byte_end":542596,"line_start":99,"line_end":99,"column_start":9,"column_end":14},"name":"width","qualname":"::pnm::header::ArbitraryHeader::width","value":"u32","parent":{"krate":0,"index":4977},"children":[],"decl_id":null,"docs":" Width of the image file\n","sig":null,"attributes":[{"value":"/ Width of the image file","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/header.rs","byte_start":542555,"byte_end":542582,"line_start":98,"line_end":98,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":4980},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/header.rs","byte_start":542645,"byte_end":542650,"line_start":102,"line_end":102,"column_start":9,"column_end":14},"name":"depth","qualname":"::pnm::header::ArbitraryHeader::depth","value":"u32","parent":{"krate":0,"index":4977},"children":[],"decl_id":null,"docs":" Number of color channels\n","sig":null,"attributes":[{"value":"/ Number of color channels","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/header.rs","byte_start":542608,"byte_end":542636,"line_start":101,"line_end":101,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":4981},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/header.rs","byte_start":542712,"byte_end":542718,"line_start":105,"line_end":105,"column_start":9,"column_end":15},"name":"maxval","qualname":"::pnm::header::ArbitraryHeader::maxval","value":"u32","parent":{"krate":0,"index":4977},"children":[],"decl_id":null,"docs":" Maximum sample value within the image\n","sig":null,"attributes":[{"value":"/ Maximum sample value within the image","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/header.rs","byte_start":542662,"byte_end":542703,"line_start":104,"line_end":104,"column_start":5,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":4982},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/header.rs","byte_start":542779,"byte_end":542787,"line_start":108,"line_end":108,"column_start":9,"column_end":17},"name":"tupltype","qualname":"::pnm::header::ArbitraryHeader::tupltype","value":"std::option::Option<pnm::header::ArbitraryTuplType>","parent":{"krate":0,"index":4977},"children":[],"decl_id":null,"docs":" Color interpretation of image pixels\n","sig":null,"attributes":[{"value":"/ Color interpretation of image pixels","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/header.rs","byte_start":542730,"byte_end":542770,"line_start":107,"line_end":107,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4988},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/header.rs","byte_start":542990,"byte_end":543003,"line_start":115,"line_end":115,"column_start":5,"column_end":18},"name":"BlackAndWhite","qualname":"::pnm::header::ArbitraryTuplType::BlackAndWhite","value":"ArbitraryTuplType::BlackAndWhite","parent":{"krate":0,"index":4987},"children":[],"decl_id":null,"docs":" Pixels are either black (0) or white (1)\n","sig":null,"attributes":[{"value":"/ Pixels are either black (0) or white (1)","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/header.rs","byte_start":542941,"byte_end":542985,"line_start":114,"line_end":114,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4990},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/header.rs","byte_start":543086,"byte_end":543104,"line_start":118,"line_end":118,"column_start":5,"column_end":23},"name":"BlackAndWhiteAlpha","qualname":"::pnm::header::ArbitraryTuplType::BlackAndWhiteAlpha","value":"ArbitraryTuplType::BlackAndWhiteAlpha","parent":{"krate":0,"index":4987},"children":[],"decl_id":null,"docs":" Pixels are either black (0) or white (1) and a second alpha channel\n","sig":null,"attributes":[{"value":"/ Pixels are either black (0) or white (1) and a second alpha channel","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/header.rs","byte_start":543010,"byte_end":543081,"line_start":117,"line_end":117,"column_start":5,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4992},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/header.rs","byte_start":543156,"byte_end":543165,"line_start":121,"line_end":121,"column_start":5,"column_end":14},"name":"Grayscale","qualname":"::pnm::header::ArbitraryTuplType::Grayscale","value":"ArbitraryTuplType::Grayscale","parent":{"krate":0,"index":4987},"children":[],"decl_id":null,"docs":" Pixels represent the amount of white\n","sig":null,"attributes":[{"value":"/ Pixels represent the amount of white","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/header.rs","byte_start":543111,"byte_end":543151,"line_start":120,"line_end":120,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4994},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/header.rs","byte_start":543223,"byte_end":543237,"line_start":124,"line_end":124,"column_start":5,"column_end":19},"name":"GrayscaleAlpha","qualname":"::pnm::header::ArbitraryTuplType::GrayscaleAlpha","value":"ArbitraryTuplType::GrayscaleAlpha","parent":{"krate":0,"index":4987},"children":[],"decl_id":null,"docs":" Grayscale with an additional alpha channel\n","sig":null,"attributes":[{"value":"/ Grayscale with an additional alpha channel","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/header.rs","byte_start":543172,"byte_end":543218,"line_start":123,"line_end":123,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4996},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/header.rs","byte_start":543285,"byte_end":543288,"line_start":127,"line_end":127,"column_start":5,"column_end":8},"name":"RGB","qualname":"::pnm::header::ArbitraryTuplType::RGB","value":"ArbitraryTuplType::RGB","parent":{"krate":0,"index":4987},"children":[],"decl_id":null,"docs":" Three channels: Red, Green, Blue\n","sig":null,"attributes":[{"value":"/ Three channels: Red, Green, Blue","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/header.rs","byte_start":543244,"byte_end":543280,"line_start":126,"line_end":126,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4998},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/header.rs","byte_start":543342,"byte_end":543350,"line_start":130,"line_end":130,"column_start":5,"column_end":13},"name":"RGBAlpha","qualname":"::pnm::header::ArbitraryTuplType::RGBAlpha","value":"ArbitraryTuplType::RGBAlpha","parent":{"krate":0,"index":4987},"children":[],"decl_id":null,"docs":" Four channels: Red, Green, Blue, Alpha\n","sig":null,"attributes":[{"value":"/ Four channels: Red, Green, Blue, Alpha","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/header.rs","byte_start":543295,"byte_end":543337,"line_start":129,"line_end":129,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5000},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/header.rs","byte_start":543407,"byte_end":543413,"line_start":133,"line_end":133,"column_start":5,"column_end":11},"name":"Custom","qualname":"::pnm::header::ArbitraryTuplType::Custom","value":"ArbitraryTuplType::Custom(String)","parent":{"krate":0,"index":4987},"children":[],"decl_id":null,"docs":" An image format which is not standardized\n","sig":null,"attributes":[{"value":"/ An image format which is not standardized","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/header.rs","byte_start":543357,"byte_end":543402,"line_start":132,"line_end":132,"column_start":5,"column_end":50}}]},{"kind":"Enum","id":{"krate":0,"index":4987},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/header.rs","byte_start":542917,"byte_end":542934,"line_start":113,"line_end":113,"column_start":10,"column_end":27},"name":"ArbitraryTuplType","qualname":"::pnm::header::ArbitraryTuplType","value":"ArbitraryTuplType::{BlackAndWhite, BlackAndWhiteAlpha, Grayscale, GrayscaleAlpha, RGB, RGBAlpha, Custom}","parent":null,"children":[{"krate":0,"index":4988},{"krate":0,"index":4990},{"krate":0,"index":4992},{"krate":0,"index":4994},{"krate":0,"index":4996},{"krate":0,"index":4998},{"krate":0,"index":5000}],"decl_id":null,"docs":" Standardized tuple type specifiers in the header of a `pam`.\n","sig":null,"attributes":[{"value":"/ Standardized tuple type specifiers in the header of a `pam`.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/header.rs","byte_start":542819,"byte_end":542883,"line_start":111,"line_end":111,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":2286},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/header.rs","byte_start":544063,"byte_end":544077,"line_start":152,"line_end":152,"column_start":12,"column_end":26},"name":"magic_constant","qualname":"<PNMSubtype>::magic_constant","value":"fn (self) -> &'static [u8; 2]","parent":null,"children":[],"decl_id":null,"docs":" Get the two magic constant bytes corresponding to this format subtype.\n","sig":null,"attributes":[{"value":"/ Get the two magic constant bytes corresponding to this format subtype.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/header.rs","byte_start":543977,"byte_end":544051,"line_start":151,"line_end":151,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":2288},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/header.rs","byte_start":544656,"byte_end":544671,"line_start":165,"line_end":165,"column_start":12,"column_end":27},"name":"sample_encoding","qualname":"<PNMSubtype>::sample_encoding","value":"fn (self) -> SampleEncoding","parent":null,"children":[],"decl_id":null,"docs":" Whether samples are stored as binary or as decimal ascii\n","sig":null,"attributes":[{"value":"/ Whether samples are stored as binary or as decimal ascii","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/header.rs","byte_start":544584,"byte_end":544644,"line_start":164,"line_end":164,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":2290},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/header.rs","byte_start":545034,"byte_end":545041,"line_start":177,"line_end":177,"column_start":12,"column_end":19},"name":"subtype","qualname":"<PNMHeader>::subtype","value":"fn (&self) -> PNMSubtype","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the format subtype from which the header was created.\n","sig":null,"attributes":[{"value":"/ Retrieve the format subtype from which the header was created.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/header.rs","byte_start":544956,"byte_end":545022,"line_start":176,"line_end":176,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":2291},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/header.rs","byte_start":545556,"byte_end":545561,"line_start":187,"line_end":187,"column_start":12,"column_end":17},"name":"width","qualname":"<PNMHeader>::width","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The width of the image this header is for.\n","sig":null,"attributes":[{"value":"/ The width of the image this header is for.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/header.rs","byte_start":545498,"byte_end":545544,"line_start":186,"line_end":186,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2292},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/header.rs","byte_start":545979,"byte_end":545985,"line_start":197,"line_end":197,"column_start":12,"column_end":18},"name":"height","qualname":"<PNMHeader>::height","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The height of the image this header is for.\n","sig":null,"attributes":[{"value":"/ The height of the image this header is for.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/header.rs","byte_start":545920,"byte_end":545967,"line_start":196,"line_end":196,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2293},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/header.rs","byte_start":546443,"byte_end":546457,"line_start":207,"line_end":207,"column_start":12,"column_end":26},"name":"maximal_sample","qualname":"<PNMHeader>::maximal_sample","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The biggest value a sample can have. In other words, the colour resolution.\n","sig":null,"attributes":[{"value":"/ The biggest value a sample can have. In other words, the colour resolution.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/header.rs","byte_start":546352,"byte_end":546431,"line_start":206,"line_end":206,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":2294},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/header.rs","byte_start":546875,"byte_end":546884,"line_start":217,"line_end":217,"column_start":12,"column_end":21},"name":"as_bitmap","qualname":"<PNMHeader>::as_bitmap","value":"fn (&self) -> Option<&BitmapHeader>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the underlying bitmap header if any\n","sig":null,"attributes":[{"value":"/ Retrieve the underlying bitmap header if any","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/header.rs","byte_start":546815,"byte_end":546863,"line_start":216,"line_end":216,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":2295},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/header.rs","byte_start":547115,"byte_end":547125,"line_start":225,"line_end":225,"column_start":12,"column_end":22},"name":"as_graymap","qualname":"<PNMHeader>::as_graymap","value":"fn (&self) -> Option<&GraymapHeader>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the underlying graymap header if any\n","sig":null,"attributes":[{"value":"/ Retrieve the underlying graymap header if any","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/header.rs","byte_start":547054,"byte_end":547103,"line_start":224,"line_end":224,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2296},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/header.rs","byte_start":547359,"byte_end":547368,"line_start":233,"line_end":233,"column_start":12,"column_end":21},"name":"as_pixmap","qualname":"<PNMHeader>::as_pixmap","value":"fn (&self) -> Option<&PixmapHeader>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the underlying pixmap header if any\n","sig":null,"attributes":[{"value":"/ Retrieve the underlying pixmap header if any","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/header.rs","byte_start":547299,"byte_end":547347,"line_start":232,"line_end":232,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":2297},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/header.rs","byte_start":547601,"byte_end":547613,"line_start":241,"line_end":241,"column_start":12,"column_end":24},"name":"as_arbitrary","qualname":"<PNMHeader>::as_arbitrary","value":"fn (&self) -> Option<&ArbitraryHeader>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the underlying arbitrary header if any\n","sig":null,"attributes":[{"value":"/ Retrieve the underlying arbitrary header if any","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/header.rs","byte_start":547538,"byte_end":547589,"line_start":240,"line_end":240,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2298},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/header.rs","byte_start":547853,"byte_end":547858,"line_start":249,"line_end":249,"column_start":12,"column_end":17},"name":"write","qualname":"<PNMHeader>::write","value":"fn (&self, writer: &mut dyn io::Write) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Write the header back into a binary stream\n","sig":null,"attributes":[{"value":"/ Write the header back into a binary stream","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/header.rs","byte_start":547795,"byte_end":547841,"line_start":248,"line_end":248,"column_start":5,"column_end":51}}]},{"kind":"Mod","id":{"krate":0,"index":2314},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/tga/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"tga","qualname":"::tga","value":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/tga/mod.rs","parent":null,"children":[{"krate":0,"index":2315},{"krate":0,"index":2316},{"krate":0,"index":2317},{"krate":0,"index":2397},{"krate":0,"index":2428}],"decl_id":null,"docs":" Decoding of TGA Images","sig":null,"attributes":[{"value":"cfg(feature = \"tga\")","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":9106,"byte_end":9129,"line_start":230,"line_end":230,"column_start":1,"column_end":24}},{"value":"! Decoding of TGA Images","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/tga/mod.rs","byte_start":551024,"byte_end":551050,"line_start":1,"line_end":1,"column_start":1,"column_end":27}},{"value":"!","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/tga/mod.rs","byte_start":551051,"byte_end":551054,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! # Related Links","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/tga/mod.rs","byte_start":551055,"byte_end":551074,"line_start":3,"line_end":3,"column_start":1,"column_end":20}},{"value":"! <http://googlesites.inequation.org/tgautilities>","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/tga/mod.rs","byte_start":551075,"byte_end":551127,"line_start":4,"line_end":4,"column_start":1,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":2350},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/tga/decoder.rs","byte_start":552651,"byte_end":552661,"line_start":47,"line_end":47,"column_start":12,"column_end":22},"name":"TgaDecoder","qualname":"::tga::decoder::TgaDecoder","value":"TgaDecoder {  }","parent":null,"children":[{"krate":0,"index":2352},{"krate":0,"index":2353},{"krate":0,"index":2354},{"krate":0,"index":2355},{"krate":0,"index":2356},{"krate":0,"index":2357},{"krate":0,"index":2358},{"krate":0,"index":2359},{"krate":0,"index":2360},{"krate":0,"index":2361},{"krate":0,"index":2362}],"decl_id":null,"docs":" The representation of a TGA decoder\n","sig":null,"attributes":[{"value":"/ The representation of a TGA decoder","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/tga/decoder.rs","byte_start":552600,"byte_end":552639,"line_start":46,"line_end":46,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2365},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/tga/decoder.rs","byte_start":553087,"byte_end":553090,"line_start":68,"line_end":68,"column_start":12,"column_end":15},"name":"new","qualname":"<TgaDecoder<R>>::new","value":"fn (r: R) -> ImageResult<TgaDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Create a new decoder that decodes from the stream `r`\n","sig":null,"attributes":[{"value":"/ Create a new decoder that decodes from the stream `r`","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/tga/decoder.rs","byte_start":553018,"byte_end":553075,"line_start":67,"line_end":67,"column_start":5,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":2389},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/tga/decoder.rs","byte_start":565573,"byte_end":565582,"line_start":420,"line_end":420,"column_start":12,"column_end":21},"name":"TGAReader","qualname":"::tga::decoder::TGAReader","value":"TGAReader {  }","parent":null,"children":[{"krate":0,"index":2391},{"krate":0,"index":2392}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2416},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/tga/encoder.rs","byte_start":566921,"byte_end":566931,"line_start":35,"line_end":35,"column_start":12,"column_end":22},"name":"TgaEncoder","qualname":"::tga::encoder::TgaEncoder","value":"TgaEncoder {  }","parent":null,"children":[{"krate":0,"index":2418}],"decl_id":null,"docs":" TGA encoder.\n","sig":null,"attributes":[{"value":"/ TGA encoder.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/tga/encoder.rs","byte_start":566893,"byte_end":566909,"line_start":34,"line_end":34,"column_start":1,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":2421},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/tga/encoder.rs","byte_start":567068,"byte_end":567071,"line_start":41,"line_end":41,"column_start":12,"column_end":15},"name":"new","qualname":"<TgaEncoder<W>>::new","value":"fn (w: W) -> TgaEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that writes its output to ```w```.\n","sig":null,"attributes":[{"value":"/ Create a new encoder that writes its output to ```w```.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/tga/encoder.rs","byte_start":566997,"byte_end":567056,"line_start":40,"line_end":40,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":2422},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/tga/encoder.rs","byte_start":567401,"byte_end":567407,"line_start":50,"line_end":50,"column_start":12,"column_end":18},"name":"encode","qualname":"<TgaEncoder<W>>::encode","value":"fn (mut self, buf: &[u8], width: u32, height: u32, color_type: ColorType) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes the image ```buf``` that has dimensions ```width```\n and ```height``` and ```ColorType``` ```color_type```.","sig":null,"attributes":[{"value":"/ Encodes the image ```buf``` that has dimensions ```width```","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/tga/encoder.rs","byte_start":567141,"byte_end":567204,"line_start":45,"line_end":45,"column_start":5,"column_end":68}},{"value":"/ and ```height``` and ```ColorType``` ```color_type```.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/tga/encoder.rs","byte_start":567209,"byte_end":567267,"line_start":46,"line_end":46,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/tga/encoder.rs","byte_start":567272,"byte_end":567275,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ The dimensions of the image must be between 0 and 65535 (inclusive) or","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/tga/encoder.rs","byte_start":567280,"byte_end":567354,"line_start":48,"line_end":48,"column_start":5,"column_end":79}},{"value":"/ an error will be returned.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/tga/encoder.rs","byte_start":567359,"byte_end":567389,"line_start":49,"line_end":49,"column_start":5,"column_end":35}}]},{"kind":"Mod","id":{"krate":0,"index":2479},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/tiff.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"tiff","qualname":"::tiff","value":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/tiff.rs","parent":null,"children":[{"krate":0,"index":2480},{"krate":0,"index":2481},{"krate":0,"index":2482},{"krate":0,"index":2488},{"krate":0,"index":2489},{"krate":0,"index":2490},{"krate":0,"index":2493},{"krate":0,"index":2504},{"krate":0,"index":2508},{"krate":0,"index":2509},{"krate":0,"index":2514},{"krate":0,"index":2517},{"krate":0,"index":2518},{"krate":0,"index":2521},{"krate":0,"index":2526},{"krate":0,"index":2530},{"krate":0,"index":2538},{"krate":0,"index":2541},{"krate":0,"index":2543},{"krate":0,"index":2547}],"decl_id":null,"docs":" Decoding and Encoding of TIFF Images","sig":null,"attributes":[{"value":"cfg(feature = \"tiff\")","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":9143,"byte_end":9167,"line_start":232,"line_end":232,"column_start":1,"column_end":25}},{"value":"! Decoding and Encoding of TIFF Images","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/tiff.rs","byte_start":578705,"byte_end":578745,"line_start":1,"line_end":1,"column_start":1,"column_end":41}},{"value":"!","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/tiff.rs","byte_start":578746,"byte_end":578749,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! TIFF (Tagged Image File Format) is a versatile image format that supports","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/tiff.rs","byte_start":578750,"byte_end":578827,"line_start":3,"line_end":3,"column_start":1,"column_end":78}},{"value":"! lossless and lossy compression.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/tiff.rs","byte_start":578828,"byte_end":578863,"line_start":4,"line_end":4,"column_start":1,"column_end":36}},{"value":"!","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/tiff.rs","byte_start":578864,"byte_end":578867,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"! # Related Links","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/tiff.rs","byte_start":578868,"byte_end":578887,"line_start":6,"line_end":6,"column_start":1,"column_end":20}},{"value":"! * <http://partners.adobe.com/public/developer/tiff/index.html> - The TIFF specification","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/tiff.rs","byte_start":578888,"byte_end":578979,"line_start":7,"line_end":7,"column_start":1,"column_end":92}}]},{"kind":"Struct","id":{"krate":0,"index":2509},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/tiff.rs","byte_start":579481,"byte_end":579492,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"name":"TiffDecoder","qualname":"::tiff::TiffDecoder","value":"TiffDecoder {  }","parent":null,"children":[{"krate":0,"index":2511},{"krate":0,"index":2512},{"krate":0,"index":2513}],"decl_id":null,"docs":" Decoder for TIFF images.\n","sig":null,"attributes":[{"value":"/ Decoder for TIFF images.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/tiff.rs","byte_start":579441,"byte_end":579469,"line_start":24,"line_end":24,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2516},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/tiff.rs","byte_start":579714,"byte_end":579717,"line_start":37,"line_end":37,"column_start":12,"column_end":15},"name":"new","qualname":"<TiffDecoder<R>>::new","value":"fn (r: R) -> Result<TiffDecoder<R>, ImageError>","parent":null,"children":[],"decl_id":null,"docs":" Create a new TiffDecoder.\n","sig":null,"attributes":[{"value":"/ Create a new TiffDecoder.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/tiff.rs","byte_start":579673,"byte_end":579702,"line_start":36,"line_end":36,"column_start":5,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":2521},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/tiff.rs","byte_start":583007,"byte_end":583017,"line_start":114,"line_end":114,"column_start":12,"column_end":22},"name":"TiffReader","qualname":"::tiff::TiffReader","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper struct around a `Cursor<Vec<u8>>`\n","sig":null,"attributes":[{"value":"/ Wrapper struct around a `Cursor<Vec<u8>>`","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/tiff.rs","byte_start":582950,"byte_end":582995,"line_start":113,"line_end":113,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":2538},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/tiff.rs","byte_start":585099,"byte_end":585110,"line_start":180,"line_end":180,"column_start":12,"column_end":23},"name":"TiffEncoder","qualname":"::tiff::TiffEncoder","value":"TiffEncoder {  }","parent":null,"children":[{"krate":0,"index":2540}],"decl_id":null,"docs":" Encoder for tiff images\n","sig":null,"attributes":[{"value":"/ Encoder for tiff images","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/tiff.rs","byte_start":585060,"byte_end":585087,"line_start":179,"line_end":179,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":2545},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/tiff.rs","byte_start":585836,"byte_end":585839,"line_start":200,"line_end":200,"column_start":12,"column_end":15},"name":"new","qualname":"<TiffEncoder<W>>::new","value":"fn (w: W) -> TiffEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that writes its output to `w`\n","sig":null,"attributes":[{"value":"/ Create a new encoder that writes its output to `w`","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/tiff.rs","byte_start":585770,"byte_end":585824,"line_start":199,"line_end":199,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":2546},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/tiff.rs","byte_start":586071,"byte_end":586077,"line_start":207,"line_end":207,"column_start":12,"column_end":18},"name":"encode","qualname":"<TiffEncoder<W>>::encode","value":"fn (self, data: &[u8], width: u32, height: u32, color: ColorType) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes the image `image` that has dimensions `width` and `height` and `ColorType` `c`.","sig":null,"attributes":[{"value":"/ Encodes the image `image` that has dimensions `width` and `height` and `ColorType` `c`.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/tiff.rs","byte_start":585903,"byte_end":585994,"line_start":204,"line_end":204,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/tiff.rs","byte_start":585999,"byte_end":586002,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ 16-bit types assume the buffer is native endian.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/tiff.rs","byte_start":586007,"byte_end":586059,"line_start":206,"line_end":206,"column_start":5,"column_end":57}}]},{"kind":"Mod","id":{"krate":0,"index":2550},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/webp/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"webp","qualname":"::webp","value":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/webp/mod.rs","parent":null,"children":[{"krate":0,"index":2551},{"krate":0,"index":2552},{"krate":0,"index":2623},{"krate":0,"index":2629}],"decl_id":null,"docs":" Decoding of WebP Images\n","sig":null,"attributes":[{"value":"cfg(feature = \"webp\")","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":9182,"byte_end":9206,"line_start":234,"line_end":234,"column_start":1,"column_end":25}},{"value":"! Decoding of WebP Images","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/webp/mod.rs","byte_start":587666,"byte_end":587693,"line_start":1,"line_end":1,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":2590},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/webp/decoder.rs","byte_start":589582,"byte_end":589593,"line_start":53,"line_end":53,"column_start":12,"column_end":23},"name":"WebPDecoder","qualname":"::webp::decoder::WebPDecoder","value":"WebPDecoder {  }","parent":null,"children":[{"krate":0,"index":2592},{"krate":0,"index":2593},{"krate":0,"index":2594}],"decl_id":null,"docs":" WebP Image format decoder. Currently only supportes the luma channel (meaning that decoded\n images will be grayscale).\n","sig":null,"attributes":[{"value":"/ WebP Image format decoder. Currently only supportes the luma channel (meaning that decoded","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/webp/decoder.rs","byte_start":589445,"byte_end":589539,"line_start":51,"line_end":51,"column_start":1,"column_end":95}},{"value":"/ images will be grayscale).","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/webp/decoder.rs","byte_start":589540,"byte_end":589570,"line_start":52,"line_end":52,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":2597},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/webp/decoder.rs","byte_start":589805,"byte_end":589808,"line_start":62,"line_end":62,"column_start":12,"column_end":15},"name":"new","qualname":"<WebPDecoder<R>>::new","value":"fn (r: R) -> ImageResult<WebPDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Create a new WebPDecoder from the Reader ```r```.\n This function takes ownership of the Reader.\n","sig":null,"attributes":[{"value":"/ Create a new WebPDecoder from the Reader ```r```.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/webp/decoder.rs","byte_start":589687,"byte_end":589740,"line_start":60,"line_end":60,"column_start":5,"column_end":58}},{"value":"/ This function takes ownership of the Reader.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/webp/decoder.rs","byte_start":589745,"byte_end":589793,"line_start":61,"line_end":61,"column_start":5,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":2606},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/webp/decoder.rs","byte_start":592485,"byte_end":592495,"line_start":149,"line_end":149,"column_start":12,"column_end":22},"name":"WebpReader","qualname":"::webp::decoder::WebpReader","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper struct around a `Cursor<Vec<u8>>`\n","sig":null,"attributes":[{"value":"/ Wrapper struct around a `Cursor<Vec<u8>>`","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/webp/decoder.rs","byte_start":592428,"byte_end":592473,"line_start":148,"line_end":148,"column_start":1,"column_end":46}}]},{"kind":"Mod","id":{"krate":0,"index":2629},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/webp/vp8.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"vp8","qualname":"::webp::vp8","value":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/webp/vp8.rs","parent":null,"children":[{"krate":0,"index":2630},{"krate":0,"index":2633},{"krate":0,"index":2634},{"krate":0,"index":2638},{"krate":0,"index":2639},{"krate":0,"index":2640},{"krate":0,"index":2646},{"krate":0,"index":2647},{"krate":0,"index":2648},{"krate":0,"index":2649},{"krate":0,"index":2650},{"krate":0,"index":2651},{"krate":0,"index":2652},{"krate":0,"index":2653},{"krate":0,"index":2654},{"krate":0,"index":2655},{"krate":0,"index":2656},{"krate":0,"index":2657},{"krate":0,"index":2658},{"krate":0,"index":2659},{"krate":0,"index":2660},{"krate":0,"index":2661},{"krate":0,"index":2662},{"krate":0,"index":2663},{"krate":0,"index":2664},{"krate":0,"index":5070},{"krate":0,"index":5095},{"krate":0,"index":5094},{"krate":0,"index":5092},{"krate":0,"index":5089},{"krate":0,"index":5090},{"krate":0,"index":5086},{"krate":0,"index":5087},{"krate":0,"index":5097},{"krate":0,"index":5119},{"krate":0,"index":5118},{"krate":0,"index":5116},{"krate":0,"index":5113},{"krate":0,"index":5114},{"krate":0,"index":5110},{"krate":0,"index":5111},{"krate":0,"index":5121},{"krate":0,"index":5161},{"krate":0,"index":5160},{"krate":0,"index":5158},{"krate":0,"index":5155},{"krate":0,"index":5156},{"krate":0,"index":5152},{"krate":0,"index":5153},{"krate":0,"index":2665},{"krate":0,"index":2666},{"krate":0,"index":2668},{"krate":0,"index":2670},{"krate":0,"index":2672},{"krate":0,"index":2674},{"krate":0,"index":2678},{"krate":0,"index":2680},{"krate":0,"index":2682},{"krate":0,"index":2687},{"krate":0,"index":2688},{"krate":0,"index":2689},{"krate":0,"index":2690},{"krate":0,"index":2691},{"krate":0,"index":2692},{"krate":0,"index":2693},{"krate":0,"index":2694},{"krate":0,"index":2695},{"krate":0,"index":2696},{"krate":0,"index":2697},{"krate":0,"index":2698},{"krate":0,"index":2699},{"krate":0,"index":2700},{"krate":0,"index":2701},{"krate":0,"index":2703},{"krate":0,"index":2706},{"krate":0,"index":2708},{"krate":0,"index":5163},{"krate":0,"index":5165},{"krate":0,"index":2710},{"krate":0,"index":5167},{"krate":0,"index":5190},{"krate":0,"index":5187},{"krate":0,"index":5186},{"krate":0,"index":2712},{"krate":0,"index":2714},{"krate":0,"index":2716},{"krate":0,"index":2717},{"krate":0,"index":2723},{"krate":0,"index":5192},{"krate":0,"index":5205},{"krate":0,"index":5201},{"krate":0,"index":5200},{"krate":0,"index":5207},{"krate":0,"index":5222},{"krate":0,"index":5220},{"krate":0,"index":5218},{"krate":0,"index":5224},{"krate":0,"index":5237},{"krate":0,"index":5236},{"krate":0,"index":5234},{"krate":0,"index":2731},{"krate":0,"index":2754},{"krate":0,"index":2781},{"krate":0,"index":2784},{"krate":0,"index":2786},{"krate":0,"index":2788},{"krate":0,"index":2790},{"krate":0,"index":2792},{"krate":0,"index":2794},{"krate":0,"index":2796},{"krate":0,"index":2799},{"krate":0,"index":2800},{"krate":0,"index":2801},{"krate":0,"index":2803},{"krate":0,"index":2805},{"krate":0,"index":2806},{"krate":0,"index":2807},{"krate":0,"index":2808},{"krate":0,"index":2809},{"krate":0,"index":2810},{"krate":0,"index":2811},{"krate":0,"index":2812},{"krate":0,"index":2813},{"krate":0,"index":2814},{"krate":0,"index":2815},{"krate":0,"index":2816},{"krate":0,"index":2817},{"krate":0,"index":2818},{"krate":0,"index":2819},{"krate":0,"index":2820},{"krate":0,"index":2821}],"decl_id":null,"docs":" An implementation of the VP8 Video Codec","sig":null,"attributes":[{"value":"! An implementation of the VP8 Video Codec","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/webp/vp8.rs","byte_start":596090,"byte_end":596134,"line_start":1,"line_end":1,"column_start":1,"column_end":45}},{"value":"!","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/webp/vp8.rs","byte_start":596135,"byte_end":596138,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module contains a partial implementation of the","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/webp/vp8.rs","byte_start":596139,"byte_end":596195,"line_start":3,"line_end":3,"column_start":1,"column_end":57}},{"value":"! VP8 video format as defined in RFC-6386.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/webp/vp8.rs","byte_start":596196,"byte_end":596240,"line_start":4,"line_end":4,"column_start":1,"column_end":45}},{"value":"!","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/webp/vp8.rs","byte_start":596241,"byte_end":596244,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"! It decodes Keyframes only sans Loop Filtering.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/webp/vp8.rs","byte_start":596245,"byte_end":596295,"line_start":6,"line_end":6,"column_start":1,"column_end":51}},{"value":"! VP8 is the underpinning of the WebP image format","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/webp/vp8.rs","byte_start":596296,"byte_end":596348,"line_start":7,"line_end":7,"column_start":1,"column_end":53}},{"value":"!","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/webp/vp8.rs","byte_start":596349,"byte_end":596352,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"! # Related Links","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/webp/vp8.rs","byte_start":596353,"byte_end":596372,"line_start":9,"line_end":9,"column_start":1,"column_end":20}},{"value":"! * [rfc-6386](http://tools.ietf.org/html/rfc6386) - The VP8 Data Format and Decoding Guide","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/webp/vp8.rs","byte_start":596373,"byte_end":596466,"line_start":10,"line_end":10,"column_start":1,"column_end":94}},{"value":"! * [VP8.pdf](http://static.googleusercontent.com/media/research.google.com/en//pubs/archive/37073.pdf) - An overview of","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/webp/vp8.rs","byte_start":596467,"byte_end":596589,"line_start":11,"line_end":11,"column_start":1,"column_end":123}},{"value":"! of the VP8 format","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/webp/vp8.rs","byte_start":596590,"byte_end":596611,"line_start":12,"line_end":12,"column_start":1,"column_end":22}},{"value":"!","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/webp/vp8.rs","byte_start":596612,"byte_end":596615,"line_start":13,"line_end":13,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":5207},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/webp/vp8.rs","byte_start":626821,"byte_end":626826,"line_start":839,"line_end":839,"column_start":12,"column_end":17},"name":"Frame","qualname":"::webp::vp8::Frame","value":"Frame { width, height, ybuf, keyframe, for_display, pixel_type }","parent":null,"children":[{"krate":0,"index":5208},{"krate":0,"index":5209},{"krate":0,"index":5210},{"krate":0,"index":5211},{"krate":0,"index":5212},{"krate":0,"index":5213},{"krate":0,"index":5214},{"krate":0,"index":5215},{"krate":0,"index":5216},{"krate":0,"index":5217}],"decl_id":null,"docs":" A Representation of the last decoded video frame\n","sig":null,"attributes":[{"value":"/ A Representation of the last decoded video frame","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/webp/vp8.rs","byte_start":626724,"byte_end":626776,"line_start":837,"line_end":837,"column_start":1,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":5208},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/webp/vp8.rs","byte_start":626873,"byte_end":626878,"line_start":841,"line_end":841,"column_start":9,"column_end":14},"name":"width","qualname":"::webp::vp8::Frame::width","value":"u16","parent":{"krate":0,"index":5207},"children":[],"decl_id":null,"docs":" The width of the luma plane\n","sig":null,"attributes":[{"value":"/ The width of the luma plane","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/webp/vp8.rs","byte_start":626833,"byte_end":626864,"line_start":840,"line_end":840,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":5209},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/webp/vp8.rs","byte_start":626931,"byte_end":626937,"line_start":844,"line_end":844,"column_start":9,"column_end":15},"name":"height","qualname":"::webp::vp8::Frame::height","value":"u16","parent":{"krate":0,"index":5207},"children":[],"decl_id":null,"docs":" The height of the luma plane\n","sig":null,"attributes":[{"value":"/ The height of the luma plane","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/webp/vp8.rs","byte_start":626890,"byte_end":626922,"line_start":843,"line_end":843,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":5210},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/webp/vp8.rs","byte_start":626989,"byte_end":626993,"line_start":847,"line_end":847,"column_start":9,"column_end":13},"name":"ybuf","qualname":"::webp::vp8::Frame::ybuf","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":5207},"children":[],"decl_id":null,"docs":" The luma plane of the frame\n","sig":null,"attributes":[{"value":"/ The luma plane of the frame","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/webp/vp8.rs","byte_start":626949,"byte_end":626980,"line_start":846,"line_end":846,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":5211},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/webp/vp8.rs","byte_start":627064,"byte_end":627072,"line_start":850,"line_end":850,"column_start":9,"column_end":17},"name":"keyframe","qualname":"::webp::vp8::Frame::keyframe","value":"bool","parent":{"krate":0,"index":5207},"children":[],"decl_id":null,"docs":" Indicates whether this frame is a keyframe\n","sig":null,"attributes":[{"value":"/ Indicates whether this frame is a keyframe","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/webp/vp8.rs","byte_start":627009,"byte_end":627055,"line_start":849,"line_end":849,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":5213},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/webp/vp8.rs","byte_start":627168,"byte_end":627179,"line_start":855,"line_end":855,"column_start":9,"column_end":20},"name":"for_display","qualname":"::webp::vp8::Frame::for_display","value":"bool","parent":{"krate":0,"index":5207},"children":[],"decl_id":null,"docs":" Indicates whether this frame is intended for display\n","sig":null,"attributes":[{"value":"/ Indicates whether this frame is intended for display","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/webp/vp8.rs","byte_start":627103,"byte_end":627159,"line_start":854,"line_end":854,"column_start":5,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":5214},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/webp/vp8.rs","byte_start":627310,"byte_end":627320,"line_start":860,"line_end":860,"column_start":9,"column_end":19},"name":"pixel_type","qualname":"::webp::vp8::Frame::pixel_type","value":"u8","parent":{"krate":0,"index":5207},"children":[],"decl_id":null,"docs":" The pixel type of the frame as defined by Section 9.2\n of the VP8 Specification\n","sig":null,"attributes":[{"value":"/ The pixel type of the frame as defined by Section 9.2","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/webp/vp8.rs","byte_start":627211,"byte_end":627268,"line_start":858,"line_end":858,"column_start":5,"column_end":62}},{"value":"/ of the VP8 Specification","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/webp/vp8.rs","byte_start":627273,"byte_end":627301,"line_start":859,"line_end":859,"column_start":5,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":2731},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/webp/vp8.rs","byte_start":627696,"byte_end":627706,"line_start":888,"line_end":888,"column_start":12,"column_end":22},"name":"Vp8Decoder","qualname":"::webp::vp8::Vp8Decoder","value":"Vp8Decoder {  }","parent":null,"children":[{"krate":0,"index":2733},{"krate":0,"index":2734},{"krate":0,"index":2735},{"krate":0,"index":2736},{"krate":0,"index":2737},{"krate":0,"index":2738},{"krate":0,"index":2739},{"krate":0,"index":2740},{"krate":0,"index":2742},{"krate":0,"index":2744},{"krate":0,"index":2745},{"krate":0,"index":2747},{"krate":0,"index":2748},{"krate":0,"index":2749},{"krate":0,"index":2750},{"krate":0,"index":2751},{"krate":0,"index":2752},{"krate":0,"index":2753}],"decl_id":null,"docs":" VP8 Decoder","sig":null,"attributes":[{"value":"/ VP8 Decoder","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/webp/vp8.rs","byte_start":627638,"byte_end":627653,"line_start":885,"line_end":885,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/webp/vp8.rs","byte_start":627654,"byte_end":627657,"line_start":886,"line_end":886,"column_start":1,"column_end":4}},{"value":"/ Only decodes keyframes","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/webp/vp8.rs","byte_start":627658,"byte_end":627684,"line_start":887,"line_end":887,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":2756},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/webp/vp8.rs","byte_start":628370,"byte_end":628373,"line_start":923,"line_end":923,"column_start":12,"column_end":15},"name":"new","qualname":"<Vp8Decoder<R>>::new","value":"fn (r: R) -> Vp8Decoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Create a new decoder.\n The reader must present a raw vp8 bitstream to the decoder\n","sig":null,"attributes":[{"value":"/ Create a new decoder.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/webp/vp8.rs","byte_start":628266,"byte_end":628291,"line_start":921,"line_end":921,"column_start":5,"column_end":30}},{"value":"/ The reader must present a raw vp8 bitstream to the decoder","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/webp/vp8.rs","byte_start":628296,"byte_end":628358,"line_start":922,"line_end":922,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2779},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/webp/vp8.rs","byte_start":648531,"byte_end":648543,"line_start":1543,"line_end":1543,"column_start":12,"column_end":24},"name":"decode_frame","qualname":"<Vp8Decoder<R>>::decode_frame","value":"fn (&mut self) -> ImageResult<&Frame>","parent":null,"children":[],"decl_id":null,"docs":" Decodes the current frame and returns a reference to it\n","sig":null,"attributes":[{"value":"/ Decodes the current frame and returns a reference to it","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/webp/vp8.rs","byte_start":648460,"byte_end":648519,"line_start":1542,"line_end":1542,"column_start":5,"column_end":64}}]},{"kind":"Mod","id":{"krate":0,"index":2822},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/farbfeld.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"farbfeld","qualname":"::farbfeld","value":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/farbfeld.rs","parent":null,"children":[{"krate":0,"index":2823},{"krate":0,"index":2824},{"krate":0,"index":2825},{"krate":0,"index":2833},{"krate":0,"index":2837},{"krate":0,"index":2838},{"krate":0,"index":2845},{"krate":0,"index":2852},{"krate":0,"index":2859},{"krate":0,"index":2868},{"krate":0,"index":2871},{"krate":0,"index":2876},{"krate":0,"index":2879},{"krate":0,"index":2882},{"krate":0,"index":2885},{"krate":0,"index":2888},{"krate":0,"index":2896},{"krate":0,"index":2904},{"krate":0,"index":2907},{"krate":0,"index":2913}],"decl_id":null,"docs":" Decoding of farbfeld images","sig":null,"attributes":[{"value":"cfg(feature = \"farbfeld\")","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":9221,"byte_end":9249,"line_start":236,"line_end":236,"column_start":1,"column_end":29}},{"value":"! Decoding of farbfeld images","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/farbfeld.rs","byte_start":673320,"byte_end":673351,"line_start":1,"line_end":1,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/farbfeld.rs","byte_start":673352,"byte_end":673355,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! farbfeld is a lossless image format which is easy to parse, pipe and compress.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/farbfeld.rs","byte_start":673356,"byte_end":673438,"line_start":3,"line_end":3,"column_start":1,"column_end":83}},{"value":"!","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/farbfeld.rs","byte_start":673439,"byte_end":673442,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! It has the following format:","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/farbfeld.rs","byte_start":673443,"byte_end":673475,"line_start":5,"line_end":5,"column_start":1,"column_end":33}},{"value":"!","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/farbfeld.rs","byte_start":673476,"byte_end":673479,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"! | Bytes  | Description                                             |","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/farbfeld.rs","byte_start":673480,"byte_end":673552,"line_start":7,"line_end":7,"column_start":1,"column_end":73}},{"value":"! |--------|---------------------------------------------------------|","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/farbfeld.rs","byte_start":673553,"byte_end":673625,"line_start":8,"line_end":8,"column_start":1,"column_end":73}},{"value":"! | 8      | \"farbfeld\" magic value                                  |","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/farbfeld.rs","byte_start":673626,"byte_end":673698,"line_start":9,"line_end":9,"column_start":1,"column_end":73}},{"value":"! | 4      | 32-Bit BE unsigned integer (width)                      |","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/farbfeld.rs","byte_start":673699,"byte_end":673771,"line_start":10,"line_end":10,"column_start":1,"column_end":73}},{"value":"! | 4      | 32-Bit BE unsigned integer (height)                     |","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/farbfeld.rs","byte_start":673772,"byte_end":673844,"line_start":11,"line_end":11,"column_start":1,"column_end":73}},{"value":"! | [2222] | 4⋅16-Bit BE unsigned integers [RGBA] / pixel, row-major |","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/farbfeld.rs","byte_start":673845,"byte_end":673919,"line_start":12,"line_end":12,"column_start":1,"column_end":73}},{"value":"!","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/farbfeld.rs","byte_start":673920,"byte_end":673923,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"! The RGB-data should be sRGB for best interoperability and not alpha-premultiplied.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/farbfeld.rs","byte_start":673924,"byte_end":674010,"line_start":14,"line_end":14,"column_start":1,"column_end":87}},{"value":"!","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/farbfeld.rs","byte_start":674011,"byte_end":674014,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"! # Related Links","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/farbfeld.rs","byte_start":674015,"byte_end":674034,"line_start":16,"line_end":16,"column_start":1,"column_end":20}},{"value":"! * <https://tools.suckless.org/farbfeld/> - the farbfeld specification","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/farbfeld.rs","byte_start":674035,"byte_end":674108,"line_start":17,"line_end":17,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":2852},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/farbfeld.rs","byte_start":674548,"byte_end":674562,"line_start":30,"line_end":30,"column_start":12,"column_end":26},"name":"FarbfeldReader","qualname":"::farbfeld::FarbfeldReader","value":"FarbfeldReader {  }","parent":null,"children":[{"krate":0,"index":2854},{"krate":0,"index":2855},{"krate":0,"index":2856},{"krate":0,"index":2857},{"krate":0,"index":2858}],"decl_id":null,"docs":" farbfeld Reader\n","sig":null,"attributes":[{"value":"/ farbfeld Reader","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/farbfeld.rs","byte_start":674517,"byte_end":674536,"line_start":29,"line_end":29,"column_start":1,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":2882},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/farbfeld.rs","byte_start":679270,"byte_end":679285,"line_start":163,"line_end":163,"column_start":12,"column_end":27},"name":"FarbfeldDecoder","qualname":"::farbfeld::FarbfeldDecoder","value":"FarbfeldDecoder {  }","parent":null,"children":[{"krate":0,"index":2884}],"decl_id":null,"docs":" farbfeld decoder\n","sig":null,"attributes":[{"value":"/ farbfeld decoder","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/farbfeld.rs","byte_start":679238,"byte_end":679258,"line_start":162,"line_end":162,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":2887},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/farbfeld.rs","byte_start":679444,"byte_end":679447,"line_start":169,"line_end":169,"column_start":12,"column_end":15},"name":"new","qualname":"<FarbfeldDecoder<R>>::new","value":"fn (r: R) -> ImageResult<FarbfeldDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder that decodes from the stream ```r```\n","sig":null,"attributes":[{"value":"/ Creates a new decoder that decodes from the stream ```r```","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/farbfeld.rs","byte_start":679370,"byte_end":679432,"line_start":168,"line_end":168,"column_start":5,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":2904},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/farbfeld.rs","byte_start":680790,"byte_end":680805,"line_start":216,"line_end":216,"column_start":12,"column_end":27},"name":"FarbfeldEncoder","qualname":"::farbfeld::FarbfeldEncoder","value":"FarbfeldEncoder {  }","parent":null,"children":[{"krate":0,"index":2906}],"decl_id":null,"docs":" farbfeld encoder\n","sig":null,"attributes":[{"value":"/ farbfeld encoder","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/farbfeld.rs","byte_start":680758,"byte_end":680778,"line_start":215,"line_end":215,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":2909},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/farbfeld.rs","byte_start":680952,"byte_end":680955,"line_start":222,"line_end":222,"column_start":12,"column_end":15},"name":"new","qualname":"<FarbfeldEncoder<W>>::new","value":"fn (w: W) -> FarbfeldEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that writes its output to ```w```\n","sig":null,"attributes":[{"value":"/ Create a new encoder that writes its output to ```w```","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/farbfeld.rs","byte_start":680882,"byte_end":680940,"line_start":221,"line_end":221,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":2910},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/farbfeld.rs","byte_start":681163,"byte_end":681169,"line_start":228,"line_end":228,"column_start":12,"column_end":18},"name":"encode","qualname":"<FarbfeldEncoder<W>>::encode","value":"fn (self, data: &[u8], width: u32, height: u32) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes the image ```data``` (native endian)\n that has dimensions ```width``` and ```height```\n","sig":null,"attributes":[{"value":"/ Encodes the image ```data``` (native endian)","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/farbfeld.rs","byte_start":681046,"byte_end":681094,"line_start":226,"line_end":226,"column_start":5,"column_end":53}},{"value":"/ that has dimensions ```width``` and ```height```","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/farbfeld.rs","byte_start":681099,"byte_end":681151,"line_start":227,"line_end":227,"column_start":5,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":2922},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/animation.rs","byte_start":685626,"byte_end":685632,"line_start":10,"line_end":10,"column_start":12,"column_end":18},"name":"Frames","qualname":"::animation::Frames","value":"Frames {  }","parent":null,"children":[{"krate":0,"index":2924}],"decl_id":null,"docs":" An implementation dependent iterator, reading the frames as requested\n","sig":null,"attributes":[{"value":"/ An implementation dependent iterator, reading the frames as requested","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/animation.rs","byte_start":685541,"byte_end":685614,"line_start":9,"line_end":9,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":2927},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/animation.rs","byte_start":685812,"byte_end":685815,"line_start":16,"line_end":16,"column_start":12,"column_end":15},"name":"new","qualname":"<Frames>::new","value":"fn (iterator: Box<dyn Iterator<Item = ImageResult<Frame>> + 'a>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Frames` from an implementation specific iterator.\n","sig":null,"attributes":[{"value":"/ Creates a new `Frames` from an implementation specific iterator.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/animation.rs","byte_start":685732,"byte_end":685800,"line_start":15,"line_end":15,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":2928},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/animation.rs","byte_start":686207,"byte_end":686221,"line_start":25,"line_end":25,"column_start":12,"column_end":26},"name":"collect_frames","qualname":"<Frames>::collect_frames","value":"fn (self) -> ImageResult<Vec<Frame>>","parent":null,"children":[],"decl_id":null,"docs":" Steps through the iterator from the current frame until the end and pushes each frame into\n a `Vec`.\n If en error is encountered that error is returned instead.","sig":null,"attributes":[{"value":"/ Steps through the iterator from the current frame until the end and pushes each frame into","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/animation.rs","byte_start":685926,"byte_end":686020,"line_start":20,"line_end":20,"column_start":5,"column_end":99}},{"value":"/ a `Vec`.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/animation.rs","byte_start":686025,"byte_end":686037,"line_start":21,"line_end":21,"column_start":5,"column_end":17}},{"value":"/ If en error is encountered that error is returned instead.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/animation.rs","byte_start":686042,"byte_end":686104,"line_start":22,"line_end":22,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/animation.rs","byte_start":686109,"byte_end":686112,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ Note: This is equivalent to `Frames::collect::<ImageResult<Vec<Frame>>>()`","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/animation.rs","byte_start":686117,"byte_end":686195,"line_start":24,"line_end":24,"column_start":5,"column_end":83}}]},{"kind":"Struct","id":{"krate":0,"index":5239},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/animation.rs","byte_start":686510,"byte_end":686515,"line_start":39,"line_end":39,"column_start":12,"column_end":17},"name":"Frame","qualname":"::animation::Frame","value":"Frame {  }","parent":null,"children":[{"krate":0,"index":5240},{"krate":0,"index":5241},{"krate":0,"index":5242},{"krate":0,"index":5243}],"decl_id":null,"docs":" A single animation frame\n","sig":null,"attributes":[{"value":"/ A single animation frame","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/animation.rs","byte_start":686453,"byte_end":686481,"line_start":37,"line_end":37,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":5246},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/animation.rs","byte_start":686797,"byte_end":686802,"line_start":51,"line_end":51,"column_start":12,"column_end":17},"name":"Delay","qualname":"::animation::Delay","value":"Delay {  }","parent":null,"children":[{"krate":0,"index":5247}],"decl_id":null,"docs":" The delay of a frame relative to the previous one.\n","sig":null,"attributes":[{"value":"/ The delay of a frame relative to the previous one.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/animation.rs","byte_start":686674,"byte_end":686728,"line_start":49,"line_end":49,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2934},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/animation.rs","byte_start":686904,"byte_end":686907,"line_start":57,"line_end":57,"column_start":12,"column_end":15},"name":"new","qualname":"<Frame>::new","value":"fn (buffer: RgbaImage) -> Frame","parent":null,"children":[],"decl_id":null,"docs":" Contructs a new frame without any delay.\n","sig":null,"attributes":[{"value":"/ Contructs a new frame without any delay.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/animation.rs","byte_start":686848,"byte_end":686892,"line_start":56,"line_end":56,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2935},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/animation.rs","byte_start":687135,"byte_end":687145,"line_start":67,"line_end":67,"column_start":12,"column_end":22},"name":"from_parts","qualname":"<Frame>::from_parts","value":"fn (buffer: RgbaImage, left: u32, top: u32, delay: Delay) -> Frame","parent":null,"children":[],"decl_id":null,"docs":" Contructs a new frame\n","sig":null,"attributes":[{"value":"/ Contructs a new frame","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/animation.rs","byte_start":687098,"byte_end":687123,"line_start":66,"line_end":66,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2936},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/animation.rs","byte_start":687357,"byte_end":687362,"line_start":77,"line_end":77,"column_start":12,"column_end":17},"name":"delay","qualname":"<Frame>::delay","value":"fn (&self) -> Delay","parent":null,"children":[],"decl_id":null,"docs":" Delay of this frame\n","sig":null,"attributes":[{"value":"/ Delay of this frame","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/animation.rs","byte_start":687322,"byte_end":687345,"line_start":76,"line_end":76,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":2937},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/animation.rs","byte_start":687451,"byte_end":687457,"line_start":82,"line_end":82,"column_start":12,"column_end":18},"name":"buffer","qualname":"<Frame>::buffer","value":"fn (&self) -> &RgbaImage","parent":null,"children":[],"decl_id":null,"docs":" Returns the image buffer\n","sig":null,"attributes":[{"value":"/ Returns the image buffer","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/animation.rs","byte_start":687411,"byte_end":687439,"line_start":81,"line_end":81,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":2938},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/animation.rs","byte_start":687553,"byte_end":687564,"line_start":87,"line_end":87,"column_start":12,"column_end":23},"name":"into_buffer","qualname":"<Frame>::into_buffer","value":"fn (self) -> RgbaImage","parent":null,"children":[],"decl_id":null,"docs":" Returns the image buffer\n","sig":null,"attributes":[{"value":"/ Returns the image buffer","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/animation.rs","byte_start":687513,"byte_end":687541,"line_start":86,"line_end":86,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":2939},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/animation.rs","byte_start":687653,"byte_end":687657,"line_start":92,"line_end":92,"column_start":12,"column_end":16},"name":"left","qualname":"<Frame>::left","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the x offset\n","sig":null,"attributes":[{"value":"/ Returns the x offset","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/animation.rs","byte_start":687617,"byte_end":687641,"line_start":91,"line_end":91,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2940},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/animation.rs","byte_start":687739,"byte_end":687742,"line_start":97,"line_end":97,"column_start":12,"column_end":15},"name":"top","qualname":"<Frame>::top","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the y offset\n","sig":null,"attributes":[{"value":"/ Returns the y offset","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/animation.rs","byte_start":687703,"byte_end":687727,"line_start":96,"line_end":96,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2942},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/animation.rs","byte_start":688007,"byte_end":688026,"line_start":111,"line_end":111,"column_start":12,"column_end":31},"name":"from_numer_denom_ms","qualname":"<Delay>::from_numer_denom_ms","value":"fn (numerator: u32, denominator: u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a delay from a ratio of milliseconds.","sig":null,"attributes":[{"value":"/ Create a delay from a ratio of milliseconds.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/animation.rs","byte_start":687802,"byte_end":687850,"line_start":103,"line_end":103,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/animation.rs","byte_start":687855,"byte_end":687858,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/animation.rs","byte_start":687863,"byte_end":687877,"line_start":105,"line_end":105,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/animation.rs","byte_start":687882,"byte_end":687885,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/animation.rs","byte_start":687890,"byte_end":687897,"line_start":107,"line_end":107,"column_start":5,"column_end":12}},{"value":"/ use image::Delay;","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/animation.rs","byte_start":687902,"byte_end":687923,"line_start":108,"line_end":108,"column_start":5,"column_end":26}},{"value":"/ let delay_10ms = Delay::from_numer_denom_ms(10, 1);","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/animation.rs","byte_start":687928,"byte_end":687983,"line_start":109,"line_end":109,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/animation.rs","byte_start":687988,"byte_end":687995,"line_start":110,"line_end":110,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2943},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/animation.rs","byte_start":688669,"byte_end":688693,"line_start":129,"line_end":129,"column_start":12,"column_end":36},"name":"from_saturating_duration","qualname":"<Delay>::from_saturating_duration","value":"fn (duration: Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convert from a duration, clamped between 0 and an implemented defined maximum.","sig":null,"attributes":[{"value":"/ Convert from a duration, clamped between 0 and an implemented defined maximum.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/animation.rs","byte_start":688146,"byte_end":688228,"line_start":115,"line_end":115,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/animation.rs","byte_start":688233,"byte_end":688236,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ The maximum is *at least* `i32::MAX` milliseconds. It should be noted that the accuracy of","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/animation.rs","byte_start":688241,"byte_end":688335,"line_start":117,"line_end":117,"column_start":5,"column_end":99}},{"value":"/ the result may be relative and very large delays have a coarse resolution.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/animation.rs","byte_start":688340,"byte_end":688418,"line_start":118,"line_end":118,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/animation.rs","byte_start":688423,"byte_end":688426,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/animation.rs","byte_start":688431,"byte_end":688445,"line_start":120,"line_end":120,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/animation.rs","byte_start":688450,"byte_end":688453,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/animation.rs","byte_start":688458,"byte_end":688465,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/animation.rs","byte_start":688470,"byte_end":688498,"line_start":123,"line_end":123,"column_start":5,"column_end":33}},{"value":"/ use image::Delay;","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/animation.rs","byte_start":688503,"byte_end":688524,"line_start":124,"line_end":124,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/animation.rs","byte_start":688529,"byte_end":688532,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ let duration = Duration::from_millis(20);","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/animation.rs","byte_start":688537,"byte_end":688582,"line_start":126,"line_end":126,"column_start":5,"column_end":50}},{"value":"/ let delay = Delay::from_saturating_duration(duration);","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/animation.rs","byte_start":688587,"byte_end":688645,"line_start":127,"line_end":127,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/animation.rs","byte_start":688650,"byte_end":688657,"line_start":128,"line_end":128,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2945},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/animation.rs","byte_start":689869,"byte_end":689883,"line_start":158,"line_end":158,"column_start":12,"column_end":26},"name":"numer_denom_ms","qualname":"<Delay>::numer_denom_ms","value":"fn (self) -> (u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" The numerator and denominator of the delay in milliseconds.","sig":null,"attributes":[{"value":"/ The numerator and denominator of the delay in milliseconds.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/animation.rs","byte_start":689643,"byte_end":689706,"line_start":154,"line_end":154,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/animation.rs","byte_start":689711,"byte_end":689714,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ This is guaranteed to be an exact conversion if the `Delay` was previously created with the","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/animation.rs","byte_start":689719,"byte_end":689814,"line_start":156,"line_end":156,"column_start":5,"column_end":100}},{"value":"/ `from_numer_denom_ms` constructor.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/animation.rs","byte_start":689819,"byte_end":689857,"line_start":157,"line_end":157,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":5266},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":697156,"byte_end":697162,"line_start":19,"line_end":19,"column_start":12,"column_end":18},"name":"Pixels","qualname":"::buffer_::Pixels","value":"Pixels {  }","parent":null,"children":[{"krate":0,"index":5269}],"decl_id":null,"docs":" Iterate over pixel refs.\n","sig":null,"attributes":[{"value":"/ Iterate over pixel refs.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":697099,"byte_end":697127,"line_start":17,"line_end":17,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":3008},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":697931,"byte_end":697940,"line_start":58,"line_end":58,"column_start":12,"column_end":21},"name":"PixelsMut","qualname":"::buffer_::PixelsMut","value":"PixelsMut {  }","parent":null,"children":[{"krate":0,"index":3011}],"decl_id":null,"docs":" Iterate over mutable pixel refs.\n","sig":null,"attributes":[{"value":"/ Iterate over mutable pixel refs.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":697883,"byte_end":697919,"line_start":57,"line_end":57,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":5274},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":698942,"byte_end":698946,"line_start":104,"line_end":104,"column_start":12,"column_end":16},"name":"Rows","qualname":"::buffer_::Rows","value":"Rows {  }","parent":null,"children":[{"krate":0,"index":5277}],"decl_id":null,"docs":" Iterate over rows of an image","sig":null,"attributes":[{"value":"/ Iterate over rows of an image","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":698719,"byte_end":698752,"line_start":98,"line_end":98,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":698753,"byte_end":698756,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ This iterator is created with [`ImageBuffer::rows`]. See its document for details.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":698757,"byte_end":698843,"line_start":100,"line_end":100,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":698844,"byte_end":698847,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ [`ImageBuffer::rows`]: ../struct.ImageBuffer.html#method.rows","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":698848,"byte_end":698913,"line_start":102,"line_end":102,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":3044},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":701088,"byte_end":701095,"line_start":176,"line_end":176,"column_start":12,"column_end":19},"name":"RowsMut","qualname":"::buffer_::RowsMut","value":"RowsMut {  }","parent":null,"children":[{"krate":0,"index":3047}],"decl_id":null,"docs":" Iterate over mutable rows of an image","sig":null,"attributes":[{"value":"/ Iterate over mutable rows of an image","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":700862,"byte_end":700903,"line_start":171,"line_end":171,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":700904,"byte_end":700907,"line_start":172,"line_end":172,"column_start":1,"column_end":4}},{"value":"/ This iterator is created with [`ImageBuffer::rows_mut`]. See its document for details.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":700908,"byte_end":700998,"line_start":173,"line_end":173,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":700999,"byte_end":701002,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ [`ImageBuffer::rows_mut`]: ../struct.ImageBuffer.html#method.rows_mut","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":701003,"byte_end":701076,"line_start":175,"line_end":175,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":5282},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":703137,"byte_end":703152,"line_start":245,"line_end":245,"column_start":12,"column_end":27},"name":"EnumeratePixels","qualname":"::buffer_::EnumeratePixels","value":"EnumeratePixels {  }","parent":null,"children":[{"krate":0,"index":5285},{"krate":0,"index":5286},{"krate":0,"index":5287},{"krate":0,"index":5288}],"decl_id":null,"docs":" Enumerate the pixels of an image.\n","sig":null,"attributes":[{"value":"/ Enumerate the pixels of an image.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":703071,"byte_end":703108,"line_start":243,"line_end":243,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":5293},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":703917,"byte_end":703930,"line_start":284,"line_end":284,"column_start":12,"column_end":25},"name":"EnumerateRows","qualname":"::buffer_::EnumerateRows","value":"EnumerateRows {  }","parent":null,"children":[{"krate":0,"index":5296},{"krate":0,"index":5297},{"krate":0,"index":5298}],"decl_id":null,"docs":" Enumerate the rows of an image.\n","sig":null,"attributes":[{"value":"/ Enumerate the rows of an image.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":703853,"byte_end":703888,"line_start":282,"line_end":282,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":3085},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":704793,"byte_end":704811,"line_start":327,"line_end":327,"column_start":12,"column_end":30},"name":"EnumeratePixelsMut","qualname":"::buffer_::EnumeratePixelsMut","value":"EnumeratePixelsMut {  }","parent":null,"children":[{"krate":0,"index":3088},{"krate":0,"index":3089},{"krate":0,"index":3090},{"krate":0,"index":3091}],"decl_id":null,"docs":" Enumerate the pixels of an image.\n","sig":null,"attributes":[{"value":"/ Enumerate the pixels of an image.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":704744,"byte_end":704781,"line_start":326,"line_end":326,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":3102},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":705576,"byte_end":705592,"line_start":365,"line_end":365,"column_start":12,"column_end":28},"name":"EnumerateRowsMut","qualname":"::buffer_::EnumerateRowsMut","value":"EnumerateRowsMut {  }","parent":null,"children":[{"krate":0,"index":3105},{"krate":0,"index":3106},{"krate":0,"index":3107}],"decl_id":null,"docs":" Enumerate the rows of an image.\n","sig":null,"attributes":[{"value":"/ Enumerate the rows of an image.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":705529,"byte_end":705564,"line_start":364,"line_end":364,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":5303},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":708802,"byte_end":708813,"line_start":476,"line_end":476,"column_start":12,"column_end":23},"name":"ImageBuffer","qualname":"::buffer_::ImageBuffer","value":"ImageBuffer {  }","parent":null,"children":[{"krate":0,"index":5306},{"krate":0,"index":5307},{"krate":0,"index":5308},{"krate":0,"index":5309}],"decl_id":null,"docs":" Generic image buffer","sig":null,"attributes":[{"value":"/ Generic image buffer","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":706424,"byte_end":706448,"line_start":407,"line_end":407,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":706449,"byte_end":706452,"line_start":408,"line_end":408,"column_start":1,"column_end":4}},{"value":"/ This is an image parameterised by its Pixel types, represented by a width and height and a","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":706453,"byte_end":706547,"line_start":409,"line_end":409,"column_start":1,"column_end":95}},{"value":"/ container of channel data. It provides direct access to its pixels and implements the","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":706548,"byte_end":706637,"line_start":410,"line_end":410,"column_start":1,"column_end":90}},{"value":"/ [`GenericImageView`] and [`GenericImage`] traits. In many ways, this is the standard buffer","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":706638,"byte_end":706733,"line_start":411,"line_end":411,"column_start":1,"column_end":96}},{"value":"/ implementing those traits. Using this concrete type instead of a generic type parameter has","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":706734,"byte_end":706829,"line_start":412,"line_end":412,"column_start":1,"column_end":96}},{"value":"/ been shown to improve performance.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":706830,"byte_end":706868,"line_start":413,"line_end":413,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":706869,"byte_end":706872,"line_start":414,"line_end":414,"column_start":1,"column_end":4}},{"value":"/ The crate defines a few type aliases with regularly used pixel types for your convenience, such","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":706873,"byte_end":706972,"line_start":415,"line_end":415,"column_start":1,"column_end":100}},{"value":"/ as `RgbImage`, `GrayImage` etc.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":706973,"byte_end":707008,"line_start":416,"line_end":416,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":707009,"byte_end":707012,"line_start":417,"line_end":417,"column_start":1,"column_end":4}},{"value":"/ [`GenericImage`]: trait.GenericImage.html","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":707013,"byte_end":707058,"line_start":418,"line_end":418,"column_start":1,"column_end":46}},{"value":"/ [`GenericImageView`]: trait.GenericImageView.html","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":707059,"byte_end":707112,"line_start":419,"line_end":419,"column_start":1,"column_end":54}},{"value":"/ [`RgbImage`]: type.RgbImage.html","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":707113,"byte_end":707149,"line_start":420,"line_end":420,"column_start":1,"column_end":37}},{"value":"/ [`GrayImage`]: type.GrayImage.html","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":707150,"byte_end":707188,"line_start":421,"line_end":421,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":707189,"byte_end":707192,"line_start":422,"line_end":422,"column_start":1,"column_end":4}},{"value":"/ To convert between images of different Pixel types use [`DynamicImage`].","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":707193,"byte_end":707269,"line_start":423,"line_end":423,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":707270,"byte_end":707273,"line_start":424,"line_end":424,"column_start":1,"column_end":4}},{"value":"/ You can retrieve a complete description of the buffer's layout and contents through","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":707274,"byte_end":707361,"line_start":425,"line_end":425,"column_start":1,"column_end":88}},{"value":"/ [`as_flat_samples`] and [`as_flat_samples_mut`]. This can be handy to also use the contents in","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":707362,"byte_end":707460,"line_start":426,"line_end":426,"column_start":1,"column_end":99}},{"value":"/ a foreign language, map it as a GPU host buffer or other similar tasks.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":707461,"byte_end":707536,"line_start":427,"line_end":427,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":707537,"byte_end":707540,"line_start":428,"line_end":428,"column_start":1,"column_end":4}},{"value":"/ [`DynamicImage`]: enum.DynamicImage.html","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":707541,"byte_end":707585,"line_start":429,"line_end":429,"column_start":1,"column_end":45}},{"value":"/ [`as_flat_samples`]: #method.as_flat_samples","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":707586,"byte_end":707634,"line_start":430,"line_end":430,"column_start":1,"column_end":49}},{"value":"/ [`as_flat_samples_mut`]: #method.as_flat_samples_mut","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":707635,"byte_end":707691,"line_start":431,"line_end":431,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":707692,"byte_end":707695,"line_start":432,"line_end":432,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":707696,"byte_end":707711,"line_start":433,"line_end":433,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":707712,"byte_end":707715,"line_start":434,"line_end":434,"column_start":1,"column_end":4}},{"value":"/ Create a simple canvas and paint a small cross.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":707716,"byte_end":707767,"line_start":435,"line_end":435,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":707768,"byte_end":707771,"line_start":436,"line_end":436,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":707772,"byte_end":707779,"line_start":437,"line_end":437,"column_start":1,"column_end":8}},{"value":"/ use image::{RgbImage, Rgb};","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":707780,"byte_end":707811,"line_start":438,"line_end":438,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":707812,"byte_end":707815,"line_start":439,"line_end":439,"column_start":1,"column_end":4}},{"value":"/ let mut img = RgbImage::new(32, 32);","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":707816,"byte_end":707856,"line_start":440,"line_end":440,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":707857,"byte_end":707860,"line_start":441,"line_end":441,"column_start":1,"column_end":4}},{"value":"/ for x in 15..=17 {","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":707861,"byte_end":707883,"line_start":442,"line_end":442,"column_start":1,"column_end":23}},{"value":"/     for y in 8..24 {","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":707884,"byte_end":707908,"line_start":443,"line_end":443,"column_start":1,"column_end":25}},{"value":"/         img.put_pixel(x, y, Rgb([255, 0, 0]));","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":707909,"byte_end":707959,"line_start":444,"line_end":444,"column_start":1,"column_end":51}},{"value":"/         img.put_pixel(y, x, Rgb([255, 0, 0]));","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":707960,"byte_end":708010,"line_start":445,"line_end":445,"column_start":1,"column_end":51}},{"value":"/     }","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":708011,"byte_end":708020,"line_start":446,"line_end":446,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":708021,"byte_end":708026,"line_start":447,"line_end":447,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":708027,"byte_end":708034,"line_start":448,"line_end":448,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":708035,"byte_end":708038,"line_start":449,"line_end":449,"column_start":1,"column_end":4}},{"value":"/ Overlays an image on top of a larger background raster.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":708039,"byte_end":708098,"line_start":450,"line_end":450,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":708099,"byte_end":708102,"line_start":451,"line_end":451,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":708103,"byte_end":708116,"line_start":452,"line_end":452,"column_start":1,"column_end":14}},{"value":"/ use image::{GenericImage, GenericImageView, ImageBuffer, open};","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":708117,"byte_end":708184,"line_start":453,"line_end":453,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":708185,"byte_end":708188,"line_start":454,"line_end":454,"column_start":1,"column_end":4}},{"value":"/ let on_top = open(\"path/to/some.png\").unwrap().into_rgb();","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":708189,"byte_end":708251,"line_start":455,"line_end":455,"column_start":1,"column_end":63}},{"value":"/ let mut img = ImageBuffer::from_fn(512, 512, |x, y| {","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":708252,"byte_end":708309,"line_start":456,"line_end":456,"column_start":1,"column_end":58}},{"value":"/     if (x + y) % 2 == 0 {","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":708310,"byte_end":708339,"line_start":457,"line_end":457,"column_start":1,"column_end":30}},{"value":"/         image::Rgb([0, 0, 0])","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":708340,"byte_end":708373,"line_start":458,"line_end":458,"column_start":1,"column_end":34}},{"value":"/     } else {","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":708374,"byte_end":708390,"line_start":459,"line_end":459,"column_start":1,"column_end":17}},{"value":"/         image::Rgb([255, 255, 255])","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":708391,"byte_end":708430,"line_start":460,"line_end":460,"column_start":1,"column_end":40}},{"value":"/     }","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":708431,"byte_end":708440,"line_start":461,"line_end":461,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":708441,"byte_end":708448,"line_start":462,"line_end":462,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":708449,"byte_end":708452,"line_start":463,"line_end":463,"column_start":1,"column_end":4}},{"value":"/ image::imageops::overlay(&mut img, &on_top, 128, 128);","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":708453,"byte_end":708511,"line_start":464,"line_end":464,"column_start":1,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":708512,"byte_end":708519,"line_start":465,"line_end":465,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":708520,"byte_end":708523,"line_start":466,"line_end":466,"column_start":1,"column_end":4}},{"value":"/ Convert an RgbaImage to a GrayImage.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":708524,"byte_end":708564,"line_start":467,"line_end":467,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":708565,"byte_end":708568,"line_start":468,"line_end":468,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":708569,"byte_end":708582,"line_start":469,"line_end":469,"column_start":1,"column_end":14}},{"value":"/ use image::{open, DynamicImage};","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":708583,"byte_end":708619,"line_start":470,"line_end":470,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":708620,"byte_end":708623,"line_start":471,"line_end":471,"column_start":1,"column_end":4}},{"value":"/ let rgba = open(\"path/to/some.png\").unwrap().into_rgba();","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":708624,"byte_end":708685,"line_start":472,"line_end":472,"column_start":1,"column_end":62}},{"value":"/ let gray = DynamicImage::ImageRgba8(rgba).into_luma();","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":708686,"byte_end":708744,"line_start":473,"line_end":473,"column_start":1,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":708745,"byte_end":708752,"line_start":474,"line_end":474,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3121},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":709571,"byte_end":709579,"line_start":498,"line_end":498,"column_start":12,"column_end":20},"name":"from_raw","qualname":"<ImageBuffer<P, Container>>::from_raw","value":"fn (width: u32, height: u32, buf: Container) -> Option<ImageBuffer<P, Container>>","parent":null,"children":[],"decl_id":null,"docs":" Contructs a buffer from a generic container\n (for example a `Vec` or a slice)","sig":null,"attributes":[{"value":"/ Contructs a buffer from a generic container","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":709286,"byte_end":709333,"line_start":493,"line_end":493,"column_start":5,"column_end":52}},{"value":"/ (for example a `Vec` or a slice)","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":709338,"byte_end":709374,"line_start":494,"line_end":494,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":709379,"byte_end":709382,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the container is not big enough (including when the image dimensions","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":709387,"byte_end":709477,"line_start":496,"line_end":496,"column_start":5,"column_end":95}},{"value":"/ necessitate an allocation of more bytes than supported by the container).","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":709482,"byte_end":709559,"line_start":497,"line_end":497,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":3122},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":709985,"byte_end":709993,"line_start":512,"line_end":512,"column_start":12,"column_end":20},"name":"into_raw","qualname":"<ImageBuffer<P, Container>>::into_raw","value":"fn (self) -> Container","parent":null,"children":[],"decl_id":null,"docs":" Returns the underlying raw buffer\n","sig":null,"attributes":[{"value":"/ Returns the underlying raw buffer","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":709936,"byte_end":709973,"line_start":511,"line_end":511,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":3123},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":710095,"byte_end":710105,"line_start":517,"line_end":517,"column_start":12,"column_end":22},"name":"dimensions","qualname":"<ImageBuffer<P, Container>>::dimensions","value":"fn (&self) -> (u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" The width and height of this image.\n","sig":null,"attributes":[{"value":"/ The width and height of this image.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":710044,"byte_end":710083,"line_start":516,"line_end":516,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":3124},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":710214,"byte_end":710219,"line_start":522,"line_end":522,"column_start":12,"column_end":17},"name":"width","qualname":"<ImageBuffer<P, Container>>::width","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The width of this image.\n","sig":null,"attributes":[{"value":"/ The width of this image.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":710174,"byte_end":710202,"line_start":521,"line_end":521,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":3125},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":710307,"byte_end":710313,"line_start":527,"line_end":527,"column_start":12,"column_end":18},"name":"height","qualname":"<ImageBuffer<P, Container>>::height","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The height of this image.\n","sig":null,"attributes":[{"value":"/ The height of this image.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":710266,"byte_end":710295,"line_start":526,"line_end":526,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":3127},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":710631,"byte_end":710637,"line_start":538,"line_end":538,"column_start":12,"column_end":18},"name":"pixels","qualname":"<ImageBuffer<P, Container>>::pixels","value":"fn (&self) -> Pixels<P>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the pixels of this image.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the pixels of this image.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":710565,"byte_end":710619,"line_start":537,"line_end":537,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":3128},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":711131,"byte_end":711135,"line_start":549,"line_end":549,"column_start":12,"column_end":16},"name":"rows","qualname":"<ImageBuffer<P, Container>>::rows","value":"fn (&self) -> Rows<P>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the rows of this image.","sig":null,"attributes":[{"value":"/ Returns an iterator over the rows of this image.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":710784,"byte_end":710836,"line_start":544,"line_end":544,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":710841,"byte_end":710844,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ Only non-empty rows can be iterated in this manner. In particular the iterator will not","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":710849,"byte_end":710940,"line_start":546,"line_end":546,"column_start":5,"column_end":96}},{"value":"/ yield any item when the width of the image is `0` or a pixel type without any channels is","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":710945,"byte_end":711038,"line_start":547,"line_end":547,"column_start":5,"column_end":98}},{"value":"/ used. This ensures that its length can always be represented by `usize`.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":711043,"byte_end":711119,"line_start":548,"line_end":548,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":3129},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":711383,"byte_end":711399,"line_start":556,"line_end":556,"column_start":12,"column_end":28},"name":"enumerate_pixels","qualname":"<ImageBuffer<P, Container>>::enumerate_pixels","value":"fn (&self) -> EnumeratePixels<P>","parent":null,"children":[],"decl_id":null,"docs":" Enumerates over the pixels of the image.\n The iterator yields the coordinates of each pixel\n along with a reference to them.\n","sig":null,"attributes":[{"value":"/ Enumerates over the pixels of the image.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":711229,"byte_end":711273,"line_start":553,"line_end":553,"column_start":5,"column_end":49}},{"value":"/ The iterator yields the coordinates of each pixel","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":711278,"byte_end":711331,"line_start":554,"line_end":554,"column_start":5,"column_end":58}},{"value":"/ along with a reference to them.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":711336,"byte_end":711371,"line_start":555,"line_end":555,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3130},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":711731,"byte_end":711745,"line_start":568,"line_end":568,"column_start":12,"column_end":26},"name":"enumerate_rows","qualname":"<ImageBuffer<P, Container>>::enumerate_rows","value":"fn (&self) -> EnumerateRows<P>","parent":null,"children":[],"decl_id":null,"docs":" Enumerates over the rows of the image.\n The iterator yields the y-coordinate of each row\n along with a reference to them.\n","sig":null,"attributes":[{"value":"/ Enumerates over the rows of the image.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":711580,"byte_end":711622,"line_start":565,"line_end":565,"column_start":5,"column_end":47}},{"value":"/ The iterator yields the y-coordinate of each row","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":711627,"byte_end":711679,"line_start":566,"line_end":566,"column_start":5,"column_end":57}},{"value":"/ along with a reference to them.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":711684,"byte_end":711719,"line_start":567,"line_end":567,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3131},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":712066,"byte_end":712075,"line_start":581,"line_end":581,"column_start":12,"column_end":21},"name":"get_pixel","qualname":"<ImageBuffer<P, Container>>::get_pixel","value":"fn (&self, x: u32, y: u32) -> &P","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the pixel at location `(x, y)`","sig":null,"attributes":[{"value":"/ Gets a reference to the pixel at location `(x, y)`","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":711900,"byte_end":711954,"line_start":576,"line_end":576,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":711959,"byte_end":711962,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":711967,"byte_end":711979,"line_start":578,"line_end":578,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":711984,"byte_end":711987,"line_start":579,"line_end":579,"column_start":5,"column_end":8}},{"value":"/ Panics if `(x, y)` is out of the bounds `(width, height)`.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":711992,"byte_end":712054,"line_start":580,"line_end":580,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":3139},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":713801,"byte_end":713814,"line_start":622,"line_end":622,"column_start":12,"column_end":25},"name":"sample_layout","qualname":"<ImageBuffer<P, Container>>::sample_layout","value":"fn (&self) -> SampleLayout","parent":null,"children":[],"decl_id":null,"docs":" Get the format of the buffer when viewed as a matrix of samples.\n","sig":null,"attributes":[{"value":"/ Get the format of the buffer when viewed as a matrix of samples.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":713721,"byte_end":713789,"line_start":621,"line_end":621,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":3140},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":714428,"byte_end":714445,"line_start":633,"line_end":633,"column_start":12,"column_end":29},"name":"into_flat_samples","qualname":"<ImageBuffer<P, Container>>::into_flat_samples","value":"fn (self) -> FlatSamples<Container>","parent":null,"children":[],"decl_id":null,"docs":" Return the raw sample buffer with its stride an dimension information.","sig":null,"attributes":[{"value":"/ Return the raw sample buffer with its stride an dimension information.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":714017,"byte_end":714091,"line_start":627,"line_end":627,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":714096,"byte_end":714099,"line_start":628,"line_end":628,"column_start":5,"column_end":8}},{"value":"/ The returned buffer is guaranteed to be well formed in all cases. It is layed out by","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":714104,"byte_end":714192,"line_start":629,"line_end":629,"column_start":5,"column_end":93}},{"value":"/ colors, width then height, meaning `channel_stride <= width_stride <= height_stride`. All","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":714197,"byte_end":714290,"line_start":630,"line_end":630,"column_start":5,"column_end":98}},{"value":"/ strides are in numbers of elements but those are mostly `u8` in which case the strides are","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":714295,"byte_end":714389,"line_start":631,"line_end":631,"column_start":5,"column_end":99}},{"value":"/ also byte strides.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":714394,"byte_end":714416,"line_start":632,"line_end":632,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":3141},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":714928,"byte_end":714943,"line_start":648,"line_end":648,"column_start":12,"column_end":27},"name":"as_flat_samples","qualname":"<ImageBuffer<P, Container>>::as_flat_samples","value":"fn (&self) -> FlatSamples<&[P::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" Return a view on the raw sample buffer.","sig":null,"attributes":[{"value":"/ Return a view on the raw sample buffer.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":714786,"byte_end":714829,"line_start":645,"line_end":645,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":714834,"byte_end":714837,"line_start":646,"line_end":646,"column_start":5,"column_end":8}},{"value":"/ See [`into_flat_samples`](#method.into_flat_samples) for more details.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":714842,"byte_end":714916,"line_start":647,"line_end":647,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":3142},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":715376,"byte_end":715395,"line_start":662,"line_end":662,"column_start":12,"column_end":31},"name":"as_flat_samples_mut","qualname":"<ImageBuffer<P, Container>>::as_flat_samples_mut","value":"fn (&mut self) -> FlatSamples<&mut [P::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable view on the raw sample buffer.","sig":null,"attributes":[{"value":"/ Return a mutable view on the raw sample buffer.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":715226,"byte_end":715277,"line_start":659,"line_end":659,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":715282,"byte_end":715285,"line_start":660,"line_end":660,"column_start":5,"column_end":8}},{"value":"/ See [`into_flat_samples`](#method.into_flat_samples) for more details.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":715290,"byte_end":715364,"line_start":661,"line_end":661,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":3147},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":716142,"byte_end":716152,"line_start":687,"line_end":687,"column_start":12,"column_end":22},"name":"pixels_mut","qualname":"<ImageBuffer<P, Container>>::pixels_mut","value":"fn (&mut self) -> PixelsMut<P>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the mutable pixels of this image.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the mutable pixels of this image.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":716068,"byte_end":716130,"line_start":686,"line_end":686,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":3148},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":716672,"byte_end":716680,"line_start":698,"line_end":698,"column_start":12,"column_end":20},"name":"rows_mut","qualname":"<ImageBuffer<P, Container>>::rows_mut","value":"fn (&mut self) -> RowsMut<P>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the mutable rows of this image.","sig":null,"attributes":[{"value":"/ Returns an iterator over the mutable rows of this image.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":716317,"byte_end":716377,"line_start":693,"line_end":693,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":716382,"byte_end":716385,"line_start":694,"line_end":694,"column_start":5,"column_end":8}},{"value":"/ Only non-empty rows can be iterated in this manner. In particular the iterator will not","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":716390,"byte_end":716481,"line_start":695,"line_end":695,"column_start":5,"column_end":96}},{"value":"/ yield any item when the width of the image is `0` or a pixel type without any channels is","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":716486,"byte_end":716579,"line_start":696,"line_end":696,"column_start":5,"column_end":98}},{"value":"/ used. This ensures that its length can always be represented by `usize`.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":716584,"byte_end":716660,"line_start":697,"line_end":697,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":3149},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":716950,"byte_end":716970,"line_start":705,"line_end":705,"column_start":12,"column_end":32},"name":"enumerate_pixels_mut","qualname":"<ImageBuffer<P, Container>>::enumerate_pixels_mut","value":"fn (&mut self) -> EnumeratePixelsMut<P>","parent":null,"children":[],"decl_id":null,"docs":" Enumerates over the pixels of the image.\n The iterator yields the coordinates of each pixel\n along with a mutable reference to them.\n","sig":null,"attributes":[{"value":"/ Enumerates over the pixels of the image.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":716788,"byte_end":716832,"line_start":702,"line_end":702,"column_start":5,"column_end":49}},{"value":"/ The iterator yields the coordinates of each pixel","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":716837,"byte_end":716890,"line_start":703,"line_end":703,"column_start":5,"column_end":58}},{"value":"/ along with a mutable reference to them.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":716895,"byte_end":716938,"line_start":704,"line_end":704,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":3150},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":717344,"byte_end":717362,"line_start":718,"line_end":718,"column_start":12,"column_end":30},"name":"enumerate_rows_mut","qualname":"<ImageBuffer<P, Container>>::enumerate_rows_mut","value":"fn (&mut self) -> EnumerateRowsMut<P>","parent":null,"children":[],"decl_id":null,"docs":" Enumerates over the rows of the image.\n The iterator yields the y-coordinate of each row\n along with a mutable reference to them.\n","sig":null,"attributes":[{"value":"/ Enumerates over the rows of the image.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":717185,"byte_end":717227,"line_start":715,"line_end":715,"column_start":5,"column_end":47}},{"value":"/ The iterator yields the y-coordinate of each row","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":717232,"byte_end":717284,"line_start":716,"line_end":716,"column_start":5,"column_end":57}},{"value":"/ along with a mutable reference to them.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":717289,"byte_end":717332,"line_start":717,"line_end":717,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":3151},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":717725,"byte_end":717738,"line_start":732,"line_end":732,"column_start":12,"column_end":25},"name":"get_pixel_mut","qualname":"<ImageBuffer<P, Container>>::get_pixel_mut","value":"fn (&mut self, x: u32, y: u32) -> &mut P","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the mutable pixel at location `(x, y)`","sig":null,"attributes":[{"value":"/ Gets a reference to the mutable pixel at location `(x, y)`","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":717551,"byte_end":717613,"line_start":727,"line_end":727,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":717618,"byte_end":717621,"line_start":728,"line_end":728,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":717626,"byte_end":717638,"line_start":729,"line_end":729,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":717643,"byte_end":717646,"line_start":730,"line_end":730,"column_start":5,"column_end":8}},{"value":"/ Panics if `(x, y)` is out of the bounds `(width, height)`.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":717651,"byte_end":717713,"line_start":731,"line_end":731,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":3152},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":718187,"byte_end":718196,"line_start":744,"line_end":744,"column_start":12,"column_end":21},"name":"put_pixel","qualname":"<ImageBuffer<P, Container>>::put_pixel","value":"fn (&mut self, x: u32, y: u32, pixel: P) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Puts a pixel at location `(x, y)`","sig":null,"attributes":[{"value":"/ Puts a pixel at location `(x, y)`","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":718038,"byte_end":718075,"line_start":739,"line_end":739,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":718080,"byte_end":718083,"line_start":740,"line_end":740,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":718088,"byte_end":718100,"line_start":741,"line_end":741,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":718105,"byte_end":718108,"line_start":742,"line_end":742,"column_start":5,"column_end":8}},{"value":"/ Panics if `(x, y)` is out of the bounds `(width, height)`.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":718113,"byte_end":718175,"line_start":743,"line_end":743,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":3156},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":718641,"byte_end":718645,"line_start":759,"line_end":759,"column_start":12,"column_end":16},"name":"save","qualname":"<ImageBuffer<P, Container>>::save","value":"fn <Q> (&self, path: Q) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Saves the buffer to a file at the path specified.","sig":null,"attributes":[{"value":"/ Saves the buffer to a file at the path specified.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":718450,"byte_end":718503,"line_start":755,"line_end":755,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":718508,"byte_end":718511,"line_start":756,"line_end":756,"column_start":5,"column_end":8}},{"value":"/ The image format is derived from the file extension.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":718516,"byte_end":718572,"line_start":757,"line_end":757,"column_start":5,"column_end":61}},{"value":"/ Currently only jpeg and png files are supported.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":718577,"byte_end":718629,"line_start":758,"line_end":758,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":3161},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":719320,"byte_end":719336,"line_start":785,"line_end":785,"column_start":12,"column_end":28},"name":"save_with_format","qualname":"<ImageBuffer<P, Container>>::save_with_format","value":"fn <Q> (&self, path: Q, format: ImageFormat) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Saves the buffer to a file at the specified path in\n the specified format.","sig":null,"attributes":[{"value":"/ Saves the buffer to a file at the specified path in","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":719113,"byte_end":719168,"line_start":780,"line_end":780,"column_start":5,"column_end":60}},{"value":"/ the specified format.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":719173,"byte_end":719198,"line_start":781,"line_end":781,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":719203,"byte_end":719206,"line_start":782,"line_end":782,"column_start":5,"column_end":8}},{"value":"/ See [`save_buffer_with_format`](fn.save_buffer_with_format.html) for","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":719211,"byte_end":719283,"line_start":783,"line_end":783,"column_start":5,"column_end":77}},{"value":"/ supported types.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":719288,"byte_end":719308,"line_start":784,"line_end":784,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":3209},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":725891,"byte_end":725894,"line_start":998,"line_end":998,"column_start":12,"column_end":15},"name":"new","qualname":"<ImageBuffer<P, Vec<P::Subpixel>>>::new","value":"fn (width: u32, height: u32) -> ImageBuffer<P, Vec<P::Subpixel>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new image buffer based on a `Vec<P::Subpixel>`.","sig":null,"attributes":[{"value":"/ Creates a new image buffer based on a `Vec<P::Subpixel>`.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":725701,"byte_end":725762,"line_start":993,"line_end":993,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":725767,"byte_end":725770,"line_start":994,"line_end":994,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":725775,"byte_end":725787,"line_start":995,"line_end":995,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":725792,"byte_end":725795,"line_start":996,"line_end":996,"column_start":5,"column_end":8}},{"value":"/ Panics when the resulting image is larger the the maximum size of a vector.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":725800,"byte_end":725879,"line_start":997,"line_end":997,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":3210},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":726432,"byte_end":726442,"line_start":1014,"line_end":1014,"column_start":12,"column_end":22},"name":"from_pixel","qualname":"<ImageBuffer<P, Vec<P::Subpixel>>>::from_pixel","value":"fn (width: u32, height: u32, pixel: P) -> ImageBuffer<P, Vec<P::Subpixel>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new ImageBuffer by copying a pixel","sig":null,"attributes":[{"value":"/ Constructs a new ImageBuffer by copying a pixel","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":726252,"byte_end":726303,"line_start":1009,"line_end":1009,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":726308,"byte_end":726311,"line_start":1010,"line_end":1010,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":726316,"byte_end":726328,"line_start":1011,"line_end":1011,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":726333,"byte_end":726336,"line_start":1012,"line_end":1012,"column_start":5,"column_end":8}},{"value":"/ Panics when the resulting image is larger the the maximum size of a vector.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":726341,"byte_end":726420,"line_start":1013,"line_end":1013,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":3211},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":726957,"byte_end":726964,"line_start":1029,"line_end":1029,"column_start":12,"column_end":19},"name":"from_fn","qualname":"<ImageBuffer<P, Vec<P::Subpixel>>>::from_fn","value":"fn <F> (width: u32, height: u32, mut f: F) -> ImageBuffer<P, Vec<P::Subpixel>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new ImageBuffer by repeated application of the supplied function.","sig":null,"attributes":[{"value":"/ Constructs a new ImageBuffer by repeated application of the supplied function.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":726663,"byte_end":726745,"line_start":1022,"line_end":1022,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":726750,"byte_end":726753,"line_start":1023,"line_end":1023,"column_start":5,"column_end":8}},{"value":"/ The arguments to the function are the pixel's x and y coordinates.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":726758,"byte_end":726828,"line_start":1024,"line_end":1024,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":726833,"byte_end":726836,"line_start":1025,"line_end":1025,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":726841,"byte_end":726853,"line_start":1026,"line_end":1026,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":726858,"byte_end":726861,"line_start":1027,"line_end":1027,"column_start":5,"column_end":8}},{"value":"/ Panics when the resulting image is larger the the maximum size of a vector.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":726866,"byte_end":726945,"line_start":1028,"line_end":1028,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":3213},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":727375,"byte_end":727383,"line_start":1042,"line_end":1042,"column_start":12,"column_end":20},"name":"from_vec","qualname":"<ImageBuffer<P, Vec<P::Subpixel>>>::from_vec","value":"fn (width: u32, height: u32, buf: Vec<P::Subpixel>) -> Option<ImageBuffer<P, Vec<P::Subpixel>>>","parent":null,"children":[],"decl_id":null,"docs":" Creates an image buffer out of an existing buffer.\n Returns None if the buffer is not big enough.\n","sig":null,"attributes":[{"value":"/ Creates an image buffer out of an existing buffer.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":727255,"byte_end":727309,"line_start":1040,"line_end":1040,"column_start":5,"column_end":59}},{"value":"/ Returns None if the buffer is not big enough.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":727314,"byte_end":727363,"line_start":1041,"line_end":1041,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3214},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":727670,"byte_end":727678,"line_start":1052,"line_end":1052,"column_start":12,"column_end":20},"name":"into_vec","qualname":"<ImageBuffer<P, Vec<P::Subpixel>>>::into_vec","value":"fn (self) -> Vec<P::Subpixel>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the image buffer and returns the underlying data\n as an owned buffer\n","sig":null,"attributes":[{"value":"/ Consumes the image buffer and returns the underlying data","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":727570,"byte_end":727631,"line_start":1050,"line_end":1050,"column_start":5,"column_end":66}},{"value":"/ as an owned buffer","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":727636,"byte_end":727658,"line_start":1051,"line_end":1051,"column_start":5,"column_end":27}}]},{"kind":"Trait","id":{"krate":0,"index":3215},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":727806,"byte_end":727819,"line_start":1058,"line_end":1058,"column_start":11,"column_end":24},"name":"ConvertBuffer","qualname":"::buffer_::ConvertBuffer","value":"ConvertBuffer<T>","parent":null,"children":[{"krate":0,"index":3217}],"decl_id":null,"docs":" Provides color conversions for whole image buffers.\n","sig":null,"attributes":[{"value":"/ Provides color conversions for whole image buffers.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":727740,"byte_end":727795,"line_start":1057,"line_end":1057,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":3217},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":728006,"byte_end":728013,"line_start":1063,"line_end":1063,"column_start":8,"column_end":15},"name":"convert","qualname":"::buffer_::ConvertBuffer::convert","value":"fn (&self) -> T","parent":{"krate":0,"index":3215},"children":[],"decl_id":null,"docs":" Converts `self` to a buffer of type T","sig":null,"attributes":[{"value":"/ Converts `self` to a buffer of type T","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":727829,"byte_end":727870,"line_start":1059,"line_end":1059,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":727875,"byte_end":727878,"line_start":1060,"line_end":1060,"column_start":5,"column_end":8}},{"value":"/ A generic implementation is provided to convert any image buffer to a image buffer","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":727883,"byte_end":727969,"line_start":1061,"line_end":1061,"column_start":5,"column_end":91}},{"value":"/ based on a `Vec<T>`.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":727974,"byte_end":727998,"line_start":1062,"line_end":1062,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":3219},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":728281,"byte_end":728295,"line_start":1071,"line_end":1071,"column_start":12,"column_end":26},"name":"expand_palette","qualname":"<GrayImage>::expand_palette","value":"fn (self, palette: &[(u8, u8, u8)], transparent_idx: Option<u8>) -> RgbaImage","parent":null,"children":[],"decl_id":null,"docs":" Expands a color palette by re-using the existing buffer.\n Assumes 8 bit per pixel. Uses an optionally transparent index to\n adjust it's alpha value accordingly.\n","sig":null,"attributes":[{"value":"/ Expands a color palette by re-using the existing buffer.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":728091,"byte_end":728151,"line_start":1068,"line_end":1068,"column_start":5,"column_end":65}},{"value":"/ Assumes 8 bit per pixel. Uses an optionally transparent index to","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":728156,"byte_end":728224,"line_start":1069,"line_end":1069,"column_start":5,"column_end":73}},{"value":"/ adjust it's alpha value accordingly.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":728229,"byte_end":728269,"line_start":1070,"line_end":1070,"column_start":5,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":3228},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":730039,"byte_end":730047,"line_start":1123,"line_end":1123,"column_start":10,"column_end":18},"name":"RgbImage","qualname":"::buffer_::RgbImage","value":"ImageBuffer<Rgb<u8>, Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Sendable Rgb image buffer\n","sig":null,"attributes":[{"value":"/ Sendable Rgb image buffer","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":730000,"byte_end":730029,"line_start":1122,"line_end":1122,"column_start":1,"column_end":30}}]},{"kind":"Type","id":{"krate":0,"index":3229},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":730136,"byte_end":730145,"line_start":1125,"line_end":1125,"column_start":10,"column_end":19},"name":"RgbaImage","qualname":"::buffer_::RgbaImage","value":"ImageBuffer<Rgba<u8>, Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Sendable Rgb + alpha channel image buffer\n","sig":null,"attributes":[{"value":"/ Sendable Rgb + alpha channel image buffer","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":730081,"byte_end":730126,"line_start":1124,"line_end":1124,"column_start":1,"column_end":46}}]},{"kind":"Type","id":{"krate":0,"index":3230},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":730225,"byte_end":730234,"line_start":1127,"line_end":1127,"column_start":10,"column_end":19},"name":"GrayImage","qualname":"::buffer_::GrayImage","value":"ImageBuffer<Luma<u8>, Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Sendable grayscale image buffer\n","sig":null,"attributes":[{"value":"/ Sendable grayscale image buffer","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":730180,"byte_end":730215,"line_start":1126,"line_end":1126,"column_start":1,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":3231},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":730330,"byte_end":730344,"line_start":1129,"line_end":1129,"column_start":10,"column_end":24},"name":"GrayAlphaImage","qualname":"::buffer_::GrayAlphaImage","value":"ImageBuffer<LumaA<u8>, Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Sendable grayscale + alpha channel image buffer\n","sig":null,"attributes":[{"value":"/ Sendable grayscale + alpha channel image buffer","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":730269,"byte_end":730320,"line_start":1128,"line_end":1128,"column_start":1,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5335},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":738957,"byte_end":738959,"line_start":11,"line_end":11,"column_start":5,"column_end":7},"name":"L8","qualname":"::color::ColorType::L8","value":"ColorType::L8","parent":{"krate":0,"index":5334},"children":[],"decl_id":null,"docs":" Pixel is 8-bit luminance\n","sig":null,"attributes":[{"value":"/ Pixel is 8-bit luminance","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":738924,"byte_end":738952,"line_start":10,"line_end":10,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5337},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":739020,"byte_end":739023,"line_start":13,"line_end":13,"column_start":5,"column_end":8},"name":"La8","qualname":"::color::ColorType::La8","value":"ColorType::La8","parent":{"krate":0,"index":5334},"children":[],"decl_id":null,"docs":" Pixel is 8-bit luminance with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is 8-bit luminance with an alpha channel","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":738965,"byte_end":739015,"line_start":12,"line_end":12,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5339},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":739078,"byte_end":739082,"line_start":15,"line_end":15,"column_start":5,"column_end":9},"name":"Rgb8","qualname":"::color::ColorType::Rgb8","value":"ColorType::Rgb8","parent":{"krate":0,"index":5334},"children":[],"decl_id":null,"docs":" Pixel contains 8-bit R, G and B channels\n","sig":null,"attributes":[{"value":"/ Pixel contains 8-bit R, G and B channels","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":739029,"byte_end":739073,"line_start":14,"line_end":14,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5341},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":739137,"byte_end":739142,"line_start":17,"line_end":17,"column_start":5,"column_end":10},"name":"Rgba8","qualname":"::color::ColorType::Rgba8","value":"ColorType::Rgba8","parent":{"krate":0,"index":5334},"children":[],"decl_id":null,"docs":" Pixel is 8-bit RGB with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is 8-bit RGB with an alpha channel","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":739088,"byte_end":739132,"line_start":16,"line_end":16,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5343},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":739183,"byte_end":739186,"line_start":20,"line_end":20,"column_start":5,"column_end":8},"name":"L16","qualname":"::color::ColorType::L16","value":"ColorType::L16","parent":{"krate":0,"index":5334},"children":[],"decl_id":null,"docs":" Pixel is 16-bit luminance\n","sig":null,"attributes":[{"value":"/ Pixel is 16-bit luminance","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":739149,"byte_end":739178,"line_start":19,"line_end":19,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5345},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":739248,"byte_end":739252,"line_start":22,"line_end":22,"column_start":5,"column_end":9},"name":"La16","qualname":"::color::ColorType::La16","value":"ColorType::La16","parent":{"krate":0,"index":5334},"children":[],"decl_id":null,"docs":" Pixel is 16-bit luminance with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is 16-bit luminance with an alpha channel","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":739192,"byte_end":739243,"line_start":21,"line_end":21,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5347},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":739286,"byte_end":739291,"line_start":24,"line_end":24,"column_start":5,"column_end":10},"name":"Rgb16","qualname":"::color::ColorType::Rgb16","value":"ColorType::Rgb16","parent":{"krate":0,"index":5334},"children":[],"decl_id":null,"docs":" Pixel is 16-bit RGB\n","sig":null,"attributes":[{"value":"/ Pixel is 16-bit RGB","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":739258,"byte_end":739281,"line_start":23,"line_end":23,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5349},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":739326,"byte_end":739332,"line_start":26,"line_end":26,"column_start":5,"column_end":11},"name":"Rgba16","qualname":"::color::ColorType::Rgba16","value":"ColorType::Rgba16","parent":{"krate":0,"index":5334},"children":[],"decl_id":null,"docs":" Pixel is 16-bit RGBA\n","sig":null,"attributes":[{"value":"/ Pixel is 16-bit RGBA","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":739297,"byte_end":739321,"line_start":25,"line_end":25,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5351},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":739388,"byte_end":739392,"line_start":29,"line_end":29,"column_start":5,"column_end":9},"name":"Bgr8","qualname":"::color::ColorType::Bgr8","value":"ColorType::Bgr8","parent":{"krate":0,"index":5334},"children":[],"decl_id":null,"docs":" Pixel contains 8-bit B, G and R channels\n","sig":null,"attributes":[{"value":"/ Pixel contains 8-bit B, G and R channels","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":739339,"byte_end":739383,"line_start":28,"line_end":28,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5353},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":739447,"byte_end":739452,"line_start":31,"line_end":31,"column_start":5,"column_end":10},"name":"Bgra8","qualname":"::color::ColorType::Bgra8","value":"ColorType::Bgra8","parent":{"krate":0,"index":5334},"children":[],"decl_id":null,"docs":" Pixel is 8-bit BGR with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is 8-bit BGR with an alpha channel","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":739398,"byte_end":739442,"line_start":30,"line_end":30,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5355},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":739478,"byte_end":739493,"line_start":34,"line_end":34,"column_start":5,"column_end":20},"name":"__NonExhaustive","qualname":"::color::ColorType::__NonExhaustive","value":"ColorType::__NonExhaustive(crate::utils::NonExhaustiveMarker)","parent":{"krate":0,"index":5334},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5334},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":738908,"byte_end":738917,"line_start":9,"line_end":9,"column_start":10,"column_end":19},"name":"ColorType","qualname":"::color::ColorType","value":"ColorType::{L8, La8, Rgb8, Rgba8, L16, La16, Rgb16, Rgba16, Bgr8, Bgra8, __NonExhaustive}","parent":null,"children":[{"krate":0,"index":5335},{"krate":0,"index":5337},{"krate":0,"index":5339},{"krate":0,"index":5341},{"krate":0,"index":5343},{"krate":0,"index":5345},{"krate":0,"index":5347},{"krate":0,"index":5349},{"krate":0,"index":5351},{"krate":0,"index":5353},{"krate":0,"index":5355}],"decl_id":null,"docs":" An enumeration over supported color types and bit depths\n","sig":null,"attributes":[{"value":"/ An enumeration over supported color types and bit depths","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":738787,"byte_end":738847,"line_start":7,"line_end":7,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":3250},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":739641,"byte_end":739656,"line_start":39,"line_end":39,"column_start":12,"column_end":27},"name":"bytes_per_pixel","qualname":"<ColorType>::bytes_per_pixel","value":"fn (self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes contained in a pixel of `ColorType` ```c```\n","sig":null,"attributes":[{"value":"/ Returns the number of bytes contained in a pixel of `ColorType` ```c```","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":739554,"byte_end":739629,"line_start":38,"line_end":38,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":3251},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":740119,"byte_end":740128,"line_start":52,"line_end":52,"column_start":12,"column_end":21},"name":"has_alpha","qualname":"<ColorType>::has_alpha","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns if there is an alpha channel.\n","sig":null,"attributes":[{"value":"/ Returns if there is an alpha channel.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":740066,"byte_end":740107,"line_start":51,"line_end":51,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":3253},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":740467,"byte_end":740476,"line_start":62,"line_end":62,"column_start":12,"column_end":21},"name":"has_color","qualname":"<ColorType>::has_color","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns false if the color scheme is grayscale, true otherwise.\n","sig":null,"attributes":[{"value":"/ Returns false if the color scheme is grayscale, true otherwise.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":740388,"byte_end":740455,"line_start":61,"line_end":61,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":3255},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":740870,"byte_end":740884,"line_start":73,"line_end":73,"column_start":12,"column_end":26},"name":"bits_per_pixel","qualname":"<ColorType>::bits_per_pixel","value":"fn (self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bits contained in a pixel of `ColorType` ```c``` (which will always be\n a multiple of 8).\n","sig":null,"attributes":[{"value":"/ Returns the number of bits contained in a pixel of `ColorType` ```c``` (which will always be","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":740736,"byte_end":740832,"line_start":71,"line_end":71,"column_start":5,"column_end":101}},{"value":"/ a multiple of 8).","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":740837,"byte_end":740858,"line_start":72,"line_end":72,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":3256},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":741047,"byte_end":741060,"line_start":78,"line_end":78,"column_start":12,"column_end":25},"name":"channel_count","qualname":"<ColorType>::channel_count","value":"fn (self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of color channels that make up this pixel\n","sig":null,"attributes":[{"value":"/ Returns the number of color channels that make up this pixel","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":740971,"byte_end":741035,"line_start":77,"line_end":77,"column_start":5,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5374},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":741722,"byte_end":741724,"line_start":95,"line_end":95,"column_start":5,"column_end":7},"name":"L1","qualname":"::color::ExtendedColorType::L1","value":"ExtendedColorType::L1","parent":{"krate":0,"index":5373},"children":[],"decl_id":null,"docs":" Pixel is 1-bit luminance\n","sig":null,"attributes":[{"value":"/ Pixel is 1-bit luminance","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":741689,"byte_end":741717,"line_start":94,"line_end":94,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5376},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":741785,"byte_end":741788,"line_start":97,"line_end":97,"column_start":5,"column_end":8},"name":"La1","qualname":"::color::ExtendedColorType::La1","value":"ExtendedColorType::La1","parent":{"krate":0,"index":5373},"children":[],"decl_id":null,"docs":" Pixel is 1-bit luminance with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is 1-bit luminance with an alpha channel","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":741730,"byte_end":741780,"line_start":96,"line_end":96,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5378},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":741843,"byte_end":741847,"line_start":99,"line_end":99,"column_start":5,"column_end":9},"name":"Rgb1","qualname":"::color::ExtendedColorType::Rgb1","value":"ExtendedColorType::Rgb1","parent":{"krate":0,"index":5373},"children":[],"decl_id":null,"docs":" Pixel contains 1-bit R, G and B channels\n","sig":null,"attributes":[{"value":"/ Pixel contains 1-bit R, G and B channels","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":741794,"byte_end":741838,"line_start":98,"line_end":98,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5380},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":741902,"byte_end":741907,"line_start":101,"line_end":101,"column_start":5,"column_end":10},"name":"Rgba1","qualname":"::color::ExtendedColorType::Rgba1","value":"ExtendedColorType::Rgba1","parent":{"krate":0,"index":5373},"children":[],"decl_id":null,"docs":" Pixel is 1-bit RGB with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is 1-bit RGB with an alpha channel","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":741853,"byte_end":741897,"line_start":100,"line_end":100,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5382},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":741946,"byte_end":741948,"line_start":103,"line_end":103,"column_start":5,"column_end":7},"name":"L2","qualname":"::color::ExtendedColorType::L2","value":"ExtendedColorType::L2","parent":{"krate":0,"index":5373},"children":[],"decl_id":null,"docs":" Pixel is 2-bit luminance\n","sig":null,"attributes":[{"value":"/ Pixel is 2-bit luminance","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":741913,"byte_end":741941,"line_start":102,"line_end":102,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5384},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":742009,"byte_end":742012,"line_start":105,"line_end":105,"column_start":5,"column_end":8},"name":"La2","qualname":"::color::ExtendedColorType::La2","value":"ExtendedColorType::La2","parent":{"krate":0,"index":5373},"children":[],"decl_id":null,"docs":" Pixel is 2-bit luminance with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is 2-bit luminance with an alpha channel","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":741954,"byte_end":742004,"line_start":104,"line_end":104,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5386},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":742067,"byte_end":742071,"line_start":107,"line_end":107,"column_start":5,"column_end":9},"name":"Rgb2","qualname":"::color::ExtendedColorType::Rgb2","value":"ExtendedColorType::Rgb2","parent":{"krate":0,"index":5373},"children":[],"decl_id":null,"docs":" Pixel contains 2-bit R, G and B channels\n","sig":null,"attributes":[{"value":"/ Pixel contains 2-bit R, G and B channels","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":742018,"byte_end":742062,"line_start":106,"line_end":106,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5388},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":742126,"byte_end":742131,"line_start":109,"line_end":109,"column_start":5,"column_end":10},"name":"Rgba2","qualname":"::color::ExtendedColorType::Rgba2","value":"ExtendedColorType::Rgba2","parent":{"krate":0,"index":5373},"children":[],"decl_id":null,"docs":" Pixel is 2-bit RGB with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is 2-bit RGB with an alpha channel","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":742077,"byte_end":742121,"line_start":108,"line_end":108,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5390},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":742170,"byte_end":742172,"line_start":111,"line_end":111,"column_start":5,"column_end":7},"name":"L4","qualname":"::color::ExtendedColorType::L4","value":"ExtendedColorType::L4","parent":{"krate":0,"index":5373},"children":[],"decl_id":null,"docs":" Pixel is 4-bit luminance\n","sig":null,"attributes":[{"value":"/ Pixel is 4-bit luminance","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":742137,"byte_end":742165,"line_start":110,"line_end":110,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5392},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":742233,"byte_end":742236,"line_start":113,"line_end":113,"column_start":5,"column_end":8},"name":"La4","qualname":"::color::ExtendedColorType::La4","value":"ExtendedColorType::La4","parent":{"krate":0,"index":5373},"children":[],"decl_id":null,"docs":" Pixel is 4-bit luminance with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is 4-bit luminance with an alpha channel","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":742178,"byte_end":742228,"line_start":112,"line_end":112,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5394},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":742291,"byte_end":742295,"line_start":115,"line_end":115,"column_start":5,"column_end":9},"name":"Rgb4","qualname":"::color::ExtendedColorType::Rgb4","value":"ExtendedColorType::Rgb4","parent":{"krate":0,"index":5373},"children":[],"decl_id":null,"docs":" Pixel contains 4-bit R, G and B channels\n","sig":null,"attributes":[{"value":"/ Pixel contains 4-bit R, G and B channels","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":742242,"byte_end":742286,"line_start":114,"line_end":114,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5396},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":742350,"byte_end":742355,"line_start":117,"line_end":117,"column_start":5,"column_end":10},"name":"Rgba4","qualname":"::color::ExtendedColorType::Rgba4","value":"ExtendedColorType::Rgba4","parent":{"krate":0,"index":5373},"children":[],"decl_id":null,"docs":" Pixel is 4-bit RGB with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is 4-bit RGB with an alpha channel","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":742301,"byte_end":742345,"line_start":116,"line_end":116,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5398},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":742394,"byte_end":742396,"line_start":119,"line_end":119,"column_start":5,"column_end":7},"name":"L8","qualname":"::color::ExtendedColorType::L8","value":"ExtendedColorType::L8","parent":{"krate":0,"index":5373},"children":[],"decl_id":null,"docs":" Pixel is 8-bit luminance\n","sig":null,"attributes":[{"value":"/ Pixel is 8-bit luminance","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":742361,"byte_end":742389,"line_start":118,"line_end":118,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5400},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":742457,"byte_end":742460,"line_start":121,"line_end":121,"column_start":5,"column_end":8},"name":"La8","qualname":"::color::ExtendedColorType::La8","value":"ExtendedColorType::La8","parent":{"krate":0,"index":5373},"children":[],"decl_id":null,"docs":" Pixel is 8-bit luminance with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is 8-bit luminance with an alpha channel","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":742402,"byte_end":742452,"line_start":120,"line_end":120,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5402},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":742515,"byte_end":742519,"line_start":123,"line_end":123,"column_start":5,"column_end":9},"name":"Rgb8","qualname":"::color::ExtendedColorType::Rgb8","value":"ExtendedColorType::Rgb8","parent":{"krate":0,"index":5373},"children":[],"decl_id":null,"docs":" Pixel contains 8-bit R, G and B channels\n","sig":null,"attributes":[{"value":"/ Pixel contains 8-bit R, G and B channels","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":742466,"byte_end":742510,"line_start":122,"line_end":122,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5404},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":742574,"byte_end":742579,"line_start":125,"line_end":125,"column_start":5,"column_end":10},"name":"Rgba8","qualname":"::color::ExtendedColorType::Rgba8","value":"ExtendedColorType::Rgba8","parent":{"krate":0,"index":5373},"children":[],"decl_id":null,"docs":" Pixel is 8-bit RGB with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is 8-bit RGB with an alpha channel","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":742525,"byte_end":742569,"line_start":124,"line_end":124,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5406},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":742619,"byte_end":742622,"line_start":127,"line_end":127,"column_start":5,"column_end":8},"name":"L16","qualname":"::color::ExtendedColorType::L16","value":"ExtendedColorType::L16","parent":{"krate":0,"index":5373},"children":[],"decl_id":null,"docs":" Pixel is 16-bit luminance\n","sig":null,"attributes":[{"value":"/ Pixel is 16-bit luminance","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":742585,"byte_end":742614,"line_start":126,"line_end":126,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5408},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":742684,"byte_end":742688,"line_start":129,"line_end":129,"column_start":5,"column_end":9},"name":"La16","qualname":"::color::ExtendedColorType::La16","value":"ExtendedColorType::La16","parent":{"krate":0,"index":5373},"children":[],"decl_id":null,"docs":" Pixel is 16-bit luminance with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is 16-bit luminance with an alpha channel","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":742628,"byte_end":742679,"line_start":128,"line_end":128,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5410},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":742744,"byte_end":742749,"line_start":131,"line_end":131,"column_start":5,"column_end":10},"name":"Rgb16","qualname":"::color::ExtendedColorType::Rgb16","value":"ExtendedColorType::Rgb16","parent":{"krate":0,"index":5373},"children":[],"decl_id":null,"docs":" Pixel contains 16-bit R, G and B channels\n","sig":null,"attributes":[{"value":"/ Pixel contains 16-bit R, G and B channels","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":742694,"byte_end":742739,"line_start":130,"line_end":130,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5412},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":742805,"byte_end":742811,"line_start":133,"line_end":133,"column_start":5,"column_end":11},"name":"Rgba16","qualname":"::color::ExtendedColorType::Rgba16","value":"ExtendedColorType::Rgba16","parent":{"krate":0,"index":5373},"children":[],"decl_id":null,"docs":" Pixel is 16-bit RGB with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is 16-bit RGB with an alpha channel","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":742755,"byte_end":742800,"line_start":132,"line_end":132,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5414},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":742866,"byte_end":742870,"line_start":135,"line_end":135,"column_start":5,"column_end":9},"name":"Bgr8","qualname":"::color::ExtendedColorType::Bgr8","value":"ExtendedColorType::Bgr8","parent":{"krate":0,"index":5373},"children":[],"decl_id":null,"docs":" Pixel contains 8-bit B, G and R channels\n","sig":null,"attributes":[{"value":"/ Pixel contains 8-bit B, G and R channels","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":742817,"byte_end":742861,"line_start":134,"line_end":134,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5416},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":742925,"byte_end":742930,"line_start":137,"line_end":137,"column_start":5,"column_end":10},"name":"Bgra8","qualname":"::color::ExtendedColorType::Bgra8","value":"ExtendedColorType::Bgra8","parent":{"krate":0,"index":5373},"children":[],"decl_id":null,"docs":" Pixel is 8-bit BGR with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is 8-bit BGR with an alpha channel","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":742876,"byte_end":742920,"line_start":136,"line_end":136,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5418},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":743159,"byte_end":743166,"line_start":142,"line_end":142,"column_start":5,"column_end":12},"name":"Unknown","qualname":"::color::ExtendedColorType::Unknown","value":"ExtendedColorType::Unknown(u8)","parent":{"krate":0,"index":5373},"children":[],"decl_id":null,"docs":" Pixel is of unknown color type with the specified bits per pixel. This can apply to pixels\n which are associated with an external palette. In that case, the pixel value is an index\n into the palette.\n","sig":null,"attributes":[{"value":"/ Pixel is of unknown color type with the specified bits per pixel. This can apply to pixels","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":742937,"byte_end":743031,"line_start":139,"line_end":139,"column_start":5,"column_end":99}},{"value":"/ which are associated with an external palette. In that case, the pixel value is an index","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":743036,"byte_end":743128,"line_start":140,"line_end":140,"column_start":5,"column_end":97}},{"value":"/ into the palette.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":743133,"byte_end":743154,"line_start":141,"line_end":141,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5421},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":743196,"byte_end":743211,"line_start":145,"line_end":145,"column_start":5,"column_end":20},"name":"__NonExhaustive","qualname":"::color::ExtendedColorType::__NonExhaustive","value":"ExtendedColorType::__NonExhaustive(crate::utils::NonExhaustiveMarker)","parent":{"krate":0,"index":5373},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5373},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":741665,"byte_end":741682,"line_start":93,"line_end":93,"column_start":10,"column_end":27},"name":"ExtendedColorType","qualname":"::color::ExtendedColorType","value":"ExtendedColorType::{L1, La1, Rgb1, Rgba1, L2, La2, Rgb2, Rgba2, L4, La4, Rgb4, Rgba4, L8, La8, Rgb8, Rgba8, L16, La16, Rgb16, Rgba16, Bgr8, Bgra8, Unknown, __NonExhaustive}","parent":null,"children":[{"krate":0,"index":5374},{"krate":0,"index":5376},{"krate":0,"index":5378},{"krate":0,"index":5380},{"krate":0,"index":5382},{"krate":0,"index":5384},{"krate":0,"index":5386},{"krate":0,"index":5388},{"krate":0,"index":5390},{"krate":0,"index":5392},{"krate":0,"index":5394},{"krate":0,"index":5396},{"krate":0,"index":5398},{"krate":0,"index":5400},{"krate":0,"index":5402},{"krate":0,"index":5404},{"krate":0,"index":5406},{"krate":0,"index":5408},{"krate":0,"index":5410},{"krate":0,"index":5412},{"krate":0,"index":5414},{"krate":0,"index":5416},{"krate":0,"index":5418},{"krate":0,"index":5421}],"decl_id":null,"docs":" An enumeration of color types encountered in image formats.","sig":null,"attributes":[{"value":"/ An enumeration of color types encountered in image formats.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":741158,"byte_end":741221,"line_start":84,"line_end":84,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":741222,"byte_end":741225,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ This is not exhaustive over all existing image formats but should be granular enough to allow","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":741226,"byte_end":741323,"line_start":86,"line_end":86,"column_start":1,"column_end":98}},{"value":"/ round tripping of decoding and encoding as much as possible. The variants will be extended as","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":741324,"byte_end":741421,"line_start":87,"line_end":87,"column_start":1,"column_end":98}},{"value":"/ necessary to enable this.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":741422,"byte_end":741451,"line_start":88,"line_end":88,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":741452,"byte_end":741455,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ Another purpose is to advise users of a rough estimate of the accuracy and effort of the","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":741456,"byte_end":741548,"line_start":90,"line_end":90,"column_start":1,"column_end":93}},{"value":"/ decoding from and encoding to such an image format.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":741549,"byte_end":741604,"line_start":91,"line_end":91,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":3258},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":743494,"byte_end":743507,"line_start":153,"line_end":153,"column_start":12,"column_end":25},"name":"channel_count","qualname":"<ExtendedColorType>::channel_count","value":"fn (self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the number of channels for colors of this type.","sig":null,"attributes":[{"value":"/ Get the number of channels for colors of this type.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":743280,"byte_end":743335,"line_start":149,"line_end":149,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":743340,"byte_end":743343,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ Note that the `Unknown` variant returns a value of `1` since pixels can only be treated as","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":743348,"byte_end":743442,"line_start":151,"line_end":151,"column_start":5,"column_end":99}},{"value":"/ an opaque datum by the library.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":743447,"byte_end":743482,"line_start":152,"line_end":152,"column_start":5,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":5739},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":749871,"byte_end":749874,"line_start":373,"line_end":373,"column_start":5,"column_end":8},"name":"Rgb","qualname":"::color::Rgb","value":"","parent":null,"children":[],"decl_id":null,"docs":"RGB colors\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":745621,"byte_end":745631,"line_start":215,"line_end":215,"column_start":1,"column_end":11}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":745632,"byte_end":745654,"line_start":216,"line_end":216,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":5768},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":749951,"byte_end":749954,"line_start":374,"line_end":374,"column_start":5,"column_end":8},"name":"Bgr","qualname":"::color::Bgr","value":"","parent":null,"children":[],"decl_id":null,"docs":"BGR colors\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":745621,"byte_end":745631,"line_start":215,"line_end":215,"column_start":1,"column_end":11}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":745632,"byte_end":745654,"line_start":216,"line_end":216,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":5797},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":750030,"byte_end":750034,"line_start":375,"line_end":375,"column_start":5,"column_end":9},"name":"Luma","qualname":"::color::Luma","value":"","parent":null,"children":[],"decl_id":null,"docs":"Grayscale colors\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":745621,"byte_end":745631,"line_start":215,"line_end":215,"column_start":1,"column_end":11}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":745632,"byte_end":745654,"line_start":216,"line_end":216,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":5826},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":750111,"byte_end":750115,"line_start":376,"line_end":376,"column_start":5,"column_end":9},"name":"Rgba","qualname":"::color::Rgba","value":"","parent":null,"children":[],"decl_id":null,"docs":"RGB colors + alpha channel\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":745621,"byte_end":745631,"line_start":215,"line_end":215,"column_start":1,"column_end":11}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":745632,"byte_end":745654,"line_start":216,"line_end":216,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":5855},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":750211,"byte_end":750215,"line_start":377,"line_end":377,"column_start":5,"column_end":9},"name":"Bgra","qualname":"::color::Bgra","value":"","parent":null,"children":[],"decl_id":null,"docs":"BGR colors + alpha channel\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":745621,"byte_end":745631,"line_start":215,"line_end":215,"column_start":1,"column_end":11}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":745632,"byte_end":745654,"line_start":216,"line_end":216,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":5884},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":750310,"byte_end":750315,"line_start":378,"line_end":378,"column_start":5,"column_end":10},"name":"LumaA","qualname":"::color::LumaA","value":"","parent":null,"children":[],"decl_id":null,"docs":"Grayscale colors + alpha channel\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":745621,"byte_end":745631,"line_start":215,"line_end":215,"column_start":1,"column_end":11}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":745632,"byte_end":745654,"line_start":216,"line_end":216,"column_start":1,"column_end":23}}]},{"kind":"Trait","id":{"krate":0,"index":3262},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":750482,"byte_end":750491,"line_start":382,"line_end":382,"column_start":11,"column_end":20},"name":"FromColor","qualname":"::color::FromColor","value":"FromColor<Other>","parent":null,"children":[{"krate":0,"index":3264}],"decl_id":null,"docs":" Provides color conversions for the different pixel types.\n","sig":null,"attributes":[{"value":"/ Provides color conversions for the different pixel types.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":750410,"byte_end":750471,"line_start":381,"line_end":381,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":3264},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":750581,"byte_end":750591,"line_start":384,"line_end":384,"column_start":8,"column_end":18},"name":"from_color","qualname":"::color::FromColor::from_color","value":"fn (&mut self, _: &Other) -> ()","parent":{"krate":0,"index":3262},"children":[],"decl_id":null,"docs":" Changes `self` to represent `Other` in the color space of `Self`\n","sig":null,"attributes":[{"value":"/ Changes `self` to represent `Other` in the color space of `Self`","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":750505,"byte_end":750573,"line_start":383,"line_end":383,"column_start":5,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5965},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":778510,"byte_end":778520,"line_start":42,"line_end":42,"column_start":5,"column_end":15},"name":"ImageLuma8","qualname":"::dynimage::DynamicImage::ImageLuma8","value":"DynamicImage::ImageLuma8(GrayImage)","parent":{"krate":0,"index":5964},"children":[],"decl_id":null,"docs":" Each pixel in this image is 8-bit Luma\n","sig":null,"attributes":[{"value":"/ Each pixel in this image is 8-bit Luma","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":778463,"byte_end":778505,"line_start":41,"line_end":41,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5968},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":778596,"byte_end":778607,"line_start":45,"line_end":45,"column_start":5,"column_end":16},"name":"ImageLumaA8","qualname":"::dynimage::DynamicImage::ImageLumaA8","value":"DynamicImage::ImageLumaA8(GrayAlphaImage)","parent":{"krate":0,"index":5964},"children":[],"decl_id":null,"docs":" Each pixel in this image is 8-bit Luma with alpha\n","sig":null,"attributes":[{"value":"/ Each pixel in this image is 8-bit Luma with alpha","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":778538,"byte_end":778591,"line_start":44,"line_end":44,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5971},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":778676,"byte_end":778685,"line_start":48,"line_end":48,"column_start":5,"column_end":14},"name":"ImageRgb8","qualname":"::dynimage::DynamicImage::ImageRgb8","value":"DynamicImage::ImageRgb8(RgbImage)","parent":{"krate":0,"index":5964},"children":[],"decl_id":null,"docs":" Each pixel in this image is 8-bit Rgb\n","sig":null,"attributes":[{"value":"/ Each pixel in this image is 8-bit Rgb","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":778630,"byte_end":778671,"line_start":47,"line_end":47,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5974},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":778759,"byte_end":778769,"line_start":51,"line_end":51,"column_start":5,"column_end":15},"name":"ImageRgba8","qualname":"::dynimage::DynamicImage::ImageRgba8","value":"DynamicImage::ImageRgba8(RgbaImage)","parent":{"krate":0,"index":5964},"children":[],"decl_id":null,"docs":" Each pixel in this image is 8-bit Rgb with alpha\n","sig":null,"attributes":[{"value":"/ Each pixel in this image is 8-bit Rgb with alpha","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":778702,"byte_end":778754,"line_start":50,"line_end":50,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5977},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":778833,"byte_end":778842,"line_start":54,"line_end":54,"column_start":5,"column_end":14},"name":"ImageBgr8","qualname":"::dynimage::DynamicImage::ImageBgr8","value":"DynamicImage::ImageBgr8(BgrImage)","parent":{"krate":0,"index":5964},"children":[],"decl_id":null,"docs":" Each pixel in this image is 8-bit Bgr\n","sig":null,"attributes":[{"value":"/ Each pixel in this image is 8-bit Bgr","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":778787,"byte_end":778828,"line_start":53,"line_end":53,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5980},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":778916,"byte_end":778926,"line_start":57,"line_end":57,"column_start":5,"column_end":15},"name":"ImageBgra8","qualname":"::dynimage::DynamicImage::ImageBgra8","value":"DynamicImage::ImageBgra8(BgraImage)","parent":{"krate":0,"index":5964},"children":[],"decl_id":null,"docs":" Each pixel in this image is 8-bit Bgr with alpha\n","sig":null,"attributes":[{"value":"/ Each pixel in this image is 8-bit Bgr with alpha","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":778859,"byte_end":778911,"line_start":56,"line_end":56,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5983},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":778992,"byte_end":779003,"line_start":60,"line_end":60,"column_start":5,"column_end":16},"name":"ImageLuma16","qualname":"::dynimage::DynamicImage::ImageLuma16","value":"DynamicImage::ImageLuma16(Gray16Image)","parent":{"krate":0,"index":5964},"children":[],"decl_id":null,"docs":" Each pixel in this image is 16-bit Luma\n","sig":null,"attributes":[{"value":"/ Each pixel in this image is 16-bit Luma","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":778944,"byte_end":778987,"line_start":59,"line_end":59,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5986},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":779082,"byte_end":779094,"line_start":63,"line_end":63,"column_start":5,"column_end":17},"name":"ImageLumaA16","qualname":"::dynimage::DynamicImage::ImageLumaA16","value":"DynamicImage::ImageLumaA16(GrayAlpha16Image)","parent":{"krate":0,"index":5964},"children":[],"decl_id":null,"docs":" Each pixel in this image is 16-bit Luma with alpha\n","sig":null,"attributes":[{"value":"/ Each pixel in this image is 16-bit Luma with alpha","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":779023,"byte_end":779077,"line_start":62,"line_end":62,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5989},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":779166,"byte_end":779176,"line_start":66,"line_end":66,"column_start":5,"column_end":15},"name":"ImageRgb16","qualname":"::dynimage::DynamicImage::ImageRgb16","value":"DynamicImage::ImageRgb16(Rgb16Image)","parent":{"krate":0,"index":5964},"children":[],"decl_id":null,"docs":" Each pixel in this image is 16-bit Rgb\n","sig":null,"attributes":[{"value":"/ Each pixel in this image is 16-bit Rgb","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":779119,"byte_end":779161,"line_start":65,"line_end":65,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5992},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":779253,"byte_end":779264,"line_start":69,"line_end":69,"column_start":5,"column_end":16},"name":"ImageRgba16","qualname":"::dynimage::DynamicImage::ImageRgba16","value":"DynamicImage::ImageRgba16(Rgba16Image)","parent":{"krate":0,"index":5964},"children":[],"decl_id":null,"docs":" Each pixel in this image is 16-bit Rgb with alpha\n","sig":null,"attributes":[{"value":"/ Each pixel in this image is 16-bit Rgb with alpha","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":779195,"byte_end":779248,"line_start":68,"line_end":68,"column_start":5,"column_end":58}}]},{"kind":"Enum","id":{"krate":0,"index":5964},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":778444,"byte_end":778456,"line_start":40,"line_end":40,"column_start":10,"column_end":22},"name":"DynamicImage","qualname":"::dynimage::DynamicImage","value":"DynamicImage::{ImageLuma8, ImageLumaA8, ImageRgb8, ImageRgba8, ImageBgr8, ImageBgra8, ImageLuma16, ImageLumaA16, ImageRgb16, ImageRgba16}","parent":null,"children":[{"krate":0,"index":5965},{"krate":0,"index":5968},{"krate":0,"index":5971},{"krate":0,"index":5974},{"krate":0,"index":5977},{"krate":0,"index":5980},{"krate":0,"index":5983},{"krate":0,"index":5986},{"krate":0,"index":5989},{"krate":0,"index":5992}],"decl_id":null,"docs":" A Dynamic Image\n","sig":null,"attributes":[{"value":"/ A Dynamic Image","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":778398,"byte_end":778417,"line_start":38,"line_end":38,"column_start":1,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3487},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":783479,"byte_end":783488,"line_start":136,"line_end":136,"column_start":12,"column_end":21},"name":"new_luma8","qualname":"<DynamicImage>::new_luma8","value":"fn (w: u32, h: u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of grey pixels.\n","sig":null,"attributes":[{"value":"/ Creates a dynamic image backed by a buffer of grey pixels.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":783405,"byte_end":783467,"line_start":135,"line_end":135,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":3488},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":783691,"byte_end":783702,"line_start":142,"line_end":142,"column_start":12,"column_end":23},"name":"new_luma_a8","qualname":"<DynamicImage>::new_luma_a8","value":"fn (w: u32, h: u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of grey\n pixels with transparency.\n","sig":null,"attributes":[{"value":"/ Creates a dynamic image backed by a buffer of grey","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":783591,"byte_end":783645,"line_start":140,"line_end":140,"column_start":5,"column_end":59}},{"value":"/ pixels with transparency.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":783650,"byte_end":783679,"line_start":141,"line_end":141,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":3489},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":783879,"byte_end":783887,"line_start":147,"line_end":147,"column_start":12,"column_end":20},"name":"new_rgb8","qualname":"<DynamicImage>::new_rgb8","value":"fn (w: u32, h: u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of RGB pixels.\n","sig":null,"attributes":[{"value":"/ Creates a dynamic image backed by a buffer of RGB pixels.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":783806,"byte_end":783867,"line_start":146,"line_end":146,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":3490},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":784063,"byte_end":784072,"line_start":152,"line_end":152,"column_start":12,"column_end":21},"name":"new_rgba8","qualname":"<DynamicImage>::new_rgba8","value":"fn (w: u32, h: u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of RGBA pixels.\n","sig":null,"attributes":[{"value":"/ Creates a dynamic image backed by a buffer of RGBA pixels.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":783989,"byte_end":784051,"line_start":151,"line_end":151,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":3491},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":784249,"byte_end":784258,"line_start":157,"line_end":157,"column_start":12,"column_end":21},"name":"new_bgra8","qualname":"<DynamicImage>::new_bgra8","value":"fn (w: u32, h: u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of BGRA pixels.\n","sig":null,"attributes":[{"value":"/ Creates a dynamic image backed by a buffer of BGRA pixels.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":784175,"byte_end":784237,"line_start":156,"line_end":156,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":3492},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":784434,"byte_end":784442,"line_start":162,"line_end":162,"column_start":12,"column_end":20},"name":"new_bgr8","qualname":"<DynamicImage>::new_bgr8","value":"fn (w: u32, h: u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of BGR pixels.\n","sig":null,"attributes":[{"value":"/ Creates a dynamic image backed by a buffer of BGR pixels.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":784361,"byte_end":784422,"line_start":161,"line_end":161,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":3493},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":784618,"byte_end":784628,"line_start":167,"line_end":167,"column_start":12,"column_end":22},"name":"new_luma16","qualname":"<DynamicImage>::new_luma16","value":"fn (w: u32, h: u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of grey pixels.\n","sig":null,"attributes":[{"value":"/ Creates a dynamic image backed by a buffer of grey pixels.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":784544,"byte_end":784606,"line_start":166,"line_end":166,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":3494},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":784832,"byte_end":784844,"line_start":173,"line_end":173,"column_start":12,"column_end":24},"name":"new_luma_a16","qualname":"<DynamicImage>::new_luma_a16","value":"fn (w: u32, h: u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of grey\n pixels with transparency.\n","sig":null,"attributes":[{"value":"/ Creates a dynamic image backed by a buffer of grey","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":784732,"byte_end":784786,"line_start":171,"line_end":171,"column_start":5,"column_end":59}},{"value":"/ pixels with transparency.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":784791,"byte_end":784820,"line_start":172,"line_end":172,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":3495},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":785022,"byte_end":785031,"line_start":178,"line_end":178,"column_start":12,"column_end":21},"name":"new_rgb16","qualname":"<DynamicImage>::new_rgb16","value":"fn (w: u32, h: u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of RGB pixels.\n","sig":null,"attributes":[{"value":"/ Creates a dynamic image backed by a buffer of RGB pixels.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":784949,"byte_end":785010,"line_start":177,"line_end":177,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":3496},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":785208,"byte_end":785218,"line_start":183,"line_end":183,"column_start":12,"column_end":22},"name":"new_rgba16","qualname":"<DynamicImage>::new_rgba16","value":"fn (w: u32, h: u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of RGBA pixels.\n","sig":null,"attributes":[{"value":"/ Creates a dynamic image backed by a buffer of RGBA pixels.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":785134,"byte_end":785196,"line_start":182,"line_end":182,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":3497},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":785384,"byte_end":785396,"line_start":188,"line_end":188,"column_start":12,"column_end":24},"name":"from_decoder","qualname":"<DynamicImage>::from_decoder","value":"fn <'a> (decoder: impl ImageDecoder<'a>) -> ImageResult<Self>","parent":null,"children":[],"decl_id":null,"docs":" Decodes an encoded image into a dynamic image.\n","sig":null,"attributes":[{"value":"/ Decodes an encoded image into a dynamic image.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":785322,"byte_end":785372,"line_start":187,"line_end":187,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3500},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":785574,"byte_end":785580,"line_start":195,"line_end":195,"column_start":12,"column_end":18},"name":"to_rgb","qualname":"<DynamicImage>::to_rgb","value":"fn (&self) -> RgbImage","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as an RGB image.\n","sig":null,"attributes":[{"value":"/ Returns a copy of this image as an RGB image.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":785513,"byte_end":785562,"line_start":194,"line_end":194,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3501},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":785749,"byte_end":785756,"line_start":202,"line_end":202,"column_start":12,"column_end":19},"name":"to_rgba","qualname":"<DynamicImage>::to_rgba","value":"fn (&self) -> RgbaImage","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as an RGBA image.\n","sig":null,"attributes":[{"value":"/ Returns a copy of this image as an RGBA image.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":785687,"byte_end":785737,"line_start":201,"line_end":201,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3502},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":785925,"byte_end":785931,"line_start":209,"line_end":209,"column_start":12,"column_end":18},"name":"to_bgr","qualname":"<DynamicImage>::to_bgr","value":"fn (&self) -> BgrImage","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as an BGR image.\n","sig":null,"attributes":[{"value":"/ Returns a copy of this image as an BGR image.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":785864,"byte_end":785913,"line_start":208,"line_end":208,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3503},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":786100,"byte_end":786107,"line_start":216,"line_end":216,"column_start":12,"column_end":19},"name":"to_bgra","qualname":"<DynamicImage>::to_bgra","value":"fn (&self) -> BgraImage","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as an BGRA image.\n","sig":null,"attributes":[{"value":"/ Returns a copy of this image as an BGRA image.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":786038,"byte_end":786088,"line_start":215,"line_end":215,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3504},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":786276,"byte_end":786283,"line_start":223,"line_end":223,"column_start":12,"column_end":19},"name":"to_luma","qualname":"<DynamicImage>::to_luma","value":"fn (&self) -> GrayImage","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as a Luma image.\n","sig":null,"attributes":[{"value":"/ Returns a copy of this image as a Luma image.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":786215,"byte_end":786264,"line_start":222,"line_end":222,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3505},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":786453,"byte_end":786466,"line_start":230,"line_end":230,"column_start":12,"column_end":25},"name":"to_luma_alpha","qualname":"<DynamicImage>::to_luma_alpha","value":"fn (&self) -> GrayAlphaImage","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as a LumaA image.\n","sig":null,"attributes":[{"value":"/ Returns a copy of this image as a LumaA image.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":786391,"byte_end":786441,"line_start":229,"line_end":229,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3506},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":786758,"byte_end":786766,"line_start":240,"line_end":240,"column_start":12,"column_end":20},"name":"into_rgb","qualname":"<DynamicImage>::into_rgb","value":"fn (self) -> RgbImage","parent":null,"children":[],"decl_id":null,"docs":" Consume the image and returns a RGB image.","sig":null,"attributes":[{"value":"/ Consume the image and returns a RGB image.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":786579,"byte_end":786625,"line_start":236,"line_end":236,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":786630,"byte_end":786633,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ If the image was already the correct format, it is returned as is.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":786638,"byte_end":786708,"line_start":238,"line_end":238,"column_start":5,"column_end":75}},{"value":"/ Otherwise, a copy is created.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":786713,"byte_end":786746,"line_start":239,"line_end":239,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":3507},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":787083,"byte_end":787092,"line_start":251,"line_end":251,"column_start":12,"column_end":21},"name":"into_rgba","qualname":"<DynamicImage>::into_rgba","value":"fn (self) -> RgbaImage","parent":null,"children":[],"decl_id":null,"docs":" Consume the image and returns a RGBA image.","sig":null,"attributes":[{"value":"/ Consume the image and returns a RGBA image.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":786903,"byte_end":786950,"line_start":247,"line_end":247,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":786955,"byte_end":786958,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ If the image was already the correct format, it is returned as is.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":786963,"byte_end":787033,"line_start":249,"line_end":249,"column_start":5,"column_end":75}},{"value":"/ Otherwise, a copy is created.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":787038,"byte_end":787071,"line_start":250,"line_end":250,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":3508},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":787411,"byte_end":787419,"line_start":262,"line_end":262,"column_start":12,"column_end":20},"name":"into_bgr","qualname":"<DynamicImage>::into_bgr","value":"fn (self) -> BgrImage","parent":null,"children":[],"decl_id":null,"docs":" Consume the image and returns a BGR image.","sig":null,"attributes":[{"value":"/ Consume the image and returns a BGR image.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":787232,"byte_end":787278,"line_start":258,"line_end":258,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":787283,"byte_end":787286,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ If the image was already the correct format, it is returned as is.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":787291,"byte_end":787361,"line_start":260,"line_end":260,"column_start":5,"column_end":75}},{"value":"/ Otherwise, a copy is created.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":787366,"byte_end":787399,"line_start":261,"line_end":261,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":3509},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":787736,"byte_end":787745,"line_start":273,"line_end":273,"column_start":12,"column_end":21},"name":"into_bgra","qualname":"<DynamicImage>::into_bgra","value":"fn (self) -> BgraImage","parent":null,"children":[],"decl_id":null,"docs":" Consume the image and returns a BGRA image.","sig":null,"attributes":[{"value":"/ Consume the image and returns a BGRA image.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":787556,"byte_end":787603,"line_start":269,"line_end":269,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":787608,"byte_end":787611,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ If the image was already the correct format, it is returned as is.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":787616,"byte_end":787686,"line_start":271,"line_end":271,"column_start":5,"column_end":75}},{"value":"/ Otherwise, a copy is created.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":787691,"byte_end":787724,"line_start":272,"line_end":272,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":3510},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":788065,"byte_end":788074,"line_start":284,"line_end":284,"column_start":12,"column_end":21},"name":"into_luma","qualname":"<DynamicImage>::into_luma","value":"fn (self) -> GrayImage","parent":null,"children":[],"decl_id":null,"docs":" Consume the image and returns a Luma image.","sig":null,"attributes":[{"value":"/ Consume the image and returns a Luma image.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":787885,"byte_end":787932,"line_start":280,"line_end":280,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":787937,"byte_end":787940,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ If the image was already the correct format, it is returned as is.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":787945,"byte_end":788015,"line_start":282,"line_end":282,"column_start":5,"column_end":75}},{"value":"/ Otherwise, a copy is created.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":788020,"byte_end":788053,"line_start":283,"line_end":283,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":3511},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":788395,"byte_end":788410,"line_start":295,"line_end":295,"column_start":12,"column_end":27},"name":"into_luma_alpha","qualname":"<DynamicImage>::into_luma_alpha","value":"fn (self) -> GrayAlphaImage","parent":null,"children":[],"decl_id":null,"docs":" Consume the image and returns a LumaA image.","sig":null,"attributes":[{"value":"/ Consume the image and returns a LumaA image.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":788214,"byte_end":788262,"line_start":291,"line_end":291,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":788267,"byte_end":788270,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ If the image was already the correct format, it is returned as is.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":788275,"byte_end":788345,"line_start":293,"line_end":293,"column_start":5,"column_end":75}},{"value":"/ Otherwise, a copy is created.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":788350,"byte_end":788383,"line_start":294,"line_end":294,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":3512},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":788792,"byte_end":788796,"line_start":306,"line_end":306,"column_start":12,"column_end":16},"name":"crop","qualname":"<DynamicImage>::crop","value":"fn (&mut self, x: u32, y: u32, width: u32, height: u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Return a cut-out of this image delimited by the bounding rectangle.","sig":null,"attributes":[{"value":"/ Return a cut-out of this image delimited by the bounding rectangle.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":788562,"byte_end":788633,"line_start":302,"line_end":302,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":788638,"byte_end":788641,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ Note: this method does *not* modify the object,","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":788646,"byte_end":788697,"line_start":304,"line_end":304,"column_start":5,"column_end":56}},{"value":"/ and its signature will be replaced with `crop_imm()`'s in the 0.24 release","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":788702,"byte_end":788780,"line_start":305,"line_end":305,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":3513},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":789053,"byte_end":789061,"line_start":311,"line_end":311,"column_start":12,"column_end":20},"name":"crop_imm","qualname":"<DynamicImage>::crop_imm","value":"fn (&self, x: u32, y: u32, width: u32, height: u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Return a cut-out of this image delimited by the bounding rectangle.\n","sig":null,"attributes":[{"value":"/ Return a cut-out of this image delimited by the bounding rectangle.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":788970,"byte_end":789041,"line_start":310,"line_end":310,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":3514},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":789286,"byte_end":789293,"line_start":316,"line_end":316,"column_start":12,"column_end":19},"name":"as_rgb8","qualname":"<DynamicImage>::as_rgb8","value":"fn (&self) -> Option<&RgbImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 8bit RGB image\n","sig":null,"attributes":[{"value":"/ Return a reference to an 8bit RGB image","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":789231,"byte_end":789274,"line_start":315,"line_end":315,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":3515},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":789508,"byte_end":789519,"line_start":324,"line_end":324,"column_start":12,"column_end":23},"name":"as_mut_rgb8","qualname":"<DynamicImage>::as_mut_rgb8","value":"fn (&mut self) -> Option<&mut RgbImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 8bit RGB image\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to an 8bit RGB image","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":789445,"byte_end":789496,"line_start":323,"line_end":323,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":3516},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":789738,"byte_end":789745,"line_start":332,"line_end":332,"column_start":12,"column_end":19},"name":"as_bgr8","qualname":"<DynamicImage>::as_bgr8","value":"fn (&self) -> Option<&BgrImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 8bit BGR image\n","sig":null,"attributes":[{"value":"/ Return a reference to an 8bit BGR image","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":789683,"byte_end":789726,"line_start":331,"line_end":331,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":3517},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":789960,"byte_end":789971,"line_start":340,"line_end":340,"column_start":12,"column_end":23},"name":"as_mut_bgr8","qualname":"<DynamicImage>::as_mut_bgr8","value":"fn (&mut self) -> Option<&mut BgrImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 8bit BGR image\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to an 8bit BGR image","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":789897,"byte_end":789948,"line_start":339,"line_end":339,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":3518},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":790191,"byte_end":790199,"line_start":348,"line_end":348,"column_start":12,"column_end":20},"name":"as_rgba8","qualname":"<DynamicImage>::as_rgba8","value":"fn (&self) -> Option<&RgbaImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 8bit RGBA image\n","sig":null,"attributes":[{"value":"/ Return a reference to an 8bit RGBA image","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":790135,"byte_end":790179,"line_start":347,"line_end":347,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":3519},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":790417,"byte_end":790429,"line_start":356,"line_end":356,"column_start":12,"column_end":24},"name":"as_mut_rgba8","qualname":"<DynamicImage>::as_mut_rgba8","value":"fn (&mut self) -> Option<&mut RgbaImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 8bit RGBA image\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to an 8bit RGBA image","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":790353,"byte_end":790405,"line_start":355,"line_end":355,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":3520},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":790651,"byte_end":790659,"line_start":364,"line_end":364,"column_start":12,"column_end":20},"name":"as_bgra8","qualname":"<DynamicImage>::as_bgra8","value":"fn (&self) -> Option<&BgraImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 8bit BGRA image\n","sig":null,"attributes":[{"value":"/ Return a reference to an 8bit BGRA image","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":790595,"byte_end":790639,"line_start":363,"line_end":363,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":3521},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":790877,"byte_end":790889,"line_start":372,"line_end":372,"column_start":12,"column_end":24},"name":"as_mut_bgra8","qualname":"<DynamicImage>::as_mut_bgra8","value":"fn (&mut self) -> Option<&mut BgraImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 8bit RGBA image\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to an 8bit RGBA image","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":790813,"byte_end":790865,"line_start":371,"line_end":371,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":3522},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":791116,"byte_end":791124,"line_start":380,"line_end":380,"column_start":12,"column_end":20},"name":"as_luma8","qualname":"<DynamicImage>::as_luma8","value":"fn (&self) -> Option<&GrayImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 8bit Grayscale image\n","sig":null,"attributes":[{"value":"/ Return a reference to an 8bit Grayscale image","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":791055,"byte_end":791104,"line_start":379,"line_end":379,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3523},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":791347,"byte_end":791359,"line_start":388,"line_end":388,"column_start":12,"column_end":24},"name":"as_mut_luma8","qualname":"<DynamicImage>::as_mut_luma8","value":"fn (&mut self) -> Option<&mut GrayImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 8bit Grayscale image\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to an 8bit Grayscale image","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":791278,"byte_end":791335,"line_start":387,"line_end":387,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":3524},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":791608,"byte_end":791622,"line_start":396,"line_end":396,"column_start":12,"column_end":26},"name":"as_luma_alpha8","qualname":"<DynamicImage>::as_luma_alpha8","value":"fn (&self) -> Option<&GrayAlphaImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 8bit Grayscale image with an alpha channel\n","sig":null,"attributes":[{"value":"/ Return a reference to an 8bit Grayscale image with an alpha channel","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":791525,"byte_end":791596,"line_start":395,"line_end":395,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":3525},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":791873,"byte_end":791891,"line_start":404,"line_end":404,"column_start":12,"column_end":30},"name":"as_mut_luma_alpha8","qualname":"<DynamicImage>::as_mut_luma_alpha8","value":"fn (&mut self) -> Option<&mut GrayAlphaImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 8bit Grayscale image with an alpha channel\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to an 8bit Grayscale image with an alpha channel","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":791782,"byte_end":791861,"line_start":403,"line_end":403,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":3526},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":792119,"byte_end":792127,"line_start":412,"line_end":412,"column_start":12,"column_end":20},"name":"as_rgb16","qualname":"<DynamicImage>::as_rgb16","value":"fn (&self) -> Option<&Rgb16Image>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 16bit RGB image\n","sig":null,"attributes":[{"value":"/ Return a reference to an 16bit RGB image","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":792063,"byte_end":792107,"line_start":411,"line_end":411,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":3527},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":792346,"byte_end":792358,"line_start":420,"line_end":420,"column_start":12,"column_end":24},"name":"as_mut_rgb16","qualname":"<DynamicImage>::as_mut_rgb16","value":"fn (&mut self) -> Option<&mut Rgb16Image>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 16bit RGB image\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to an 16bit RGB image","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":792282,"byte_end":792334,"line_start":419,"line_end":419,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":3528},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":792582,"byte_end":792591,"line_start":428,"line_end":428,"column_start":12,"column_end":21},"name":"as_rgba16","qualname":"<DynamicImage>::as_rgba16","value":"fn (&self) -> Option<&Rgba16Image>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 16bit RGBA image\n","sig":null,"attributes":[{"value":"/ Return a reference to an 16bit RGBA image","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":792525,"byte_end":792570,"line_start":427,"line_end":427,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":3529},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":792813,"byte_end":792826,"line_start":436,"line_end":436,"column_start":12,"column_end":25},"name":"as_mut_rgba16","qualname":"<DynamicImage>::as_mut_rgba16","value":"fn (&mut self) -> Option<&mut Rgba16Image>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 16bit RGBA image\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to an 16bit RGBA image","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":792748,"byte_end":792801,"line_start":435,"line_end":435,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":3530},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":793057,"byte_end":793066,"line_start":444,"line_end":444,"column_start":12,"column_end":21},"name":"as_luma16","qualname":"<DynamicImage>::as_luma16","value":"fn (&self) -> Option<&Gray16Image>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 16bit Grayscale image\n","sig":null,"attributes":[{"value":"/ Return a reference to an 16bit Grayscale image","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":792995,"byte_end":793045,"line_start":443,"line_end":443,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3531},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":793293,"byte_end":793306,"line_start":452,"line_end":452,"column_start":12,"column_end":25},"name":"as_mut_luma16","qualname":"<DynamicImage>::as_mut_luma16","value":"fn (&mut self) -> Option<&mut Gray16Image>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 16bit Grayscale image\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to an 16bit Grayscale image","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":793223,"byte_end":793281,"line_start":451,"line_end":451,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":3532},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":793559,"byte_end":793574,"line_start":460,"line_end":460,"column_start":12,"column_end":27},"name":"as_luma_alpha16","qualname":"<DynamicImage>::as_luma_alpha16","value":"fn (&self) -> Option<&GrayAlpha16Image>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 16bit Grayscale image with an alpha channel\n","sig":null,"attributes":[{"value":"/ Return a reference to an 16bit Grayscale image with an alpha channel","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":793475,"byte_end":793547,"line_start":459,"line_end":459,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":3533},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":793829,"byte_end":793848,"line_start":468,"line_end":468,"column_start":12,"column_end":31},"name":"as_mut_luma_alpha16","qualname":"<DynamicImage>::as_mut_luma_alpha16","value":"fn (&mut self) -> Option<&mut GrayAlpha16Image>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 16bit Grayscale image with an alpha channel\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to an 16bit Grayscale image with an alpha channel","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":793737,"byte_end":793817,"line_start":467,"line_end":467,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3534},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":794107,"byte_end":794125,"line_start":476,"line_end":476,"column_start":12,"column_end":30},"name":"as_flat_samples_u8","qualname":"<DynamicImage>::as_flat_samples_u8","value":"fn (&self) -> Option<FlatSamples<&[u8]>>","parent":null,"children":[],"decl_id":null,"docs":" Return a view on the raw sample buffer for 8 bit per channel images.\n","sig":null,"attributes":[{"value":"/ Return a view on the raw sample buffer for 8 bit per channel images.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":794023,"byte_end":794095,"line_start":475,"line_end":475,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":3535},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":794759,"byte_end":794778,"line_start":489,"line_end":489,"column_start":12,"column_end":31},"name":"as_flat_samples_u16","qualname":"<DynamicImage>::as_flat_samples_u16","value":"fn (&self) -> Option<FlatSamples<&[u16]>>","parent":null,"children":[],"decl_id":null,"docs":" Return a view on the raw sample buffer for 16 bit per channel images.\n","sig":null,"attributes":[{"value":"/ Return a view on the raw sample buffer for 16 bit per channel images.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":794674,"byte_end":794747,"line_start":488,"line_end":488,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":3536},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":795245,"byte_end":795253,"line_start":500,"line_end":500,"column_start":12,"column_end":20},"name":"to_bytes","qualname":"<DynamicImage>::to_bytes","value":"fn (&self) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Return this image's pixels as a byte vector.\n","sig":null,"attributes":[{"value":"/ Return this image's pixels as a byte vector.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":795185,"byte_end":795233,"line_start":499,"line_end":499,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":3537},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":795361,"byte_end":795366,"line_start":505,"line_end":505,"column_start":12,"column_end":17},"name":"color","qualname":"<DynamicImage>::color","value":"fn (&self) -> color::ColorType","parent":null,"children":[],"decl_id":null,"docs":" Return this image's color type.\n","sig":null,"attributes":[{"value":"/ Return this image's color type.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":795314,"byte_end":795349,"line_start":504,"line_end":504,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3538},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":796170,"byte_end":796179,"line_start":521,"line_end":521,"column_start":12,"column_end":21},"name":"grayscale","qualname":"<DynamicImage>::grayscale","value":"fn (&self) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Return a grayscale version of this image.\n","sig":null,"attributes":[{"value":"/ Return a grayscale version of this image.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":796113,"byte_end":796158,"line_start":520,"line_end":520,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":3539},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":797285,"byte_end":797291,"line_start":538,"line_end":538,"column_start":12,"column_end":18},"name":"invert","qualname":"<DynamicImage>::invert","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Invert the colors of this image.\n This method operates inplace.\n","sig":null,"attributes":[{"value":"/ Invert the colors of this image.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":797199,"byte_end":797235,"line_start":536,"line_end":536,"column_start":5,"column_end":41}},{"value":"/ This method operates inplace.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":797240,"byte_end":797273,"line_start":537,"line_end":537,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":3540},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":797655,"byte_end":797661,"line_start":546,"line_end":546,"column_start":12,"column_end":18},"name":"resize","qualname":"<DynamicImage>::resize","value":"fn (&self, nwidth: u32, nheight: u32, filter: imageops::FilterType) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Resize this image using the specified filter algorithm.\n Returns a new image. The image's aspect ratio is preserved.\n The image is scaled to the maximum possible size that fits\n within the bounds specified by ```nwidth``` and ```nheight```.\n","sig":null,"attributes":[{"value":"/ Resize this image using the specified filter algorithm.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":797378,"byte_end":797437,"line_start":542,"line_end":542,"column_start":5,"column_end":64}},{"value":"/ Returns a new image. The image's aspect ratio is preserved.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":797442,"byte_end":797505,"line_start":543,"line_end":543,"column_start":5,"column_end":68}},{"value":"/ The image is scaled to the maximum possible size that fits","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":797510,"byte_end":797572,"line_start":544,"line_end":544,"column_start":5,"column_end":67}},{"value":"/ within the bounds specified by ```nwidth``` and ```nheight```.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":797577,"byte_end":797643,"line_start":545,"line_end":545,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":3541},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":798125,"byte_end":798137,"line_start":556,"line_end":556,"column_start":12,"column_end":24},"name":"resize_exact","qualname":"<DynamicImage>::resize_exact","value":"fn (&self, nwidth: u32, nheight: u32, filter: imageops::FilterType) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Resize this image using the specified filter algorithm.\n Returns a new image. Does not preserve aspect ratio.\n ```nwidth``` and ```nheight``` are the new image's dimensions\n","sig":null,"attributes":[{"value":"/ Resize this image using the specified filter algorithm.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":797923,"byte_end":797982,"line_start":553,"line_end":553,"column_start":5,"column_end":64}},{"value":"/ Returns a new image. Does not preserve aspect ratio.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":797987,"byte_end":798043,"line_start":554,"line_end":554,"column_start":5,"column_end":61}},{"value":"/ ```nwidth``` and ```nheight``` are the new image's dimensions","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":798048,"byte_end":798113,"line_start":555,"line_end":555,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":3542},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":798828,"byte_end":798837,"line_start":573,"line_end":573,"column_start":12,"column_end":21},"name":"thumbnail","qualname":"<DynamicImage>::thumbnail","value":"fn (&self, nwidth: u32, nheight: u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Scale this image down to fit within a specific size.\n Returns a new image. The image's aspect ratio is preserved.\n The image is scaled to the maximum possible size that fits\n within the bounds specified by ```nwidth``` and ```nheight```.","sig":null,"attributes":[{"value":"/ Scale this image down to fit within a specific size.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":798353,"byte_end":798409,"line_start":565,"line_end":565,"column_start":5,"column_end":61}},{"value":"/ Returns a new image. The image's aspect ratio is preserved.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":798414,"byte_end":798477,"line_start":566,"line_end":566,"column_start":5,"column_end":68}},{"value":"/ The image is scaled to the maximum possible size that fits","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":798482,"byte_end":798544,"line_start":567,"line_end":567,"column_start":5,"column_end":67}},{"value":"/ within the bounds specified by ```nwidth``` and ```nheight```.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":798549,"byte_end":798615,"line_start":568,"line_end":568,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":798620,"byte_end":798623,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ This method uses a fast integer algorithm where each source","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":798628,"byte_end":798691,"line_start":570,"line_end":570,"column_start":5,"column_end":68}},{"value":"/ pixel contributes to exactly one target pixel.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":798696,"byte_end":798746,"line_start":571,"line_end":571,"column_start":5,"column_end":55}},{"value":"/ May give aliasing artifacts if new size is close to old size.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":798751,"byte_end":798816,"line_start":572,"line_end":572,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":3543},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":799445,"byte_end":799460,"line_start":585,"line_end":585,"column_start":12,"column_end":27},"name":"thumbnail_exact","qualname":"<DynamicImage>::thumbnail_exact","value":"fn (&self, nwidth: u32, nheight: u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Scale this image down to a specific size.\n Returns a new image. Does not preserve aspect ratio.\n ```nwidth``` and ```nheight``` are the new image's dimensions.\n This method uses a fast integer algorithm where each source\n pixel contributes to exactly one target pixel.\n May give aliasing artifacts if new size is close to old size.\n","sig":null,"attributes":[{"value":"/ Scale this image down to a specific size.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":799063,"byte_end":799108,"line_start":579,"line_end":579,"column_start":5,"column_end":50}},{"value":"/ Returns a new image. Does not preserve aspect ratio.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":799113,"byte_end":799169,"line_start":580,"line_end":580,"column_start":5,"column_end":61}},{"value":"/ ```nwidth``` and ```nheight``` are the new image's dimensions.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":799174,"byte_end":799240,"line_start":581,"line_end":581,"column_start":5,"column_end":71}},{"value":"/ This method uses a fast integer algorithm where each source","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":799245,"byte_end":799308,"line_start":582,"line_end":582,"column_start":5,"column_end":68}},{"value":"/ pixel contributes to exactly one target pixel.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":799313,"byte_end":799363,"line_start":583,"line_end":583,"column_start":5,"column_end":55}},{"value":"/ May give aliasing artifacts if new size is close to old size.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":799368,"byte_end":799433,"line_start":584,"line_end":584,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":3544},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":799980,"byte_end":799994,"line_start":595,"line_end":595,"column_start":12,"column_end":26},"name":"resize_to_fill","qualname":"<DynamicImage>::resize_to_fill","value":"fn (&self, nwidth: u32, nheight: u32, filter: imageops::FilterType) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Resize this image using the specified filter algorithm.\n Returns a new image. The image's aspect ratio is preserved.\n The image is scaled to the maximum possible size that fits\n within the larger (relative to aspect ratio) of the bounds\n specified by ```nwidth``` and ```nheight```, then cropped to\n fit within the other bound.\n","sig":null,"attributes":[{"value":"/ Resize this image using the specified filter algorithm.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":799602,"byte_end":799661,"line_start":589,"line_end":589,"column_start":5,"column_end":64}},{"value":"/ Returns a new image. The image's aspect ratio is preserved.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":799666,"byte_end":799729,"line_start":590,"line_end":590,"column_start":5,"column_end":68}},{"value":"/ The image is scaled to the maximum possible size that fits","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":799734,"byte_end":799796,"line_start":591,"line_end":591,"column_start":5,"column_end":67}},{"value":"/ within the larger (relative to aspect ratio) of the bounds","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":799801,"byte_end":799863,"line_start":592,"line_end":592,"column_start":5,"column_end":67}},{"value":"/ specified by ```nwidth``` and ```nheight```, then cropped to","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":799868,"byte_end":799932,"line_start":593,"line_end":593,"column_start":5,"column_end":69}},{"value":"/ fit within the other bound.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":799937,"byte_end":799968,"line_start":594,"line_end":594,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":3545},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":800814,"byte_end":800818,"line_start":618,"line_end":618,"column_start":12,"column_end":16},"name":"blur","qualname":"<DynamicImage>::blur","value":"fn (&self, sigma: f32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Performs a Gaussian blur on this image.\n ```sigma``` is a measure of how much to blur by.\n","sig":null,"attributes":[{"value":"/ Performs a Gaussian blur on this image.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":800702,"byte_end":800745,"line_start":616,"line_end":616,"column_start":5,"column_end":48}},{"value":"/ ```sigma``` is a measure of how much to blur by.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":800750,"byte_end":800802,"line_start":617,"line_end":617,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":3546},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":801196,"byte_end":801205,"line_start":627,"line_end":627,"column_start":12,"column_end":21},"name":"unsharpen","qualname":"<DynamicImage>::unsharpen","value":"fn (&self, sigma: f32, threshold: i32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Performs an unsharpen mask on this image.\n ```sigma``` is the amount to blur the image by.\n ```threshold``` is a control of how much to sharpen.","sig":null,"attributes":[{"value":"/ Performs an unsharpen mask on this image.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":800930,"byte_end":800975,"line_start":622,"line_end":622,"column_start":5,"column_end":50}},{"value":"/ ```sigma``` is the amount to blur the image by.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":800980,"byte_end":801031,"line_start":623,"line_end":623,"column_start":5,"column_end":56}},{"value":"/ ```threshold``` is a control of how much to sharpen.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":801036,"byte_end":801092,"line_start":624,"line_end":624,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":801097,"byte_end":801100,"line_start":625,"line_end":625,"column_start":5,"column_end":8}},{"value":"/ See <https://en.wikipedia.org/wiki/Unsharp_masking#Digital_unsharp_masking>","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":801105,"byte_end":801184,"line_start":626,"line_end":626,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":3547},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":801414,"byte_end":801423,"line_start":632,"line_end":632,"column_start":12,"column_end":21},"name":"filter3x3","qualname":"<DynamicImage>::filter3x3","value":"fn (&self, kernel: &[f32]) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Filters this image with the specified 3x3 kernel.\n","sig":null,"attributes":[{"value":"/ Filters this image with the specified 3x3 kernel.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":801349,"byte_end":801402,"line_start":631,"line_end":631,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":3548},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":801833,"byte_end":801848,"line_start":643,"line_end":643,"column_start":12,"column_end":27},"name":"adjust_contrast","qualname":"<DynamicImage>::adjust_contrast","value":"fn (&self, c: f32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Adjust the contrast of this image.\n ```contrast``` is the amount to adjust the contrast by.\n Negative values decrease the contrast and positive values increase the contrast.\n","sig":null,"attributes":[{"value":"/ Adjust the contrast of this image.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":801630,"byte_end":801668,"line_start":640,"line_end":640,"column_start":5,"column_end":43}},{"value":"/ ```contrast``` is the amount to adjust the contrast by.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":801673,"byte_end":801732,"line_start":641,"line_end":641,"column_start":5,"column_end":64}},{"value":"/ Negative values decrease the contrast and positive values increase the contrast.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":801737,"byte_end":801821,"line_start":642,"line_end":642,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":3549},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":802148,"byte_end":802156,"line_start":650,"line_end":650,"column_start":12,"column_end":20},"name":"brighten","qualname":"<DynamicImage>::brighten","value":"fn (&self, value: i32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Brighten the pixels of this image.\n ```value``` is the amount to brighten each pixel by.\n Negative values decrease the brightness and positive values increase it.\n","sig":null,"attributes":[{"value":"/ Brighten the pixels of this image.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":801956,"byte_end":801994,"line_start":647,"line_end":647,"column_start":5,"column_end":43}},{"value":"/ ```value``` is the amount to brighten each pixel by.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":801999,"byte_end":802055,"line_start":648,"line_end":648,"column_start":5,"column_end":61}},{"value":"/ Negative values decrease the brightness and positive values increase it.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":802060,"byte_end":802136,"line_start":649,"line_end":649,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":3550},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":802504,"byte_end":802513,"line_start":658,"line_end":658,"column_start":12,"column_end":21},"name":"huerotate","qualname":"<DynamicImage>::huerotate","value":"fn (&self, value: i32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Hue rotate the supplied image.\n `value` is the degrees to rotate each pixel by.\n 0 and 360 do nothing, the rest rotates by the given degree value.\n just like the css webkit filter hue-rotate(180)\n","sig":null,"attributes":[{"value":"/ Hue rotate the supplied image.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":802272,"byte_end":802306,"line_start":654,"line_end":654,"column_start":5,"column_end":39}},{"value":"/ `value` is the degrees to rotate each pixel by.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":802311,"byte_end":802362,"line_start":655,"line_end":655,"column_start":5,"column_end":56}},{"value":"/ 0 and 360 do nothing, the rest rotates by the given degree value.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":802367,"byte_end":802436,"line_start":656,"line_end":656,"column_start":5,"column_end":74}},{"value":"/ just like the css webkit filter hue-rotate(180)","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":802441,"byte_end":802492,"line_start":657,"line_end":657,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":3551},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":802672,"byte_end":802677,"line_start":663,"line_end":663,"column_start":12,"column_end":17},"name":"flipv","qualname":"<DynamicImage>::flipv","value":"fn (&self) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Flip this image vertically\n","sig":null,"attributes":[{"value":"/ Flip this image vertically","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":802630,"byte_end":802660,"line_start":662,"line_end":662,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":3552},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":802823,"byte_end":802828,"line_start":668,"line_end":668,"column_start":12,"column_end":17},"name":"fliph","qualname":"<DynamicImage>::fliph","value":"fn (&self) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Flip this image horizontally\n","sig":null,"attributes":[{"value":"/ Flip this image horizontally","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":802779,"byte_end":802811,"line_start":667,"line_end":667,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3553},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":802987,"byte_end":802995,"line_start":673,"line_end":673,"column_start":12,"column_end":20},"name":"rotate90","qualname":"<DynamicImage>::rotate90","value":"fn (&self) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Rotate this image 90 degrees clockwise.\n","sig":null,"attributes":[{"value":"/ Rotate this image 90 degrees clockwise.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":802932,"byte_end":802975,"line_start":672,"line_end":672,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":3554},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":803148,"byte_end":803157,"line_start":678,"line_end":678,"column_start":12,"column_end":21},"name":"rotate180","qualname":"<DynamicImage>::rotate180","value":"fn (&self) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Rotate this image 180 degrees clockwise.\n","sig":null,"attributes":[{"value":"/ Rotate this image 180 degrees clockwise.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":803092,"byte_end":803136,"line_start":677,"line_end":677,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":3555},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":803311,"byte_end":803320,"line_start":683,"line_end":683,"column_start":12,"column_end":21},"name":"rotate270","qualname":"<DynamicImage>::rotate270","value":"fn (&self) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Rotate this image 270 degrees clockwise.\n","sig":null,"attributes":[{"value":"/ Rotate this image 270 degrees clockwise.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":803255,"byte_end":803299,"line_start":682,"line_end":682,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":3556},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":803475,"byte_end":803483,"line_start":688,"line_end":688,"column_start":12,"column_end":20},"name":"write_to","qualname":"<DynamicImage>::write_to","value":"fn <W, F> (&self, w: &mut W, format: F) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encode this image and write it to ```w```\n","sig":null,"attributes":[{"value":"/ Encode this image and write it to ```w```","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":803418,"byte_end":803463,"line_start":687,"line_end":687,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":3559},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":807392,"byte_end":807396,"line_start":792,"line_end":792,"column_start":12,"column_end":16},"name":"save","qualname":"<DynamicImage>::save","value":"fn <Q> (&self, path: Q) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Saves the buffer to a file at the path specified.","sig":null,"attributes":[{"value":"/ Saves the buffer to a file at the path specified.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":807258,"byte_end":807311,"line_start":789,"line_end":789,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":807316,"byte_end":807319,"line_start":790,"line_end":790,"column_start":5,"column_end":8}},{"value":"/ The image format is derived from the file extension.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":807324,"byte_end":807380,"line_start":791,"line_end":791,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":3561},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":807768,"byte_end":807784,"line_start":806,"line_end":806,"column_start":12,"column_end":28},"name":"save_with_format","qualname":"<DynamicImage>::save_with_format","value":"fn <Q> (&self, path: Q, format: ImageFormat) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Saves the buffer to a file at the specified path in\n the specified format.","sig":null,"attributes":[{"value":"/ Saves the buffer to a file at the specified path in","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":807561,"byte_end":807616,"line_start":801,"line_end":801,"column_start":5,"column_end":60}},{"value":"/ the specified format.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":807621,"byte_end":807646,"line_start":802,"line_end":802,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":807651,"byte_end":807654,"line_start":803,"line_end":803,"column_start":5,"column_end":8}},{"value":"/ See [`save_buffer_with_format`](fn.save_buffer_with_format.html) for","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":807659,"byte_end":807731,"line_start":804,"line_end":804,"column_start":5,"column_end":77}},{"value":"/ supported types.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":807736,"byte_end":807756,"line_start":805,"line_end":805,"column_start":5,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":3581},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":814646,"byte_end":814650,"line_start":984,"line_end":984,"column_start":8,"column_end":12},"name":"open","qualname":"::dynimage::open","value":"fn <P> (path: P) -> ImageResult<DynamicImage>","parent":null,"children":[],"decl_id":null,"docs":" Open the image located at the path specified.\n The image's format is determined from the path's file extension.","sig":null,"attributes":[{"value":"/ Open the image located at the path specified.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":814344,"byte_end":814393,"line_start":977,"line_end":977,"column_start":1,"column_end":50}},{"value":"/ The image's format is determined from the path's file extension.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":814394,"byte_end":814462,"line_start":978,"line_end":978,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":814463,"byte_end":814466,"line_start":979,"line_end":979,"column_start":1,"column_end":4}},{"value":"/ Try [`io::Reader`] for more advanced uses, including guessing the format based on the file's","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":814467,"byte_end":814563,"line_start":980,"line_end":980,"column_start":1,"column_end":97}},{"value":"/ content before its path.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":814564,"byte_end":814592,"line_start":981,"line_end":981,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":814593,"byte_end":814596,"line_start":982,"line_end":982,"column_start":1,"column_end":4}},{"value":"/ [`io::Reader`]: io/struct.Reader.html","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":814597,"byte_end":814638,"line_start":983,"line_end":983,"column_start":1,"column_end":42}}]},{"kind":"Function","id":{"krate":0,"index":3583},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":815205,"byte_end":815221,"line_start":999,"line_end":999,"column_start":8,"column_end":24},"name":"image_dimensions","qualname":"::dynimage::image_dimensions","value":"fn <P> (path: P) -> ImageResult<(u32, u32)>","parent":null,"children":[],"decl_id":null,"docs":" Read the dimensions of the image located at the specified path.\n This is faster than fully loading the image and then getting its dimensions.","sig":null,"attributes":[{"value":"/ Read the dimensions of the image located at the specified path.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":814840,"byte_end":814907,"line_start":992,"line_end":992,"column_start":1,"column_end":68}},{"value":"/ This is faster than fully loading the image and then getting its dimensions.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":814908,"byte_end":814988,"line_start":993,"line_end":993,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":814989,"byte_end":814992,"line_start":994,"line_end":994,"column_start":1,"column_end":4}},{"value":"/ Try [`io::Reader`] for more advanced uses, including guessing the format based on the file's","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":814993,"byte_end":815089,"line_start":995,"line_end":995,"column_start":1,"column_end":97}},{"value":"/ content before its path or manually supplying the format.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":815090,"byte_end":815151,"line_start":996,"line_end":996,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":815152,"byte_end":815155,"line_start":997,"line_end":997,"column_start":1,"column_end":4}},{"value":"/ [`io::Reader`]: io/struct.Reader.html","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":815156,"byte_end":815197,"line_start":998,"line_end":998,"column_start":1,"column_end":42}}]},{"kind":"Function","id":{"krate":0,"index":3585},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":815796,"byte_end":815807,"line_start":1014,"line_end":1014,"column_start":8,"column_end":19},"name":"save_buffer","qualname":"::dynimage::save_buffer","value":"fn <P> (path: P, buf: &[u8], width: u32, height: u32, color: color::ColorType) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Saves the supplied buffer to a file at the path specified.","sig":null,"attributes":[{"value":"/ Saves the supplied buffer to a file at the path specified.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":815421,"byte_end":815483,"line_start":1007,"line_end":1007,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":815484,"byte_end":815487,"line_start":1008,"line_end":1008,"column_start":1,"column_end":4}},{"value":"/ The image format is derived from the file extension. The buffer is assumed to have","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":815488,"byte_end":815574,"line_start":1009,"line_end":1009,"column_start":1,"column_end":87}},{"value":"/ the correct format according to the specified color type.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":815575,"byte_end":815636,"line_start":1010,"line_end":1010,"column_start":1,"column_end":62}},{"value":"/ This will lead to corrupted files if the buffer contains malformed data. Currently only","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":815638,"byte_end":815729,"line_start":1012,"line_end":1012,"column_start":1,"column_end":92}},{"value":"/ jpeg, png, ico, pnm, bmp and tiff files are supported.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":815730,"byte_end":815788,"line_start":1013,"line_end":1013,"column_start":1,"column_end":59}}]},{"kind":"Function","id":{"krate":0,"index":3587},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":816461,"byte_end":816484,"line_start":1036,"line_end":1036,"column_start":8,"column_end":31},"name":"save_buffer_with_format","qualname":"::dynimage::save_buffer_with_format","value":"fn <P> (path: P, buf: &[u8], width: u32, height: u32, color: color::ColorType, format: ImageFormat) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Saves the supplied buffer to a file at the path specified\n in the specified format.","sig":null,"attributes":[{"value":"/ Saves the supplied buffer to a file at the path specified","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":816113,"byte_end":816174,"line_start":1028,"line_end":1028,"column_start":1,"column_end":62}},{"value":"/ in the specified format.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":816175,"byte_end":816203,"line_start":1029,"line_end":1029,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":816204,"byte_end":816207,"line_start":1030,"line_end":1030,"column_start":1,"column_end":4}},{"value":"/ The buffer is assumed to have the correct format according","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":816208,"byte_end":816270,"line_start":1031,"line_end":1031,"column_start":1,"column_end":63}},{"value":"/ to the specified color type.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":816271,"byte_end":816303,"line_start":1032,"line_end":1032,"column_start":1,"column_end":33}},{"value":"/ This will lead to corrupted files if the buffer contains","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":816304,"byte_end":816364,"line_start":1033,"line_end":1033,"column_start":1,"column_end":61}},{"value":"/ malformed data. Currently only jpeg, png, ico, bmp and","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":816365,"byte_end":816423,"line_start":1034,"line_end":1034,"column_start":1,"column_end":59}},{"value":"/ tiff files are supported.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":816424,"byte_end":816453,"line_start":1035,"line_end":1035,"column_start":1,"column_end":30}}]},{"kind":"Function","id":{"krate":0,"index":3589},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":817047,"byte_end":817063,"line_start":1059,"line_end":1059,"column_start":8,"column_end":24},"name":"load_from_memory","qualname":"::dynimage::load_from_memory","value":"fn (buffer: &[u8]) -> ImageResult<DynamicImage>","parent":null,"children":[],"decl_id":null,"docs":" Create a new image from a byte slice","sig":null,"attributes":[{"value":"/ Create a new image from a byte slice","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":816803,"byte_end":816843,"line_start":1051,"line_end":1051,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":816844,"byte_end":816847,"line_start":1052,"line_end":1052,"column_start":1,"column_end":4}},{"value":"/ Makes an educated guess about the image format.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":816848,"byte_end":816899,"line_start":1053,"line_end":1053,"column_start":1,"column_end":52}},{"value":"/ TGA is not supported by this function.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":816900,"byte_end":816942,"line_start":1054,"line_end":1054,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":816943,"byte_end":816946,"line_start":1055,"line_end":1055,"column_start":1,"column_end":4}},{"value":"/ Try [`io::Reader`] for more advanced uses.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":816947,"byte_end":816993,"line_start":1056,"line_end":1056,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":816994,"byte_end":816997,"line_start":1057,"line_end":1057,"column_start":1,"column_end":4}},{"value":"/ [`io::Reader`]: io/struct.Reader.html","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":816998,"byte_end":817039,"line_start":1058,"line_end":1058,"column_start":1,"column_end":42}}]},{"kind":"Function","id":{"krate":0,"index":3590},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":817545,"byte_end":817573,"line_start":1074,"line_end":1074,"column_start":8,"column_end":36},"name":"load_from_memory_with_format","qualname":"::dynimage::load_from_memory_with_format","value":"fn (buf: &[u8], format: ImageFormat) -> ImageResult<DynamicImage>","parent":null,"children":[],"decl_id":null,"docs":" Create a new image from a byte slice","sig":null,"attributes":[{"value":"/ Create a new image from a byte slice","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":817218,"byte_end":817258,"line_start":1064,"line_end":1064,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":817259,"byte_end":817262,"line_start":1065,"line_end":1065,"column_start":1,"column_end":4}},{"value":"/ This is just a simple wrapper that constructs an `std::io::Cursor` around the buffer and then","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":817263,"byte_end":817360,"line_start":1066,"line_end":1066,"column_start":1,"column_end":98}},{"value":"/ calls `load` with that reader.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":817361,"byte_end":817395,"line_start":1067,"line_end":1067,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":817396,"byte_end":817399,"line_start":1068,"line_end":1068,"column_start":1,"column_end":4}},{"value":"/ Try [`io::Reader`] for more advanced uses.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":817400,"byte_end":817446,"line_start":1069,"line_end":1069,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":817447,"byte_end":817450,"line_start":1070,"line_end":1070,"column_start":1,"column_end":4}},{"value":"/ [`load`]: fn.load.html","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":817451,"byte_end":817477,"line_start":1071,"line_end":1071,"column_start":1,"column_end":27}},{"value":"/ [`io::Reader`]: io/struct.Reader.html","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":817478,"byte_end":817519,"line_start":1072,"line_end":1072,"column_start":1,"column_end":42}},{"value":"inline(always)","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":817520,"byte_end":817537,"line_start":1073,"line_end":1073,"column_start":1,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5998},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":822296,"byte_end":822299,"line_start":25,"line_end":25,"column_start":5,"column_end":8},"name":"Png","qualname":"::image::ImageFormat::Png","value":"ImageFormat::Png","parent":{"krate":0,"index":5997},"children":[],"decl_id":null,"docs":" An Image in PNG Format\n","sig":null,"attributes":[{"value":"/ An Image in PNG Format","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":822265,"byte_end":822291,"line_start":24,"line_end":24,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6000},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":822338,"byte_end":822342,"line_start":28,"line_end":28,"column_start":5,"column_end":9},"name":"Jpeg","qualname":"::image::ImageFormat::Jpeg","value":"ImageFormat::Jpeg","parent":{"krate":0,"index":5997},"children":[],"decl_id":null,"docs":" An Image in JPEG Format\n","sig":null,"attributes":[{"value":"/ An Image in JPEG Format","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":822306,"byte_end":822333,"line_start":27,"line_end":27,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6002},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":822380,"byte_end":822383,"line_start":31,"line_end":31,"column_start":5,"column_end":8},"name":"Gif","qualname":"::image::ImageFormat::Gif","value":"ImageFormat::Gif","parent":{"krate":0,"index":5997},"children":[],"decl_id":null,"docs":" An Image in GIF Format\n","sig":null,"attributes":[{"value":"/ An Image in GIF Format","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":822349,"byte_end":822375,"line_start":30,"line_end":30,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6004},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":822422,"byte_end":822426,"line_start":34,"line_end":34,"column_start":5,"column_end":9},"name":"WebP","qualname":"::image::ImageFormat::WebP","value":"ImageFormat::WebP","parent":{"krate":0,"index":5997},"children":[],"decl_id":null,"docs":" An Image in WEBP Format\n","sig":null,"attributes":[{"value":"/ An Image in WEBP Format","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":822390,"byte_end":822417,"line_start":33,"line_end":33,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6006},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":822472,"byte_end":822475,"line_start":37,"line_end":37,"column_start":5,"column_end":8},"name":"Pnm","qualname":"::image::ImageFormat::Pnm","value":"ImageFormat::Pnm","parent":{"krate":0,"index":5997},"children":[],"decl_id":null,"docs":" An Image in general PNM Format\n","sig":null,"attributes":[{"value":"/ An Image in general PNM Format","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":822433,"byte_end":822467,"line_start":36,"line_end":36,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6008},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":822514,"byte_end":822518,"line_start":40,"line_end":40,"column_start":5,"column_end":9},"name":"Tiff","qualname":"::image::ImageFormat::Tiff","value":"ImageFormat::Tiff","parent":{"krate":0,"index":5997},"children":[],"decl_id":null,"docs":" An Image in TIFF Format\n","sig":null,"attributes":[{"value":"/ An Image in TIFF Format","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":822482,"byte_end":822509,"line_start":39,"line_end":39,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6010},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":822556,"byte_end":822559,"line_start":43,"line_end":43,"column_start":5,"column_end":8},"name":"Tga","qualname":"::image::ImageFormat::Tga","value":"ImageFormat::Tga","parent":{"krate":0,"index":5997},"children":[],"decl_id":null,"docs":" An Image in TGA Format\n","sig":null,"attributes":[{"value":"/ An Image in TGA Format","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":822525,"byte_end":822551,"line_start":42,"line_end":42,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6012},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":822597,"byte_end":822600,"line_start":46,"line_end":46,"column_start":5,"column_end":8},"name":"Dds","qualname":"::image::ImageFormat::Dds","value":"ImageFormat::Dds","parent":{"krate":0,"index":5997},"children":[],"decl_id":null,"docs":" An Image in DDS Format\n","sig":null,"attributes":[{"value":"/ An Image in DDS Format","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":822566,"byte_end":822592,"line_start":45,"line_end":45,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6014},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":822638,"byte_end":822641,"line_start":49,"line_end":49,"column_start":5,"column_end":8},"name":"Bmp","qualname":"::image::ImageFormat::Bmp","value":"ImageFormat::Bmp","parent":{"krate":0,"index":5997},"children":[],"decl_id":null,"docs":" An Image in BMP Format\n","sig":null,"attributes":[{"value":"/ An Image in BMP Format","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":822607,"byte_end":822633,"line_start":48,"line_end":48,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6016},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":822679,"byte_end":822682,"line_start":52,"line_end":52,"column_start":5,"column_end":8},"name":"Ico","qualname":"::image::ImageFormat::Ico","value":"ImageFormat::Ico","parent":{"krate":0,"index":5997},"children":[],"decl_id":null,"docs":" An Image in ICO Format\n","sig":null,"attributes":[{"value":"/ An Image in ICO Format","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":822648,"byte_end":822674,"line_start":51,"line_end":51,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6018},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":822729,"byte_end":822732,"line_start":55,"line_end":55,"column_start":5,"column_end":8},"name":"Hdr","qualname":"::image::ImageFormat::Hdr","value":"ImageFormat::Hdr","parent":{"krate":0,"index":5997},"children":[],"decl_id":null,"docs":" An Image in Radiance HDR Format\n","sig":null,"attributes":[{"value":"/ An Image in Radiance HDR Format","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":822689,"byte_end":822724,"line_start":54,"line_end":54,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6020},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":822775,"byte_end":822783,"line_start":58,"line_end":58,"column_start":5,"column_end":13},"name":"Farbfeld","qualname":"::image::ImageFormat::Farbfeld","value":"ImageFormat::Farbfeld","parent":{"krate":0,"index":5997},"children":[],"decl_id":null,"docs":" An Image in farbfeld Format\n","sig":null,"attributes":[{"value":"/ An Image in farbfeld Format","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":822739,"byte_end":822770,"line_start":57,"line_end":57,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6022},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":822809,"byte_end":822824,"line_start":61,"line_end":61,"column_start":5,"column_end":20},"name":"__NonExhaustive","qualname":"::image::ImageFormat::__NonExhaustive","value":"ImageFormat::__NonExhaustive(crate::utils::NonExhaustiveMarker)","parent":{"krate":0,"index":5997},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5997},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":822247,"byte_end":822258,"line_start":23,"line_end":23,"column_start":10,"column_end":21},"name":"ImageFormat","qualname":"::image::ImageFormat","value":"ImageFormat::{Png, Jpeg, Gif, WebP, Pnm, Tiff, Tga, Dds, Bmp, Ico, Hdr, Farbfeld, __NonExhaustive}","parent":null,"children":[{"krate":0,"index":5998},{"krate":0,"index":6000},{"krate":0,"index":6002},{"krate":0,"index":6004},{"krate":0,"index":6006},{"krate":0,"index":6008},{"krate":0,"index":6010},{"krate":0,"index":6012},{"krate":0,"index":6014},{"krate":0,"index":6016},{"krate":0,"index":6018},{"krate":0,"index":6020},{"krate":0,"index":6022}],"decl_id":null,"docs":" An enumeration of supported image formats.\n Not all formats support both encoding and decoding.\n","sig":null,"attributes":[{"value":"/ An enumeration of supported image formats.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":822084,"byte_end":822130,"line_start":20,"line_end":20,"column_start":1,"column_end":47}},{"value":"/ Not all formats support both encoding and decoding.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":822131,"byte_end":822186,"line_start":21,"line_end":21,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":3617},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":822966,"byte_end":822975,"line_start":66,"line_end":66,"column_start":12,"column_end":21},"name":"from_path","qualname":"<ImageFormat>::from_path","value":"fn <P> (path: P) -> ImageResult<Self>","parent":null,"children":[],"decl_id":null,"docs":" Return the image format specified by the path's file extension.\n","sig":null,"attributes":[{"value":"/ Return the image format specified by the path's file extension.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":822887,"byte_end":822954,"line_start":65,"line_end":65,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":3619},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":823826,"byte_end":823840,"line_start":81,"line_end":81,"column_start":12,"column_end":26},"name":"extensions_str","qualname":"<ImageFormat>::extensions_str","value":"fn (self) -> &'static [&'static str]","parent":null,"children":[],"decl_id":null,"docs":" Return a list of applicable extensions for this format.","sig":null,"attributes":[{"value":"/ Return a list of applicable extensions for this format.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":823236,"byte_end":823295,"line_start":72,"line_end":72,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":823300,"byte_end":823303,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ All currently recognized image formats specify at least on extension but for future","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":823308,"byte_end":823395,"line_start":74,"line_end":74,"column_start":5,"column_end":92}},{"value":"/ compatibility you should not rely on this fact. The list may be empty if the format has no","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":823400,"byte_end":823494,"line_start":75,"line_end":75,"column_start":5,"column_end":99}},{"value":"/ recognized file representation, for example in case it is used as a purely transient memory","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":823499,"byte_end":823594,"line_start":76,"line_end":76,"column_start":5,"column_end":100}},{"value":"/ format.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":823599,"byte_end":823610,"line_start":77,"line_end":77,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":823615,"byte_end":823618,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ The method name `extensions` remains reserved for introducing another method in the future","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":823623,"byte_end":823717,"line_start":79,"line_end":79,"column_start":5,"column_end":99}},{"value":"/ that yields a slice of `OsStr` which is blocked by several features of const evaluation.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":823722,"byte_end":823814,"line_start":80,"line_end":80,"column_start":5,"column_end":97}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6041},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":824734,"byte_end":824737,"line_start":105,"line_end":105,"column_start":5,"column_end":8},"name":"Png","qualname":"::image::ImageOutputFormat::Png","value":"ImageOutputFormat::Png","parent":{"krate":0,"index":6040},"children":[],"decl_id":null,"docs":" An Image in PNG Format\n","sig":null,"attributes":[{"value":"cfg(feature = \"png\")","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":824675,"byte_end":824698,"line_start":103,"line_end":103,"column_start":5,"column_end":28}},{"value":"/ An Image in PNG Format","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":824703,"byte_end":824729,"line_start":104,"line_end":104,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6043},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":824828,"byte_end":824832,"line_start":109,"line_end":109,"column_start":5,"column_end":9},"name":"Jpeg","qualname":"::image::ImageOutputFormat::Jpeg","value":"ImageOutputFormat::Jpeg(u8)","parent":{"krate":0,"index":6040},"children":[],"decl_id":null,"docs":" An Image in JPEG Format with specified quality\n","sig":null,"attributes":[{"value":"cfg(feature = \"jpeg\")","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":824744,"byte_end":824768,"line_start":107,"line_end":107,"column_start":5,"column_end":29}},{"value":"/ An Image in JPEG Format with specified quality","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":824773,"byte_end":824823,"line_start":108,"line_end":108,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6046},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":824914,"byte_end":824917,"line_start":113,"line_end":113,"column_start":5,"column_end":8},"name":"Pnm","qualname":"::image::ImageOutputFormat::Pnm","value":"ImageOutputFormat::Pnm(PNMSubtype)","parent":{"krate":0,"index":6040},"children":[],"decl_id":null,"docs":" An Image in one of the PNM Formats\n","sig":null,"attributes":[{"value":"cfg(feature = \"pnm\")","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":824843,"byte_end":824866,"line_start":111,"line_end":111,"column_start":5,"column_end":28}},{"value":"/ An Image in one of the PNM Formats","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":824871,"byte_end":824909,"line_start":112,"line_end":112,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6049},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":824995,"byte_end":824998,"line_start":117,"line_end":117,"column_start":5,"column_end":8},"name":"Gif","qualname":"::image::ImageOutputFormat::Gif","value":"ImageOutputFormat::Gif","parent":{"krate":0,"index":6040},"children":[],"decl_id":null,"docs":" An Image in GIF Format\n","sig":null,"attributes":[{"value":"cfg(feature = \"gif\")","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":824936,"byte_end":824959,"line_start":115,"line_end":115,"column_start":5,"column_end":28}},{"value":"/ An Image in GIF Format","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":824964,"byte_end":824990,"line_start":116,"line_end":116,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6051},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":825064,"byte_end":825067,"line_start":121,"line_end":121,"column_start":5,"column_end":8},"name":"Ico","qualname":"::image::ImageOutputFormat::Ico","value":"ImageOutputFormat::Ico","parent":{"krate":0,"index":6040},"children":[],"decl_id":null,"docs":" An Image in ICO Format\n","sig":null,"attributes":[{"value":"cfg(feature = \"ico\")","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":825005,"byte_end":825028,"line_start":119,"line_end":119,"column_start":5,"column_end":28}},{"value":"/ An Image in ICO Format","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":825033,"byte_end":825059,"line_start":120,"line_end":120,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6053},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":825133,"byte_end":825136,"line_start":125,"line_end":125,"column_start":5,"column_end":8},"name":"Bmp","qualname":"::image::ImageOutputFormat::Bmp","value":"ImageOutputFormat::Bmp","parent":{"krate":0,"index":6040},"children":[],"decl_id":null,"docs":" An Image in BMP Format\n","sig":null,"attributes":[{"value":"cfg(feature = \"bmp\")","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":825074,"byte_end":825097,"line_start":123,"line_end":123,"column_start":5,"column_end":28}},{"value":"/ An Image in BMP Format","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":825102,"byte_end":825128,"line_start":124,"line_end":124,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6055},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":825212,"byte_end":825220,"line_start":129,"line_end":129,"column_start":5,"column_end":13},"name":"Farbfeld","qualname":"::image::ImageOutputFormat::Farbfeld","value":"ImageOutputFormat::Farbfeld","parent":{"krate":0,"index":6040},"children":[],"decl_id":null,"docs":" An Image in farbfeld Format\n","sig":null,"attributes":[{"value":"cfg(feature = \"farbfeld\")","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":825143,"byte_end":825171,"line_start":127,"line_end":127,"column_start":5,"column_end":33}},{"value":"/ An Image in farbfeld Format","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":825176,"byte_end":825207,"line_start":128,"line_end":128,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6057},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":825286,"byte_end":825289,"line_start":133,"line_end":133,"column_start":5,"column_end":8},"name":"Tga","qualname":"::image::ImageOutputFormat::Tga","value":"ImageOutputFormat::Tga","parent":{"krate":0,"index":6040},"children":[],"decl_id":null,"docs":" An Image in TGA Format\n","sig":null,"attributes":[{"value":"cfg(feature = \"tga\")","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":825227,"byte_end":825250,"line_start":131,"line_end":131,"column_start":5,"column_end":28}},{"value":"/ An Image in TGA Format","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":825255,"byte_end":825281,"line_start":132,"line_end":132,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6059},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":825541,"byte_end":825552,"line_start":138,"line_end":138,"column_start":5,"column_end":16},"name":"Unsupported","qualname":"::image::ImageOutputFormat::Unsupported","value":"ImageOutputFormat::Unsupported(String)","parent":{"krate":0,"index":6040},"children":[],"decl_id":null,"docs":" A value for signalling an error: An unsupported format was requested\n","sig":null,"attributes":[{"value":"/ A value for signalling an error: An unsupported format was requested","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":825296,"byte_end":825368,"line_start":135,"line_end":135,"column_start":5,"column_end":77}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6062},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":825586,"byte_end":825601,"line_start":141,"line_end":141,"column_start":5,"column_end":20},"name":"__NonExhaustive","qualname":"::image::ImageOutputFormat::__NonExhaustive","value":"ImageOutputFormat::__NonExhaustive(crate::utils::NonExhaustiveMarker)","parent":{"krate":0,"index":6040},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6040},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":824651,"byte_end":824668,"line_start":102,"line_end":102,"column_start":10,"column_end":27},"name":"ImageOutputFormat","qualname":"::image::ImageOutputFormat","value":"ImageOutputFormat::{Png, Jpeg, Pnm, Gif, Ico, Bmp, Farbfeld, Tga, Unsupported, __NonExhaustive}","parent":null,"children":[{"krate":0,"index":6041},{"krate":0,"index":6043},{"krate":0,"index":6046},{"krate":0,"index":6049},{"krate":0,"index":6051},{"krate":0,"index":6053},{"krate":0,"index":6055},{"krate":0,"index":6057},{"krate":0,"index":6059},{"krate":0,"index":6062}],"decl_id":null,"docs":" An enumeration of supported image formats for encoding.\n","sig":null,"attributes":[{"value":"/ An enumeration of supported image formats for encoding.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":824543,"byte_end":824602,"line_start":100,"line_end":100,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":6076},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":834817,"byte_end":834825,"line_start":360,"line_end":360,"column_start":12,"column_end":20},"name":"Progress","qualname":"::image::Progress","value":"Progress {  }","parent":null,"children":[{"krate":0,"index":6077},{"krate":0,"index":6078}],"decl_id":null,"docs":" Represents the progress of an image operation.","sig":null,"attributes":[{"value":"/ Represents the progress of an image operation.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":834413,"byte_end":834463,"line_start":354,"line_end":354,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":834464,"byte_end":834467,"line_start":355,"line_end":355,"column_start":1,"column_end":4}},{"value":"/ Note that this is not necessarily accurate and no change to the values passed to the progress","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":834468,"byte_end":834565,"line_start":356,"line_end":356,"column_start":1,"column_end":98}},{"value":"/ function during decoding will be considered breaking. A decoder could in theory report the","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":834566,"byte_end":834660,"line_start":357,"line_end":357,"column_start":1,"column_end":95}},{"value":"/ progress `(0, 0)` if progress is unknown, without violating the interface contract of the type.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":834661,"byte_end":834760,"line_start":358,"line_end":358,"column_start":1,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":3645},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":834933,"byte_end":834940,"line_start":367,"line_end":367,"column_start":12,"column_end":19},"name":"current","qualname":"<Progress>::current","value":"fn (self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" A measure of completed decoding.\n","sig":null,"attributes":[{"value":"/ A measure of completed decoding.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":834885,"byte_end":834921,"line_start":366,"line_end":366,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":3646},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":835113,"byte_end":835118,"line_start":374,"line_end":374,"column_start":12,"column_end":17},"name":"total","qualname":"<Progress>::total","value":"fn (self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" A measure of all necessary decoding work.","sig":null,"attributes":[{"value":"/ A measure of all necessary decoding work.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":834988,"byte_end":835033,"line_start":371,"line_end":371,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":835038,"byte_end":835041,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ This is in general greater or equal than `current`.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":835046,"byte_end":835101,"line_start":373,"line_end":373,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3647},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":835228,"byte_end":835237,"line_start":379,"line_end":379,"column_start":12,"column_end":21},"name":"remaining","qualname":"<Progress>::remaining","value":"fn (self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Calculate a measure for remaining decoding work.\n","sig":null,"attributes":[{"value":"/ Calculate a measure for remaining decoding work.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":835164,"byte_end":835216,"line_start":378,"line_end":378,"column_start":5,"column_end":57}}]},{"kind":"Trait","id":{"krate":0,"index":3648},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":835366,"byte_end":835378,"line_start":385,"line_end":385,"column_start":11,"column_end":23},"name":"ImageDecoder","qualname":"::image::ImageDecoder","value":"ImageDecoder<'a>: Sized","parent":null,"children":[{"krate":0,"index":3650},{"krate":0,"index":3651},{"krate":0,"index":3652},{"krate":0,"index":3653},{"krate":0,"index":3654},{"krate":0,"index":3655},{"krate":0,"index":3656},{"krate":0,"index":3657},{"krate":0,"index":3659}],"decl_id":null,"docs":" The trait that all decoders implement\n","sig":null,"attributes":[{"value":"/ The trait that all decoders implement","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":835314,"byte_end":835355,"line_start":384,"line_end":384,"column_start":1,"column_end":42}}]},{"kind":"Type","id":{"krate":0,"index":3650},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":835455,"byte_end":835461,"line_start":387,"line_end":387,"column_start":10,"column_end":16},"name":"Reader","qualname":"::image::ImageDecoder::Reader","value":"type Reader: Read + 'a;","parent":{"krate":0,"index":3648},"children":[],"decl_id":null,"docs":" The type of reader produced by `into_reader`.\n","sig":null,"attributes":[{"value":"/ The type of reader produced by `into_reader`.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":835396,"byte_end":835445,"line_start":386,"line_end":386,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3651},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":835551,"byte_end":835561,"line_start":390,"line_end":390,"column_start":8,"column_end":18},"name":"dimensions","qualname":"::image::ImageDecoder::dimensions","value":"fn (&self) -> (u32, u32)","parent":{"krate":0,"index":3648},"children":[],"decl_id":null,"docs":" Returns a tuple containing the width and height of the image\n","sig":null,"attributes":[{"value":"/ Returns a tuple containing the width and height of the image","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":835479,"byte_end":835543,"line_start":389,"line_end":389,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":3652},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":835666,"byte_end":835676,"line_start":393,"line_end":393,"column_start":8,"column_end":18},"name":"color_type","qualname":"::image::ImageDecoder::color_type","value":"fn (&self) -> ColorType","parent":{"krate":0,"index":3648},"children":[],"decl_id":null,"docs":" Returns the color type of the image data produced by this decoder\n","sig":null,"attributes":[{"value":"/ Returns the color type of the image data produced by this decoder","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":835589,"byte_end":835658,"line_start":392,"line_end":392,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":3653},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":835770,"byte_end":835789,"line_start":396,"line_end":396,"column_start":8,"column_end":27},"name":"original_color_type","qualname":"::image::ImageDecoder::original_color_type","value":"fn (&self) -> ExtendedColorType","parent":{"krate":0,"index":3648},"children":[],"decl_id":null,"docs":" Retuns the color type of the image file before decoding\n","sig":null,"attributes":[{"value":"/ Retuns the color type of the image file before decoding","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":835703,"byte_end":835762,"line_start":395,"line_end":395,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":3654},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":836130,"byte_end":836141,"line_start":403,"line_end":403,"column_start":8,"column_end":19},"name":"into_reader","qualname":"::image::ImageDecoder::into_reader","value":"fn (self) -> ImageResult<Self::Reader>","parent":{"krate":0,"index":3648},"children":[],"decl_id":null,"docs":" Returns a reader that can be used to obtain the bytes of the image. For the best\n performance, always try to read at least `scanline_bytes` from the reader at a time. Reading\n fewer bytes will cause the reader to perform internal buffering.\n","sig":null,"attributes":[{"value":"/ Returns a reader that can be used to obtain the bytes of the image. For the best","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":835864,"byte_end":835948,"line_start":400,"line_end":400,"column_start":5,"column_end":89}},{"value":"/ performance, always try to read at least `scanline_bytes` from the reader at a time. Reading","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":835953,"byte_end":836049,"line_start":401,"line_end":401,"column_start":5,"column_end":101}},{"value":"/ fewer bytes will cause the reader to perform internal buffering.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":836054,"byte_end":836122,"line_start":402,"line_end":402,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":3655},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":836528,"byte_end":836539,"line_start":411,"line_end":411,"column_start":8,"column_end":19},"name":"total_bytes","qualname":"::image::ImageDecoder::total_bytes","value":"fn (&self) -> u64","parent":{"krate":0,"index":3648},"children":[],"decl_id":null,"docs":" Returns the total number of bytes in the decoded image.","sig":null,"attributes":[{"value":"/ Returns the total number of bytes in the decoded image.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":836183,"byte_end":836242,"line_start":405,"line_end":405,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":836247,"byte_end":836250,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ This is the size of the buffer that must be passed to `read_image` or","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":836255,"byte_end":836328,"line_start":407,"line_end":407,"column_start":5,"column_end":78}},{"value":"/ `read_image_with_progress`. The returned value may exceed usize::MAX, in","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":836333,"byte_end":836409,"line_start":408,"line_end":408,"column_start":5,"column_end":81}},{"value":"/ which case it isn't actually possible to construct a buffer to decode all the image data","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":836414,"byte_end":836506,"line_start":409,"line_end":409,"column_start":5,"column_end":97}},{"value":"/ into.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":836511,"byte_end":836520,"line_start":410,"line_end":410,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3656},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":836876,"byte_end":836890,"line_start":418,"line_end":418,"column_start":8,"column_end":22},"name":"scanline_bytes","qualname":"::image::ImageDecoder::scanline_bytes","value":"fn (&self) -> u64","parent":{"krate":0,"index":3648},"children":[],"decl_id":null,"docs":" Returns the minimum number of bytes that can be efficiently read from this decoder. This may\n be as few as 1 or as many as `total_bytes()`.\n","sig":null,"attributes":[{"value":"/ Returns the minimum number of bytes that can be efficiently read from this decoder. This may","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":836718,"byte_end":836814,"line_start":416,"line_end":416,"column_start":5,"column_end":101}},{"value":"/ be as few as 1 or as many as `total_bytes()`.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":836819,"byte_end":836868,"line_start":417,"line_end":417,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3657},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":837779,"byte_end":837789,"line_start":442,"line_end":442,"column_start":8,"column_end":18},"name":"read_image","qualname":"::image::ImageDecoder::read_image","value":"fn (self, buf: &mut [u8]) -> ImageResult<()>","parent":{"krate":0,"index":3648},"children":[],"decl_id":null,"docs":" Returns all the bytes in the image.","sig":null,"attributes":[{"value":"/ Returns all the bytes in the image.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":836945,"byte_end":836984,"line_start":422,"line_end":422,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":836989,"byte_end":836992,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ This function takes a slice of bytes and writes the pixel data of the image into it.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":836997,"byte_end":837085,"line_start":424,"line_end":424,"column_start":5,"column_end":93}},{"value":"/ Although not required, for certain color types callers may want to pass buffers which are","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":837090,"byte_end":837183,"line_start":425,"line_end":425,"column_start":5,"column_end":98}},{"value":"/ aligned to 2 or 4 byte boundaries to the slice can be cast to a [u16] or [u32]. To accommodate","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":837188,"byte_end":837286,"line_start":426,"line_end":426,"column_start":5,"column_end":103}},{"value":"/ such casts, the returned contents will always be in native endian.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":837291,"byte_end":837361,"line_start":427,"line_end":427,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":837366,"byte_end":837369,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":837374,"byte_end":837386,"line_start":429,"line_end":429,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":837391,"byte_end":837394,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ This function panics if buf.len() != self.total_bytes().","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":837399,"byte_end":837459,"line_start":431,"line_end":431,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":837464,"byte_end":837467,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":837472,"byte_end":837486,"line_start":433,"line_end":433,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":837491,"byte_end":837494,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ ```no_build","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":837499,"byte_end":837514,"line_start":435,"line_end":435,"column_start":5,"column_end":20}},{"value":"/ use zerocopy::{AsBytes, FromBytes};","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":837519,"byte_end":837558,"line_start":436,"line_end":436,"column_start":5,"column_end":44}},{"value":"/ fn read_16bit_image(decoder: impl ImageDecoder) -> Vec<16> {","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":837563,"byte_end":837627,"line_start":437,"line_end":437,"column_start":5,"column_end":69}},{"value":"/     let mut buf: Vec<u16> = vec![0; decoder.total_bytes()/2];","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":837632,"byte_end":837697,"line_start":438,"line_end":438,"column_start":5,"column_end":70}},{"value":"/     decoder.read_image(buf.as_bytes());","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":837702,"byte_end":837745,"line_start":439,"line_end":439,"column_start":5,"column_end":48}},{"value":"/     buf","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":837750,"byte_end":837761,"line_start":440,"line_end":440,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":837766,"byte_end":837771,"line_start":441,"line_end":441,"column_start":5,"column_end":10}}]},{"kind":"Method","id":{"krate":0,"index":3659},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":838017,"byte_end":838041,"line_start":448,"line_end":448,"column_start":8,"column_end":32},"name":"read_image_with_progress","qualname":"::image::ImageDecoder::read_image_with_progress","value":"fn <F> (self, buf: &mut [u8], progress_callback: F) -> ImageResult<()>","parent":{"krate":0,"index":3648},"children":[],"decl_id":null,"docs":" Same as `read_image` but periodically calls the provided callback to give updates on loading\n progress.\n","sig":null,"attributes":[{"value":"/ Same as `read_image` but periodically calls the provided callback to give updates on loading","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":837895,"byte_end":837991,"line_start":446,"line_end":446,"column_start":5,"column_end":101}},{"value":"/ progress.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":837996,"byte_end":838009,"line_start":447,"line_end":447,"column_start":5,"column_end":18}}]},{"kind":"Trait","id":{"krate":0,"index":3661},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":839064,"byte_end":839079,"line_start":482,"line_end":482,"column_start":11,"column_end":26},"name":"ImageDecoderExt","qualname":"::image::ImageDecoderExt","value":"ImageDecoderExt<'a>: ImageDecoder<'a> + Sized","parent":null,"children":[{"krate":0,"index":3663},{"krate":0,"index":3665}],"decl_id":null,"docs":" Specialized image decoding not be supported by all formats\n","sig":null,"attributes":[{"value":"/ Specialized image decoding not be supported by all formats","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":838991,"byte_end":839053,"line_start":481,"line_end":481,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":3663},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":839234,"byte_end":839243,"line_start":484,"line_end":484,"column_start":8,"column_end":17},"name":"read_rect","qualname":"::image::ImageDecoderExt::read_rect","value":"fn (&mut self, x: u32, y: u32, width: u32, height: u32, buf: &mut [u8]) -> ImageResult<()>","parent":{"krate":0,"index":3661},"children":[],"decl_id":null,"docs":" Decode a rectangular section of the image; see [`read_rect_with_progress()`](#fn.read_rect_with_progress).\n","sig":null,"attributes":[{"value":"/ Decode a rectangular section of the image; see [`read_rect_with_progress()`](#fn.read_rect_with_progress).","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":839116,"byte_end":839226,"line_start":483,"line_end":483,"column_start":5,"column_end":115}}]},{"kind":"Method","id":{"krate":0,"index":3665},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":840185,"byte_end":840208,"line_start":507,"line_end":507,"column_start":8,"column_end":31},"name":"read_rect_with_progress","qualname":"::image::ImageDecoderExt::read_rect_with_progress","value":"fn <F> (&mut self, x: u32, y: u32, width: u32, height: u32, buf: &mut [u8], progress_callback: F) -> ImageResult<()>","parent":{"krate":0,"index":3661},"children":[],"decl_id":null,"docs":" Decode a rectangular section of the image, periodically reporting progress.","sig":null,"attributes":[{"value":"/ Decode a rectangular section of the image, periodically reporting progress.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":839469,"byte_end":839548,"line_start":495,"line_end":495,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":839553,"byte_end":839556,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ The output buffer will be filled with fields specified by","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":839561,"byte_end":839622,"line_start":497,"line_end":497,"column_start":5,"column_end":66}},{"value":"/ [`ImageDecoder::color_type()`](trait.ImageDecoder.html#fn.color_type),","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":839627,"byte_end":839701,"line_start":498,"line_end":498,"column_start":5,"column_end":79}},{"value":"/ in that order, each field represented in native-endian.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":839706,"byte_end":839765,"line_start":499,"line_end":499,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":839770,"byte_end":839773,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ The progress callback will be called at least once at the start and the end of decoding,","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":839778,"byte_end":839870,"line_start":501,"line_end":501,"column_start":5,"column_end":97}},{"value":"/ implementations are encouraged to call this more often,","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":839875,"byte_end":839934,"line_start":502,"line_end":502,"column_start":5,"column_end":64}},{"value":"/ with a frequency meaningful for display to the end-user.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":839939,"byte_end":839999,"line_start":503,"line_end":503,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":840004,"byte_end":840007,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ This function will panic if the output buffer isn't at least","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":840012,"byte_end":840076,"line_start":505,"line_end":505,"column_start":5,"column_end":69}},{"value":"/ `color_type().bytes_per_pixel() * color_type().channel_count() * width * height` bytes long.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":840081,"byte_end":840177,"line_start":506,"line_end":506,"column_start":5,"column_end":101}}]},{"kind":"Trait","id":{"krate":0,"index":3667},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":840439,"byte_end":840455,"line_start":519,"line_end":519,"column_start":11,"column_end":27},"name":"AnimationDecoder","qualname":"::image::AnimationDecoder","value":"AnimationDecoder<'a>","parent":null,"children":[{"krate":0,"index":3669}],"decl_id":null,"docs":" AnimationDecoder trait\n","sig":null,"attributes":[{"value":"/ AnimationDecoder trait","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":840402,"byte_end":840428,"line_start":518,"line_end":518,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":3669},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":840527,"byte_end":840538,"line_start":521,"line_end":521,"column_start":8,"column_end":19},"name":"into_frames","qualname":"::image::AnimationDecoder::into_frames","value":"fn (self) -> Frames<'a>","parent":{"krate":0,"index":3667},"children":[],"decl_id":null,"docs":" Consume the decoder producing a series of frames.\n","sig":null,"attributes":[{"value":"/ Consume the decoder producing a series of frames.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":840466,"byte_end":840519,"line_start":520,"line_end":520,"column_start":5,"column_end":58}}]},{"kind":"Trait","id":{"krate":0,"index":3670},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":840610,"byte_end":840622,"line_start":525,"line_end":525,"column_start":11,"column_end":23},"name":"ImageEncoder","qualname":"::image::ImageEncoder","value":"ImageEncoder","parent":null,"children":[{"krate":0,"index":3671}],"decl_id":null,"docs":" The trait all encoders implement\n","sig":null,"attributes":[{"value":"/ The trait all encoders implement","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":840563,"byte_end":840599,"line_start":524,"line_end":524,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3671},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":841171,"byte_end":841182,"line_start":536,"line_end":536,"column_start":8,"column_end":19},"name":"write_image","qualname":"::image::ImageEncoder::write_image","value":"fn (self, buf: &[u8], width: u32, height: u32, color_type: ColorType) -> ImageResult<()>","parent":{"krate":0,"index":3670},"children":[],"decl_id":null,"docs":" Writes all the bytes in an image to the encoder.","sig":null,"attributes":[{"value":"/ Writes all the bytes in an image to the encoder.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":840629,"byte_end":840681,"line_start":526,"line_end":526,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":840686,"byte_end":840689,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ This function takes a slice of bytes of the pixel data of the image","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":840694,"byte_end":840765,"line_start":528,"line_end":528,"column_start":5,"column_end":76}},{"value":"/ and encodes them. Unlike particular format encoders inherent impl encode","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":840770,"byte_end":840846,"line_start":529,"line_end":529,"column_start":5,"column_end":81}},{"value":"/ methods where endianness is not specified, here image data bytes should","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":840851,"byte_end":840926,"line_start":530,"line_end":530,"column_start":5,"column_end":80}},{"value":"/ always be in native endian. The implementor will reorder the endianess","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":840931,"byte_end":841005,"line_start":531,"line_end":531,"column_start":5,"column_end":79}},{"value":"/ as necessary for the target encoding format.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":841010,"byte_end":841058,"line_start":532,"line_end":532,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":841063,"byte_end":841066,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/ See also `ImageDecoder::read_image` which reads byte buffers into","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":841071,"byte_end":841140,"line_start":534,"line_end":534,"column_start":5,"column_end":74}},{"value":"/ native endian.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":841145,"byte_end":841163,"line_start":535,"line_end":535,"column_start":5,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":3672},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":841359,"byte_end":841365,"line_start":546,"line_end":546,"column_start":12,"column_end":18},"name":"Pixels","qualname":"::image::Pixels","value":"Pixels {  }","parent":null,"children":[{"krate":0,"index":3675},{"krate":0,"index":3676},{"krate":0,"index":3677},{"krate":0,"index":3678},{"krate":0,"index":3679}],"decl_id":null,"docs":" Immutable pixel iterator\n","sig":null,"attributes":[{"value":"/ Immutable pixel iterator","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":841319,"byte_end":841347,"line_start":545,"line_end":545,"column_start":1,"column_end":29}}]},{"kind":"Trait","id":{"krate":0,"index":3685},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":841998,"byte_end":842014,"line_start":577,"line_end":577,"column_start":11,"column_end":27},"name":"GenericImageView","qualname":"::image::GenericImageView","value":"GenericImageView","parent":null,"children":[{"krate":0,"index":3686},{"krate":0,"index":3687},{"krate":0,"index":3688},{"krate":0,"index":3689},{"krate":0,"index":3690},{"krate":0,"index":3691},{"krate":0,"index":3692},{"krate":0,"index":3693},{"krate":0,"index":3694},{"krate":0,"index":3695},{"krate":0,"index":3696},{"krate":0,"index":3697}],"decl_id":null,"docs":" Trait to inspect an image.\n","sig":null,"attributes":[{"value":"/ Trait to inspect an image.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":841957,"byte_end":841987,"line_start":576,"line_end":576,"column_start":1,"column_end":31}}]},{"kind":"Type","id":{"krate":0,"index":3686},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":842053,"byte_end":842058,"line_start":579,"line_end":579,"column_start":10,"column_end":15},"name":"Pixel","qualname":"::image::GenericImageView::Pixel","value":"type Pixel: Pixel;","parent":{"krate":0,"index":3685},"children":[],"decl_id":null,"docs":" The type of pixel.\n","sig":null,"attributes":[{"value":"/ The type of pixel.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":842021,"byte_end":842043,"line_start":578,"line_end":578,"column_start":5,"column_end":27}}]},{"kind":"Type","id":{"krate":0,"index":3687},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":842292,"byte_end":842306,"line_start":584,"line_end":584,"column_start":10,"column_end":24},"name":"InnerImageView","qualname":"::image::GenericImageView::InnerImageView","value":"type InnerImageView: GenericImageView<Pixel = Self::Pixel>;","parent":{"krate":0,"index":3685},"children":[],"decl_id":null,"docs":" Underlying image type. This is mainly used by SubImages in order to\n always have a reference to the original image. This allows for less\n indirections and it eases the use of nested SubImages.\n","sig":null,"attributes":[{"value":"/ Underlying image type. This is mainly used by SubImages in order to","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":842072,"byte_end":842143,"line_start":581,"line_end":581,"column_start":5,"column_end":76}},{"value":"/ always have a reference to the original image. This allows for less","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":842148,"byte_end":842219,"line_start":582,"line_end":582,"column_start":5,"column_end":76}},{"value":"/ indirections and it eases the use of nested SubImages.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":842224,"byte_end":842282,"line_start":583,"line_end":583,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":3688},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":842399,"byte_end":842409,"line_start":587,"line_end":587,"column_start":8,"column_end":18},"name":"dimensions","qualname":"::image::GenericImageView::dimensions","value":"fn (&self) -> (u32, u32)","parent":{"krate":0,"index":3685},"children":[],"decl_id":null,"docs":" The width and height of this image.\n","sig":null,"attributes":[{"value":"/ The width and height of this image.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":842352,"byte_end":842391,"line_start":586,"line_end":586,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":3689},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":842473,"byte_end":842478,"line_start":590,"line_end":590,"column_start":8,"column_end":13},"name":"width","qualname":"::image::GenericImageView::width","value":"fn (&self) -> u32","parent":{"krate":0,"index":3685},"children":[],"decl_id":null,"docs":" The width of this image.\n","sig":null,"attributes":[{"value":"/ The width of this image.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":842437,"byte_end":842465,"line_start":589,"line_end":589,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":3690},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":842593,"byte_end":842599,"line_start":596,"line_end":596,"column_start":8,"column_end":14},"name":"height","qualname":"::image::GenericImageView::height","value":"fn (&self) -> u32","parent":{"krate":0,"index":3685},"children":[],"decl_id":null,"docs":" The height of this image.\n","sig":null,"attributes":[{"value":"/ The height of this image.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":842556,"byte_end":842585,"line_start":595,"line_end":595,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":3691},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":842726,"byte_end":842732,"line_start":602,"line_end":602,"column_start":8,"column_end":14},"name":"bounds","qualname":"::image::GenericImageView::bounds","value":"fn (&self) -> (u32, u32, u32, u32)","parent":{"krate":0,"index":3685},"children":[],"decl_id":null,"docs":" The bounding rectangle of this image.\n","sig":null,"attributes":[{"value":"/ The bounding rectangle of this image.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":842677,"byte_end":842718,"line_start":601,"line_end":601,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":3692},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":842849,"byte_end":842858,"line_start":605,"line_end":605,"column_start":8,"column_end":17},"name":"in_bounds","qualname":"::image::GenericImageView::in_bounds","value":"fn (&self, x: u32, y: u32) -> bool","parent":{"krate":0,"index":3685},"children":[],"decl_id":null,"docs":" Returns true if this x, y coordinate is contained inside the image.\n","sig":null,"attributes":[{"value":"/ Returns true if this x, y coordinate is contained inside the image.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":842770,"byte_end":842841,"line_start":604,"line_end":604,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":3693},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":843181,"byte_end":843190,"line_start":617,"line_end":617,"column_start":8,"column_end":17},"name":"get_pixel","qualname":"::image::GenericImageView::get_pixel","value":"fn (&self, x: u32, y: u32) -> Self::Pixel","parent":{"krate":0,"index":3685},"children":[],"decl_id":null,"docs":" Returns the pixel located at (x, y)","sig":null,"attributes":[{"value":"/ Returns the pixel located at (x, y)","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":843006,"byte_end":843045,"line_start":610,"line_end":610,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":843050,"byte_end":843053,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":843058,"byte_end":843070,"line_start":612,"line_end":612,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":843075,"byte_end":843078,"line_start":613,"line_end":613,"column_start":5,"column_end":8}},{"value":"/ Panics if `(x, y)` is out of bounds.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":843083,"byte_end":843123,"line_start":614,"line_end":614,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":843128,"byte_end":843131,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ TODO: change this signature to &P","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":843136,"byte_end":843173,"line_start":616,"line_end":616,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":3694},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":843377,"byte_end":843393,"line_start":622,"line_end":622,"column_start":15,"column_end":31},"name":"unsafe_get_pixel","qualname":"::image::GenericImageView::unsafe_get_pixel","value":"fn (&self, x: u32, y: u32) -> Self::Pixel","parent":{"krate":0,"index":3685},"children":[],"decl_id":null,"docs":" Returns the pixel located at (x, y)","sig":null,"attributes":[{"value":"/ Returns the pixel located at (x, y)","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":843235,"byte_end":843274,"line_start":619,"line_end":619,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":843279,"byte_end":843282,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ This function can be implemented in a way that ignores bounds checking.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":843287,"byte_end":843362,"line_start":621,"line_end":621,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":3695},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":843625,"byte_end":843631,"line_start":629,"line_end":629,"column_start":8,"column_end":14},"name":"pixels","qualname":"::image::GenericImageView::pixels","value":"fn (&self) -> Pixels<Self>","parent":{"krate":0,"index":3685},"children":[],"decl_id":null,"docs":" Returns an Iterator over the pixels of this image.\n The iterator yields the coordinates of each pixel\n along with their value\n","sig":null,"attributes":[{"value":"/ Returns an Iterator over the pixels of this image.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":843474,"byte_end":843528,"line_start":626,"line_end":626,"column_start":5,"column_end":59}},{"value":"/ The iterator yields the coordinates of each pixel","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":843533,"byte_end":843586,"line_start":627,"line_end":627,"column_start":5,"column_end":58}},{"value":"/ along with their value","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":843591,"byte_end":843617,"line_start":628,"line_end":628,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":3696},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":843901,"byte_end":843906,"line_start":642,"line_end":642,"column_start":8,"column_end":13},"name":"inner","qualname":"::image::GenericImageView::inner","value":"fn (&self) -> &Self::InnerImageView","parent":{"krate":0,"index":3685},"children":[],"decl_id":null,"docs":" Returns a reference to the underlying image.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying image.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":843845,"byte_end":843893,"line_start":641,"line_end":641,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":3697},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":844103,"byte_end":844107,"line_start":646,"line_end":646,"column_start":8,"column_end":12},"name":"view","qualname":"::image::GenericImageView::view","value":"fn (&self, x: u32, y: u32, width: u32, height: u32) -> SubImage<&Self::InnerImageView>","parent":{"krate":0,"index":3685},"children":[],"decl_id":null,"docs":" Returns an subimage that is an immutable view into this image.\n You can use [`GenericImage::sub_image`] if you need a mutable view instead.\n","sig":null,"attributes":[{"value":"/ Returns an subimage that is an immutable view into this image.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":843945,"byte_end":844011,"line_start":644,"line_end":644,"column_start":5,"column_end":71}},{"value":"/ You can use [`GenericImage::sub_image`] if you need a mutable view instead.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":844016,"byte_end":844095,"line_start":645,"line_end":645,"column_start":5,"column_end":84}}]},{"kind":"Trait","id":{"krate":0,"index":3698},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":844306,"byte_end":844318,"line_start":652,"line_end":652,"column_start":11,"column_end":23},"name":"GenericImage","qualname":"::image::GenericImage","value":"GenericImage: GenericImageView","parent":null,"children":[{"krate":0,"index":3699},{"krate":0,"index":3700},{"krate":0,"index":3701},{"krate":0,"index":3702},{"krate":0,"index":3703},{"krate":0,"index":3704},{"krate":0,"index":3706},{"krate":0,"index":3708},{"krate":0,"index":3709}],"decl_id":null,"docs":" A trait for manipulating images.\n","sig":null,"attributes":[{"value":"/ A trait for manipulating images.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":844259,"byte_end":844295,"line_start":651,"line_end":651,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":3699},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":844563,"byte_end":844573,"line_start":656,"line_end":656,"column_start":10,"column_end":20},"name":"InnerImage","qualname":"::image::GenericImage::InnerImage","value":"type InnerImage: GenericImage<Pixel = Self::Pixel>;","parent":{"krate":0,"index":3698},"children":[],"decl_id":null,"docs":" Underlying image type. This is mainly used by SubImages in order to\n always have a reference to the original image. This allows for less\n indirections and it eases the use of nested SubImages.\n","sig":null,"attributes":[{"value":"/ Underlying image type. This is mainly used by SubImages in order to","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":844343,"byte_end":844414,"line_start":653,"line_end":653,"column_start":5,"column_end":76}},{"value":"/ always have a reference to the original image. This allows for less","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":844419,"byte_end":844490,"line_start":654,"line_end":654,"column_start":5,"column_end":76}},{"value":"/ indirections and it eases the use of nested SubImages.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":844495,"byte_end":844553,"line_start":655,"line_end":655,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":3700},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":844763,"byte_end":844776,"line_start":663,"line_end":663,"column_start":8,"column_end":21},"name":"get_pixel_mut","qualname":"::image::GenericImage::get_pixel_mut","value":"fn (&mut self, x: u32, y: u32) -> &mut Self::Pixel","parent":{"krate":0,"index":3698},"children":[],"decl_id":null,"docs":" Gets a reference to the mutable pixel at location `(x, y)`","sig":null,"attributes":[{"value":"/ Gets a reference to the mutable pixel at location `(x, y)`","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":844615,"byte_end":844677,"line_start":658,"line_end":658,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":844682,"byte_end":844685,"line_start":659,"line_end":659,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":844690,"byte_end":844702,"line_start":660,"line_end":660,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":844707,"byte_end":844710,"line_start":661,"line_end":661,"column_start":5,"column_end":8}},{"value":"/ Panics if `(x, y)` is out of bounds.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":844715,"byte_end":844755,"line_start":662,"line_end":662,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":3701},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":844950,"byte_end":844959,"line_start":670,"line_end":670,"column_start":8,"column_end":17},"name":"put_pixel","qualname":"::image::GenericImage::put_pixel","value":"fn (&mut self, x: u32, y: u32, pixel: Self::Pixel) -> ()","parent":{"krate":0,"index":3698},"children":[],"decl_id":null,"docs":" Put a pixel at location (x, y)","sig":null,"attributes":[{"value":"/ Put a pixel at location (x, y)","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":844830,"byte_end":844864,"line_start":665,"line_end":665,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":844869,"byte_end":844872,"line_start":666,"line_end":666,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":844877,"byte_end":844889,"line_start":667,"line_end":667,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":844894,"byte_end":844897,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/ Panics if `(x, y)` is out of bounds.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":844902,"byte_end":844942,"line_start":669,"line_end":669,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":3702},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":845151,"byte_end":845167,"line_start":675,"line_end":675,"column_start":15,"column_end":31},"name":"unsafe_put_pixel","qualname":"::image::GenericImage::unsafe_put_pixel","value":"fn (&mut self, x: u32, y: u32, pixel: Self::Pixel) -> ()","parent":{"krate":0,"index":3698},"children":[],"decl_id":null,"docs":" Puts a pixel at location (x, y)","sig":null,"attributes":[{"value":"/ Puts a pixel at location (x, y)","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":845013,"byte_end":845048,"line_start":672,"line_end":672,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":845053,"byte_end":845056,"line_start":673,"line_end":673,"column_start":5,"column_end":8}},{"value":"/ This function can be implemented in a way that ignores bounds checking.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":845061,"byte_end":845136,"line_start":674,"line_end":674,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":3703},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":845434,"byte_end":845445,"line_start":682,"line_end":682,"column_start":8,"column_end":19},"name":"blend_pixel","qualname":"::image::GenericImage::blend_pixel","value":"fn (&mut self, x: u32, y: u32, pixel: Self::Pixel) -> ()","parent":{"krate":0,"index":3698},"children":[],"decl_id":null,"docs":" Put a pixel at location (x, y), taking into account alpha channels","sig":null,"attributes":[{"value":"/ Put a pixel at location (x, y), taking into account alpha channels","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":845265,"byte_end":845335,"line_start":679,"line_end":679,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":845340,"byte_end":845343,"line_start":680,"line_end":680,"column_start":5,"column_end":8}},{"value":"/ DEPRECATED: This method will be removed. Blend the pixel directly instead.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":845348,"byte_end":845426,"line_start":681,"line_end":681,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":3704},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":846207,"byte_end":846216,"line_start":699,"line_end":699,"column_start":8,"column_end":17},"name":"copy_from","qualname":"::image::GenericImage::copy_from","value":"fn <O> (&mut self, other: &O, x: u32, y: u32) -> ImageResult<()>","parent":{"krate":0,"index":3698},"children":[],"decl_id":null,"docs":" Copies all of the pixels from another image into this image.","sig":null,"attributes":[{"value":"/ Copies all of the pixels from another image into this image.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":845499,"byte_end":845563,"line_start":684,"line_end":684,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":845568,"byte_end":845571,"line_start":685,"line_end":685,"column_start":5,"column_end":8}},{"value":"/ The other image is copied with the top-left corner of the","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":845576,"byte_end":845637,"line_start":686,"line_end":686,"column_start":5,"column_end":66}},{"value":"/ other image placed at (x, y).","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":845642,"byte_end":845675,"line_start":687,"line_end":687,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":845680,"byte_end":845683,"line_start":688,"line_end":688,"column_start":5,"column_end":8}},{"value":"/ In order to copy only a piece of the other image, use [`GenericImageView::view`].","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":845688,"byte_end":845773,"line_start":689,"line_end":689,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":845778,"byte_end":845781,"line_start":690,"line_end":690,"column_start":5,"column_end":8}},{"value":"/ You can use [`FlatSamples`] to source pixels from an arbitrary regular raster of channel","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":845786,"byte_end":845878,"line_start":691,"line_end":691,"column_start":5,"column_end":97}},{"value":"/ values, for example from a foreign interface or a fixed image.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":845883,"byte_end":845949,"line_start":692,"line_end":692,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":845954,"byte_end":845957,"line_start":693,"line_end":693,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":845962,"byte_end":845975,"line_start":694,"line_end":694,"column_start":5,"column_end":18}},{"value":"/ Returns an error if the image is too large to be copied at the given position","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":845980,"byte_end":846061,"line_start":695,"line_end":695,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":846066,"byte_end":846069,"line_start":696,"line_end":696,"column_start":5,"column_end":8}},{"value":"/ [`GenericImageView::view`]: trait.GenericImageView.html#method.view","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":846074,"byte_end":846145,"line_start":697,"line_end":697,"column_start":5,"column_end":76}},{"value":"/ [`FlatSamples`]: flat/struct.FlatSamples.html","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":846150,"byte_end":846199,"line_start":698,"line_end":698,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3706},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":847263,"byte_end":847274,"line_start":727,"line_end":727,"column_start":8,"column_end":19},"name":"copy_within","qualname":"::image::GenericImage::copy_within","value":"fn (&mut self, source: Rect, x: u32, y: u32) -> bool","parent":{"krate":0,"index":3698},"children":[],"decl_id":null,"docs":" Copies all of the pixels from one part of this image to another part of this image.","sig":null,"attributes":[{"value":"/ Copies all of the pixels from one part of this image to another part of this image.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":846915,"byte_end":847002,"line_start":720,"line_end":720,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":847007,"byte_end":847010,"line_start":721,"line_end":721,"column_start":5,"column_end":8}},{"value":"/ The destination rectangle of the copy is specified with the top-left corner placed at (x, y).","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":847015,"byte_end":847112,"line_start":722,"line_end":722,"column_start":5,"column_end":102}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":847117,"byte_end":847120,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":847125,"byte_end":847138,"line_start":724,"line_end":724,"column_start":5,"column_end":18}},{"value":"/ `true` if the copy was successful, `false` if the image could not","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":847143,"byte_end":847212,"line_start":725,"line_end":725,"column_start":5,"column_end":74}},{"value":"/ be copied due to size constraints.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":847217,"byte_end":847255,"line_start":726,"line_end":726,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":3708},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":848932,"byte_end":848941,"line_start":763,"line_end":763,"column_start":8,"column_end":17},"name":"inner_mut","qualname":"::image::GenericImage::inner_mut","value":"fn (&mut self) -> &mut Self::InnerImage","parent":{"krate":0,"index":3698},"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying image.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying image.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":848868,"byte_end":848924,"line_start":762,"line_end":762,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":3709},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":849136,"byte_end":849145,"line_start":767,"line_end":767,"column_start":8,"column_end":17},"name":"sub_image","qualname":"::image::GenericImage::sub_image","value":"fn (&mut self, x: u32, y: u32, width: u32, height: u32) -> SubImage<&mut Self::InnerImage>","parent":{"krate":0,"index":3698},"children":[],"decl_id":null,"docs":" Returns a mutable subimage that is a view into this image.\n If you want an immutable subimage instead, use [`GenericImageView::view`]\n","sig":null,"attributes":[{"value":"/ Returns a mutable subimage that is a view into this image.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":848984,"byte_end":849046,"line_start":765,"line_end":765,"column_start":5,"column_end":67}},{"value":"/ If you want an immutable subimage instead, use [`GenericImageView::view`]","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":849051,"byte_end":849128,"line_start":766,"line_end":766,"column_start":5,"column_end":82}}]},{"kind":"Struct","id":{"krate":0,"index":3710},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":849636,"byte_end":849644,"line_start":784,"line_end":784,"column_start":12,"column_end":20},"name":"SubImage","qualname":"::image::SubImage","value":"SubImage {  }","parent":null,"children":[{"krate":0,"index":3712},{"krate":0,"index":3713},{"krate":0,"index":3714},{"krate":0,"index":3715},{"krate":0,"index":3716}],"decl_id":null,"docs":" A View into another image","sig":null,"attributes":[{"value":"/ A View into another image","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":849352,"byte_end":849381,"line_start":778,"line_end":778,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":849382,"byte_end":849385,"line_start":779,"line_end":779,"column_start":1,"column_end":4}},{"value":"/ Instances of this struct can be created using:","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":849386,"byte_end":849436,"line_start":780,"line_end":780,"column_start":1,"column_end":51}},{"value":"/   - [`GenericImage::sub_image`] to create a mutable view,","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":849437,"byte_end":849498,"line_start":781,"line_end":781,"column_start":1,"column_end":62}},{"value":"/   - [`GenericImageView::view`] to create an immutable view,","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":849499,"byte_end":849562,"line_start":782,"line_end":782,"column_start":1,"column_end":64}},{"value":"/   - [`SubImage::new`] to instantiate the struct directly.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":849563,"byte_end":849624,"line_start":783,"line_end":783,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":3723},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":850032,"byte_end":850035,"line_start":800,"line_end":800,"column_start":12,"column_end":15},"name":"new","qualname":"<SubImage<I>>::new","value":"fn (image: I, x: u32, y: u32, width: u32, height: u32) -> SubImage<I>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new subimage\n","sig":null,"attributes":[{"value":"/ Construct a new subimage","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":849992,"byte_end":850020,"line_start":799,"line_end":799,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":3724},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":850324,"byte_end":850337,"line_start":811,"line_end":811,"column_start":12,"column_end":25},"name":"change_bounds","qualname":"<SubImage<I>>::change_bounds","value":"fn (&mut self, x: u32, y: u32, width: u32, height: u32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Change the coordinates of this subimage.\n","sig":null,"attributes":[{"value":"/ Change the coordinates of this subimage.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":850268,"byte_end":850312,"line_start":810,"line_end":810,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":3725},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":850571,"byte_end":850579,"line_start":819,"line_end":819,"column_start":12,"column_end":20},"name":"to_image","qualname":"<SubImage<I>>::to_image","value":"fn (&self) -> ImageBuffer<DerefPixel<I>, Vec<DerefSubpixel<I>>>","parent":null,"children":[],"decl_id":null,"docs":" Convert this subimage to an ImageBuffer\n","sig":null,"attributes":[{"value":"/ Convert this subimage to an ImageBuffer","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":850516,"byte_end":850559,"line_start":818,"line_end":818,"column_start":5,"column_end":48}}]},{"kind":"Trait","id":{"krate":0,"index":3757},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/traits.rs","byte_start":863957,"byte_end":863972,"line_start":12,"line_end":12,"column_start":11,"column_end":26},"name":"EncodableLayout","qualname":"::traits::EncodableLayout","value":"EncodableLayout: seals::EncodableLayout","parent":null,"children":[{"krate":0,"index":3758}],"decl_id":null,"docs":" Types which are safe to treat as an immutable byte slice in a pixel layout\n for image encoding.\n","sig":null,"attributes":[{"value":"/ Types which are safe to treat as an immutable byte slice in a pixel layout","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/traits.rs","byte_start":863844,"byte_end":863922,"line_start":10,"line_end":10,"column_start":1,"column_end":79}},{"value":"/ for image encoding.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/traits.rs","byte_start":863923,"byte_end":863946,"line_start":11,"line_end":11,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":3758},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/traits.rs","byte_start":864043,"byte_end":864051,"line_start":14,"line_end":14,"column_start":8,"column_end":16},"name":"as_bytes","qualname":"::traits::EncodableLayout::as_bytes","value":"fn (&self) -> &[u8]","parent":{"krate":0,"index":3757},"children":[],"decl_id":null,"docs":" Get the bytes of this value.\n","sig":null,"attributes":[{"value":"/ Get the bytes of this value.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/traits.rs","byte_start":864003,"byte_end":864035,"line_start":13,"line_end":13,"column_start":5,"column_end":37}}]},{"kind":"Trait","id":{"krate":0,"index":3763},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/traits.rs","byte_start":864339,"byte_end":864348,"line_start":30,"line_end":30,"column_start":11,"column_end":20},"name":"Primitive","qualname":"::traits::Primitive","value":"Primitive: Copy + NumCast + Num + PartialOrd<Self> + Clone + Bounded","parent":null,"children":[],"decl_id":null,"docs":" Primitive trait from old stdlib\n","sig":null,"attributes":[{"value":"/ Primitive trait from old stdlib","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/traits.rs","byte_start":864293,"byte_end":864328,"line_start":29,"line_end":29,"column_start":1,"column_end":36}}]},{"kind":"Trait","id":{"krate":0,"index":3776},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/traits.rs","byte_start":864870,"byte_end":864881,"line_start":47,"line_end":47,"column_start":11,"column_end":22},"name":"Enlargeable","qualname":"::traits::Enlargeable","value":"Enlargeable: Sized + Bounded + NumCast","parent":null,"children":[{"krate":0,"index":3777},{"krate":0,"index":3778}],"decl_id":null,"docs":" An Enlargable::Larger value should be enough to calculate\n the sum (average) of a few hundred or thousand Enlargeable values.\n","sig":null,"attributes":[{"value":"/ An Enlargable::Larger value should be enough to calculate","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/traits.rs","byte_start":864727,"byte_end":864788,"line_start":45,"line_end":45,"column_start":1,"column_end":62}},{"value":"/ the sum (average) of a few hundred or thousand Enlargeable values.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/traits.rs","byte_start":864789,"byte_end":864859,"line_start":46,"line_end":46,"column_start":1,"column_end":71}}]},{"kind":"Type","id":{"krate":0,"index":3777},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/traits.rs","byte_start":864920,"byte_end":864926,"line_start":48,"line_end":48,"column_start":10,"column_end":16},"name":"Larger","qualname":"::traits::Enlargeable::Larger","value":"type Larger: Primitive + AddAssign + 'static;","parent":{"krate":0,"index":3776},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3778},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/traits.rs","byte_start":864969,"byte_end":864979,"line_start":50,"line_end":50,"column_start":8,"column_end":18},"name":"clamp_from","qualname":"::traits::Enlargeable::clamp_from","value":"fn (n: Self::Larger) -> Self","parent":{"krate":0,"index":3776},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3785},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/traits.rs","byte_start":865505,"byte_end":865510,"line_start":73,"line_end":73,"column_start":11,"column_end":16},"name":"Pixel","qualname":"::traits::Pixel","value":"Pixel: Copy + Clone","parent":null,"children":[{"krate":0,"index":3786},{"krate":0,"index":3787},{"krate":0,"index":3788},{"krate":0,"index":3789},{"krate":0,"index":3790},{"krate":0,"index":3791},{"krate":0,"index":3792},{"krate":0,"index":3793},{"krate":0,"index":3794},{"krate":0,"index":3795},{"krate":0,"index":3796},{"krate":0,"index":3797},{"krate":0,"index":3798},{"krate":0,"index":3799},{"krate":0,"index":3800},{"krate":0,"index":3801},{"krate":0,"index":3802},{"krate":0,"index":3803},{"krate":0,"index":3804},{"krate":0,"index":3805},{"krate":0,"index":3807},{"krate":0,"index":3809},{"krate":0,"index":3812},{"krate":0,"index":3815},{"krate":0,"index":3818},{"krate":0,"index":3821},{"krate":0,"index":3823},{"krate":0,"index":3825},{"krate":0,"index":3826}],"decl_id":null,"docs":" A generalized pixel.","sig":null,"attributes":[{"value":"/ A generalized pixel.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/traits.rs","byte_start":865380,"byte_end":865404,"line_start":70,"line_end":70,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/traits.rs","byte_start":865405,"byte_end":865408,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ A pixel object is usually not used standalone but as a view into an image buffer.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/traits.rs","byte_start":865409,"byte_end":865494,"line_start":72,"line_end":72,"column_start":1,"column_end":86}}]},{"kind":"Type","id":{"krate":0,"index":3786},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/traits.rs","byte_start":865574,"byte_end":865582,"line_start":75,"line_end":75,"column_start":10,"column_end":18},"name":"Subpixel","qualname":"::traits::Pixel::Subpixel","value":"type Subpixel: Primitive;","parent":{"krate":0,"index":3785},"children":[],"decl_id":null,"docs":" The underlying subpixel type.\n","sig":null,"attributes":[{"value":"/ The underlying subpixel type.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/traits.rs","byte_start":865531,"byte_end":865564,"line_start":74,"line_end":74,"column_start":5,"column_end":38}}]},{"kind":"Const","id":{"krate":0,"index":3787},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/traits.rs","byte_start":865657,"byte_end":865670,"line_start":78,"line_end":78,"column_start":11,"column_end":24},"name":"CHANNEL_COUNT","qualname":"::traits::Pixel::CHANNEL_COUNT","value":"u8","parent":{"krate":0,"index":3785},"children":[],"decl_id":null,"docs":" The number of channels of this pixel type.\n","sig":null,"attributes":[{"value":"/ The number of channels of this pixel type.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/traits.rs","byte_start":865600,"byte_end":865646,"line_start":77,"line_end":77,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":3788},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/traits.rs","byte_start":865813,"byte_end":865826,"line_start":81,"line_end":81,"column_start":8,"column_end":21},"name":"channel_count","qualname":"::traits::Pixel::channel_count","value":"fn () -> u8","parent":{"krate":0,"index":3785},"children":[],"decl_id":null,"docs":" Returns the number of channels of this pixel type.\n","sig":null,"attributes":[{"value":"/ Returns the number of channels of this pixel type.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/traits.rs","byte_start":865680,"byte_end":865734,"line_start":79,"line_end":79,"column_start":5,"column_end":59}},{"value":"deprecated(note = \"please use CHANNEL_COUNT associated constant\")","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/traits.rs","byte_start":865739,"byte_end":865805,"line_start":80,"line_end":80,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":3789},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/traits.rs","byte_start":865922,"byte_end":865930,"line_start":86,"line_end":86,"column_start":8,"column_end":16},"name":"channels","qualname":"::traits::Pixel::channels","value":"fn (&self) -> &[Self::Subpixel]","parent":{"krate":0,"index":3785},"children":[],"decl_id":null,"docs":" Returns the components as a slice.\n","sig":null,"attributes":[{"value":"/ Returns the components as a slice.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/traits.rs","byte_start":865876,"byte_end":865914,"line_start":85,"line_end":85,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":3790},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/traits.rs","byte_start":866018,"byte_end":866030,"line_start":89,"line_end":89,"column_start":8,"column_end":20},"name":"channels_mut","qualname":"::traits::Pixel::channels_mut","value":"fn (&mut self) -> &mut [Self::Subpixel]","parent":{"krate":0,"index":3785},"children":[],"decl_id":null,"docs":" Returns the components as a mutable slice\n","sig":null,"attributes":[{"value":"/ Returns the components as a mutable slice","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/traits.rs","byte_start":865965,"byte_end":866010,"line_start":88,"line_end":88,"column_start":5,"column_end":50}}]},{"kind":"Const","id":{"krate":0,"index":3791},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/traits.rs","byte_start":866196,"byte_end":866207,"line_start":93,"line_end":93,"column_start":11,"column_end":22},"name":"COLOR_MODEL","qualname":"::traits::Pixel::COLOR_MODEL","value":"&'static str","parent":{"krate":0,"index":3785},"children":[],"decl_id":null,"docs":" A string that can help to interpret the meaning each channel\n See [gimp babl](http://gegl.org/babl/).\n","sig":null,"attributes":[{"value":"/ A string that can help to interpret the meaning each channel","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/traits.rs","byte_start":866073,"byte_end":866137,"line_start":91,"line_end":91,"column_start":5,"column_end":69}},{"value":"/ See [gimp babl](http://gegl.org/babl/).","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/traits.rs","byte_start":866142,"byte_end":866185,"line_start":92,"line_end":92,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":3792},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/traits.rs","byte_start":866424,"byte_end":866435,"line_start":97,"line_end":97,"column_start":8,"column_end":19},"name":"color_model","qualname":"::traits::Pixel::color_model","value":"fn () -> &'static str","parent":{"krate":0,"index":3785},"children":[],"decl_id":null,"docs":" Returns a string that can help to interpret the meaning each channel\n See [gimp babl](http://gegl.org/babl/).\n","sig":null,"attributes":[{"value":"/ Returns a string that can help to interpret the meaning each channel","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/traits.rs","byte_start":866227,"byte_end":866299,"line_start":94,"line_end":94,"column_start":5,"column_end":77}},{"value":"/ See [gimp babl](http://gegl.org/babl/).","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/traits.rs","byte_start":866304,"byte_end":866347,"line_start":95,"line_end":95,"column_start":5,"column_end":48}},{"value":"deprecated(note = \"please use COLOR_MODEL associated constant\")","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/traits.rs","byte_start":866352,"byte_end":866416,"line_start":96,"line_end":96,"column_start":5,"column_end":69}}]},{"kind":"Const","id":{"krate":0,"index":3793},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/traits.rs","byte_start":866539,"byte_end":866549,"line_start":102,"line_end":102,"column_start":11,"column_end":21},"name":"COLOR_TYPE","qualname":"::traits::Pixel::COLOR_TYPE","value":"ColorType","parent":{"krate":0,"index":3785},"children":[],"decl_id":null,"docs":" ColorType for this pixel format\n","sig":null,"attributes":[{"value":"/ ColorType for this pixel format","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/traits.rs","byte_start":866493,"byte_end":866528,"line_start":101,"line_end":101,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3794},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/traits.rs","byte_start":866689,"byte_end":866699,"line_start":105,"line_end":105,"column_start":8,"column_end":18},"name":"color_type","qualname":"::traits::Pixel::color_type","value":"fn () -> ColorType","parent":{"krate":0,"index":3785},"children":[],"decl_id":null,"docs":" Returns the ColorType for this pixel format\n","sig":null,"attributes":[{"value":"/ Returns the ColorType for this pixel format","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/traits.rs","byte_start":866566,"byte_end":866613,"line_start":103,"line_end":103,"column_start":5,"column_end":52}},{"value":"deprecated(note = \"please use COLOR_TYPE associated constant\")","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/traits.rs","byte_start":866618,"byte_end":866681,"line_start":104,"line_end":104,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":3795},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/traits.rs","byte_start":866937,"byte_end":866946,"line_start":113,"line_end":113,"column_start":8,"column_end":17},"name":"channels4","qualname":"::traits::Pixel::channels4","value":"fn (&self) -> (Self::Subpixel, Self::Subpixel, Self::Subpixel, Self::Subpixel)","parent":{"krate":0,"index":3785},"children":[],"decl_id":null,"docs":" Returns the channels of this pixel as a 4 tuple. If the pixel\n has less than 4 channels the remainder is filled with the maximum value","sig":null,"attributes":[{"value":"/ Returns the channels of this pixel as a 4 tuple. If the pixel","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/traits.rs","byte_start":866753,"byte_end":866818,"line_start":109,"line_end":109,"column_start":5,"column_end":70}},{"value":"/ has less than 4 channels the remainder is filled with the maximum value","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/traits.rs","byte_start":866823,"byte_end":866898,"line_start":110,"line_end":110,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/traits.rs","byte_start":866903,"byte_end":866906,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ TODO deprecate","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/traits.rs","byte_start":866911,"byte_end":866929,"line_start":112,"line_end":112,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":3796},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/traits.rs","byte_start":867249,"byte_end":867262,"line_start":126,"line_end":126,"column_start":8,"column_end":21},"name":"from_channels","qualname":"::traits::Pixel::from_channels","value":"fn (a: Self::Subpixel, b: Self::Subpixel, c: Self::Subpixel, d: Self::Subpixel) -> Self","parent":{"krate":0,"index":3785},"children":[],"decl_id":null,"docs":" Construct a pixel from the 4 channels a, b, c and d.\n If the pixel does not contain 4 channels the extra are ignored.","sig":null,"attributes":[{"value":"/ Construct a pixel from the 4 channels a, b, c and d.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/traits.rs","byte_start":867082,"byte_end":867138,"line_start":122,"line_end":122,"column_start":5,"column_end":61}},{"value":"/ If the pixel does not contain 4 channels the extra are ignored.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/traits.rs","byte_start":867143,"byte_end":867210,"line_start":123,"line_end":123,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/traits.rs","byte_start":867215,"byte_end":867218,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ TODO deprecate","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/traits.rs","byte_start":867223,"byte_end":867241,"line_start":125,"line_end":125,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":3797},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/traits.rs","byte_start":867616,"byte_end":867626,"line_start":137,"line_end":137,"column_start":8,"column_end":18},"name":"from_slice","qualname":"::traits::Pixel::from_slice","value":"fn (slice: &[Self::Subpixel]) -> &Self","parent":{"krate":0,"index":3785},"children":[],"decl_id":null,"docs":" Returns a view into a slice.","sig":null,"attributes":[{"value":"/ Returns a view into a slice.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/traits.rs","byte_start":867392,"byte_end":867424,"line_start":133,"line_end":133,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/traits.rs","byte_start":867429,"byte_end":867432,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Note: The slice length is not checked on creation. Thus the caller has to ensure","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/traits.rs","byte_start":867437,"byte_end":867521,"line_start":135,"line_end":135,"column_start":5,"column_end":89}},{"value":"/ that the slice is long enough to present panics if the pixel is used later on.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/traits.rs","byte_start":867526,"byte_end":867608,"line_start":136,"line_end":136,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":3798},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/traits.rs","byte_start":867906,"byte_end":867920,"line_start":143,"line_end":143,"column_start":8,"column_end":22},"name":"from_slice_mut","qualname":"::traits::Pixel::from_slice_mut","value":"fn (slice: &mut [Self::Subpixel]) -> &mut Self","parent":{"krate":0,"index":3785},"children":[],"decl_id":null,"docs":" Returns mutable view into a mutable slice.","sig":null,"attributes":[{"value":"/ Returns mutable view into a mutable slice.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/traits.rs","byte_start":867668,"byte_end":867714,"line_start":139,"line_end":139,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/traits.rs","byte_start":867719,"byte_end":867722,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ Note: The slice length is not checked on creation. Thus the caller has to ensure","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/traits.rs","byte_start":867727,"byte_end":867811,"line_start":141,"line_end":141,"column_start":5,"column_end":89}},{"value":"/ that the slice is long enough to present panics if the pixel is used later on.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/traits.rs","byte_start":867816,"byte_end":867898,"line_start":142,"line_end":142,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":3799},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/traits.rs","byte_start":868007,"byte_end":868013,"line_start":146,"line_end":146,"column_start":8,"column_end":14},"name":"to_rgb","qualname":"::traits::Pixel::to_rgb","value":"fn (&self) -> Rgb<Self::Subpixel>","parent":{"krate":0,"index":3785},"children":[],"decl_id":null,"docs":" Convert this pixel to RGB\n","sig":null,"attributes":[{"value":"/ Convert this pixel to RGB","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/traits.rs","byte_start":867970,"byte_end":867999,"line_start":145,"line_end":145,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":3800},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/traits.rs","byte_start":868109,"byte_end":868116,"line_start":149,"line_end":149,"column_start":8,"column_end":15},"name":"to_rgba","qualname":"::traits::Pixel::to_rgba","value":"fn (&self) -> Rgba<Self::Subpixel>","parent":{"krate":0,"index":3785},"children":[],"decl_id":null,"docs":" Convert this pixel to RGB with an alpha channel\n","sig":null,"attributes":[{"value":"/ Convert this pixel to RGB with an alpha channel","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/traits.rs","byte_start":868050,"byte_end":868101,"line_start":148,"line_end":148,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":3801},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/traits.rs","byte_start":868192,"byte_end":868199,"line_start":152,"line_end":152,"column_start":8,"column_end":15},"name":"to_luma","qualname":"::traits::Pixel::to_luma","value":"fn (&self) -> Luma<Self::Subpixel>","parent":{"krate":0,"index":3785},"children":[],"decl_id":null,"docs":" Convert this pixel to luma\n","sig":null,"attributes":[{"value":"/ Convert this pixel to luma","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/traits.rs","byte_start":868154,"byte_end":868184,"line_start":151,"line_end":151,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":3802},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/traits.rs","byte_start":868297,"byte_end":868310,"line_start":155,"line_end":155,"column_start":8,"column_end":21},"name":"to_luma_alpha","qualname":"::traits::Pixel::to_luma_alpha","value":"fn (&self) -> LumaA<Self::Subpixel>","parent":{"krate":0,"index":3785},"children":[],"decl_id":null,"docs":" Convert this pixel to luma with an alpha channel\n","sig":null,"attributes":[{"value":"/ Convert this pixel to luma with an alpha channel","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/traits.rs","byte_start":868237,"byte_end":868289,"line_start":154,"line_end":154,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":3803},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/traits.rs","byte_start":868386,"byte_end":868392,"line_start":158,"line_end":158,"column_start":8,"column_end":14},"name":"to_bgr","qualname":"::traits::Pixel::to_bgr","value":"fn (&self) -> Bgr<Self::Subpixel>","parent":{"krate":0,"index":3785},"children":[],"decl_id":null,"docs":" Convert this pixel to BGR\n","sig":null,"attributes":[{"value":"/ Convert this pixel to BGR","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/traits.rs","byte_start":868349,"byte_end":868378,"line_start":157,"line_end":157,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":3804},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/traits.rs","byte_start":868488,"byte_end":868495,"line_start":161,"line_end":161,"column_start":8,"column_end":15},"name":"to_bgra","qualname":"::traits::Pixel::to_bgra","value":"fn (&self) -> Bgra<Self::Subpixel>","parent":{"krate":0,"index":3785},"children":[],"decl_id":null,"docs":" Convert this pixel to BGR with an alpha channel\n","sig":null,"attributes":[{"value":"/ Convert this pixel to BGR with an alpha channel","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/traits.rs","byte_start":868429,"byte_end":868480,"line_start":160,"line_end":160,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":3805},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/traits.rs","byte_start":868602,"byte_end":868605,"line_start":164,"line_end":164,"column_start":8,"column_end":11},"name":"map","qualname":"::traits::Pixel::map","value":"fn <F> (&self, f: F) -> Self","parent":{"krate":0,"index":3785},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel of this pixel.\n","sig":null,"attributes":[{"value":"/ Apply the function ```f``` to each channel of this pixel.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/traits.rs","byte_start":868533,"byte_end":868594,"line_start":163,"line_end":163,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":3807},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/traits.rs","byte_start":868766,"byte_end":868771,"line_start":169,"line_end":169,"column_start":8,"column_end":13},"name":"apply","qualname":"::traits::Pixel::apply","value":"fn <F> (&mut self, f: F) -> ()","parent":{"krate":0,"index":3785},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel of this pixel.\n","sig":null,"attributes":[{"value":"/ Apply the function ```f``` to each channel of this pixel.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/traits.rs","byte_start":868697,"byte_end":868758,"line_start":168,"line_end":168,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":3809},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/traits.rs","byte_start":868996,"byte_end":869010,"line_start":175,"line_end":175,"column_start":8,"column_end":22},"name":"map_with_alpha","qualname":"::traits::Pixel::map_with_alpha","value":"fn <F, G> (&self, f: F, g: G) -> Self","parent":{"krate":0,"index":3785},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel except the alpha channel.\n Apply the function ```g``` to the alpha channel.\n","sig":null,"attributes":[{"value":"/ Apply the function ```f``` to each channel except the alpha channel.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/traits.rs","byte_start":868859,"byte_end":868931,"line_start":173,"line_end":173,"column_start":5,"column_end":77}},{"value":"/ Apply the function ```g``` to the alpha channel.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/traits.rs","byte_start":868936,"byte_end":868988,"line_start":174,"line_end":174,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":3812},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/traits.rs","byte_start":869316,"byte_end":869332,"line_start":182,"line_end":182,"column_start":8,"column_end":24},"name":"apply_with_alpha","qualname":"::traits::Pixel::apply_with_alpha","value":"fn <F, G> (&mut self, f: F, g: G) -> ()","parent":{"krate":0,"index":3785},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel except the alpha channel.\n Apply the function ```g``` to the alpha channel. Works in-place.\n","sig":null,"attributes":[{"value":"/ Apply the function ```f``` to each channel except the alpha channel.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/traits.rs","byte_start":869163,"byte_end":869235,"line_start":180,"line_end":180,"column_start":5,"column_end":77}},{"value":"/ Apply the function ```g``` to the alpha channel. Works in-place.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/traits.rs","byte_start":869240,"byte_end":869308,"line_start":181,"line_end":181,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":3815},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/traits.rs","byte_start":869561,"byte_end":869578,"line_start":188,"line_end":188,"column_start":8,"column_end":25},"name":"map_without_alpha","qualname":"::traits::Pixel::map_without_alpha","value":"fn <F> (&self, f: F) -> Self","parent":{"krate":0,"index":3785},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel except the alpha channel.\n","sig":null,"attributes":[{"value":"/ Apply the function ```f``` to each channel except the alpha channel.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/traits.rs","byte_start":869481,"byte_end":869553,"line_start":187,"line_end":187,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":3818},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/traits.rs","byte_start":869870,"byte_end":869889,"line_start":199,"line_end":199,"column_start":8,"column_end":27},"name":"apply_without_alpha","qualname":"::traits::Pixel::apply_without_alpha","value":"fn <F> (&mut self, f: F) -> ()","parent":{"krate":0,"index":3785},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel except the alpha channel.\n Works in place.\n","sig":null,"attributes":[{"value":"/ Apply the function ```f``` to each channel except the alpha channel.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/traits.rs","byte_start":869766,"byte_end":869838,"line_start":197,"line_end":197,"column_start":5,"column_end":77}},{"value":"/ Works in place.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/traits.rs","byte_start":869843,"byte_end":869862,"line_start":198,"line_end":198,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":3821},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/traits.rs","byte_start":870132,"byte_end":870136,"line_start":208,"line_end":208,"column_start":8,"column_end":12},"name":"map2","qualname":"::traits::Pixel::map2","value":"fn <F> (&self, other: &Self, f: F) -> Self","parent":{"krate":0,"index":3785},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel of this pixel and\n ```other``` pairwise.\n","sig":null,"attributes":[{"value":"/ Apply the function ```f``` to each channel of this pixel and","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/traits.rs","byte_start":870030,"byte_end":870094,"line_start":206,"line_end":206,"column_start":5,"column_end":69}},{"value":"/ ```other``` pairwise.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/traits.rs","byte_start":870099,"byte_end":870124,"line_start":207,"line_end":207,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3823},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/traits.rs","byte_start":870376,"byte_end":870382,"line_start":214,"line_end":214,"column_start":8,"column_end":14},"name":"apply2","qualname":"::traits::Pixel::apply2","value":"fn <F> (&mut self, other: &Self, f: F) -> ()","parent":{"krate":0,"index":3785},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel of this pixel and\n ```other``` pairwise. Works in-place.\n","sig":null,"attributes":[{"value":"/ Apply the function ```f``` to each channel of this pixel and","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/traits.rs","byte_start":870258,"byte_end":870322,"line_start":212,"line_end":212,"column_start":5,"column_end":69}},{"value":"/ ```other``` pairwise. Works in-place.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/traits.rs","byte_start":870327,"byte_end":870368,"line_start":213,"line_end":213,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":3825},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/traits.rs","byte_start":870529,"byte_end":870535,"line_start":219,"line_end":219,"column_start":8,"column_end":14},"name":"invert","qualname":"::traits::Pixel::invert","value":"fn (&mut self) -> ()","parent":{"krate":0,"index":3785},"children":[],"decl_id":null,"docs":" Invert this pixel\n","sig":null,"attributes":[{"value":"/ Invert this pixel","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/traits.rs","byte_start":870500,"byte_end":870521,"line_start":218,"line_end":218,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":3826},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/traits.rs","byte_start":870646,"byte_end":870651,"line_start":222,"line_end":222,"column_start":8,"column_end":13},"name":"blend","qualname":"::traits::Pixel::blend","value":"fn (&mut self, other: &Self) -> ()","parent":{"krate":0,"index":3785},"children":[],"decl_id":null,"docs":" Blend the color of a given pixel into ourself, taking into account alpha channels\n","sig":null,"attributes":[{"value":"/ Blend the color of a given pixel into ourself, taking into account alpha channels","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/traits.rs","byte_start":870553,"byte_end":870638,"line_start":221,"line_end":221,"column_start":5,"column_end":90}}]},{"kind":"Trait","id":{"krate":0,"index":3828},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/traits.rs","byte_start":870760,"byte_end":870775,"line_start":227,"line_end":227,"column_start":15,"column_end":30},"name":"EncodableLayout","qualname":"::traits::seals::EncodableLayout","value":"EncodableLayout","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6091},"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/utils/mod.rs","byte_start":874785,"byte_end":874804,"line_start":108,"line_end":108,"column_start":12,"column_end":31},"name":"NonExhaustiveMarker","qualname":"::utils::NonExhaustiveMarker","value":"NonExhaustiveMarker {  }","parent":null,"children":[{"krate":0,"index":6092}],"decl_id":null,"docs":" A marker struct for __NonExhaustive enums.","sig":null,"attributes":[{"value":"/ A marker struct for __NonExhaustive enums.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/utils/mod.rs","byte_start":874062,"byte_end":874108,"line_start":97,"line_end":97,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/utils/mod.rs","byte_start":874109,"byte_end":874112,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ This is an empty type that can not be constructed. When an enum contains a tuple variant that","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/utils/mod.rs","byte_start":874113,"byte_end":874210,"line_start":99,"line_end":99,"column_start":1,"column_end":98}},{"value":"/ includes this type the optimizer can statically determined tha the branch is never taken while","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/utils/mod.rs","byte_start":874211,"byte_end":874309,"line_start":100,"line_end":100,"column_start":1,"column_end":99}},{"value":"/ at the same time the matching of the branch is required.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/utils/mod.rs","byte_start":874310,"byte_end":874370,"line_start":101,"line_end":101,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/utils/mod.rs","byte_start":874371,"byte_end":874374,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ The effect is thus very similar to the actual `#[non_exhaustive]` attribute with no runtime","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/utils/mod.rs","byte_start":874375,"byte_end":874470,"line_start":103,"line_end":103,"column_start":1,"column_end":96}},{"value":"/ costs. Also note that we use a dirty trick to not only hide this type from the doc but make it","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/utils/mod.rs","byte_start":874471,"byte_end":874569,"line_start":104,"line_end":104,"column_start":1,"column_end":99}},{"value":"/ inaccessible. The visibility in this module is pub but the module itself is not and the","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/utils/mod.rs","byte_start":874570,"byte_end":874661,"line_start":105,"line_end":105,"column_start":1,"column_end":92}},{"value":"/ top-level crate never exports the type.","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/utils/mod.rs","byte_start":874662,"byte_end":874705,"line_start":106,"line_end":106,"column_start":1,"column_end":44}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":17347,"byte_end":17363,"line_start":194,"line_end":194,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":66}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":18061,"byte_end":18074,"line_start":217,"line_end":217,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":68},{"krate":0,"index":70},{"krate":0,"index":71}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":18850,"byte_end":18863,"line_start":245,"line_end":245,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":73},{"krate":0,"index":75},{"krate":0,"index":76}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":19640,"byte_end":19654,"line_start":273,"line_end":273,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":78},{"krate":0,"index":79}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":20033,"byte_end":20043,"line_start":288,"line_end":288,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":81},{"krate":0,"index":82}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":20400,"byte_end":20410,"line_start":302,"line_end":302,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":84}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":20526,"byte_end":20541,"line_start":308,"line_end":308,"column_start":28,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":86}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":20670,"byte_end":20685,"line_start":314,"line_end":314,"column_start":36,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":88}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":20935,"byte_end":20951,"line_start":323,"line_end":323,"column_start":32,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":90}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":21254,"byte_end":21264,"line_start":335,"line_end":335,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":21725,"byte_end":21735,"line_start":348,"line_end":348,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":96}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":22188,"byte_end":22204,"line_start":361,"line_end":361,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":98}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":23826,"byte_end":23842,"line_start":404,"line_end":404,"column_start":16,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":23870,"byte_end":23884,"line_start":406,"line_end":406,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":101}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":24919,"byte_end":24933,"line_start":438,"line_end":438,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":103}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":25138,"byte_end":25151,"line_start":447,"line_end":447,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":105}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":25612,"byte_end":25625,"line_start":465,"line_end":465,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":107}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":25830,"byte_end":25843,"line_start":474,"line_end":474,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":109}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":26290,"byte_end":26303,"line_start":486,"line_end":486,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":111}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":26508,"byte_end":26518,"line_start":495,"line_end":495,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":113}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":26901,"byte_end":26911,"line_start":505,"line_end":505,"column_start":16,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":26939,"byte_end":26954,"line_start":507,"line_end":507,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":116}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/math/nq.rs","byte_start":32049,"byte_end":32057,"line_start":111,"line_end":111,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":165},{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":169}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/colorops.rs","byte_start":72519,"byte_end":72526,"line_start":231,"line_end":231,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":306},{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":310}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/colorops.rs","byte_start":73284,"byte_end":73292,"line_start":266,"line_end":266,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":312},{"krate":0,"index":313},{"krate":0,"index":314},{"krate":0,"index":316},{"krate":0,"index":317}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/sample.rs","byte_start":88483,"byte_end":88495,"line_start":363,"line_end":363,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":373},{"krate":0,"index":374},{"krate":0,"index":375}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":107381,"byte_end":107387,"line_start":68,"line_end":68,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":456},{"krate":0,"index":457},{"krate":0,"index":458},{"krate":0,"index":459},{"krate":0,"index":460},{"krate":0,"index":461}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":108769,"byte_end":108775,"line_start":115,"line_end":115,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":463},{"krate":0,"index":465}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":109561,"byte_end":109567,"line_start":137,"line_end":137,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":468},{"krate":0,"index":469},{"krate":0,"index":471},{"krate":0,"index":472},{"krate":0,"index":473}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/free_functions.rs","byte_start":124579,"byte_end":124589,"line_start":302,"line_end":302,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":531}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":129592,"byte_end":129604,"line_start":124,"line_end":124,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":561},{"krate":0,"index":562},{"krate":0,"index":563},{"krate":0,"index":564},{"krate":0,"index":565},{"krate":0,"index":566},{"krate":0,"index":568},{"krate":0,"index":570},{"krate":0,"index":573},{"krate":0,"index":574},{"krate":0,"index":575},{"krate":0,"index":576},{"krate":0,"index":577},{"krate":0,"index":581},{"krate":0,"index":582}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":142199,"byte_end":142202,"line_start":437,"line_end":437,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":584},{"krate":0,"index":585},{"krate":0,"index":586}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":142460,"byte_end":142471,"line_start":452,"line_end":452,"column_start":14,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":589},{"krate":0,"index":590},{"krate":0,"index":591},{"krate":0,"index":592},{"krate":0,"index":594},{"krate":0,"index":596},{"krate":0,"index":598},{"krate":0,"index":601},{"krate":0,"index":603},{"krate":0,"index":605},{"krate":0,"index":607},{"krate":0,"index":609},{"krate":0,"index":611},{"krate":0,"index":613},{"krate":0,"index":615},{"krate":0,"index":617},{"krate":0,"index":620},{"krate":0,"index":621},{"krate":0,"index":622},{"krate":0,"index":623},{"krate":0,"index":624},{"krate":0,"index":625},{"krate":0,"index":626},{"krate":0,"index":627},{"krate":0,"index":628}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":159626,"byte_end":159637,"line_start":873,"line_end":873,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":632}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":165504,"byte_end":165508,"line_start":1028,"line_end":1028,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":637},{"krate":0,"index":638},{"krate":0,"index":639},{"krate":0,"index":640},{"krate":0,"index":641},{"krate":0,"index":642},{"krate":0,"index":643},{"krate":0,"index":644},{"krate":0,"index":645},{"krate":0,"index":646}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":171093,"byte_end":171100,"line_start":1161,"line_end":1161,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":650},{"krate":0,"index":651},{"krate":0,"index":652},{"krate":0,"index":653},{"krate":0,"index":654},{"krate":0,"index":655},{"krate":0,"index":656},{"krate":0,"index":657},{"krate":0,"index":658}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":175476,"byte_end":175487,"line_start":1275,"line_end":1275,"column_start":40,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":663},{"krate":0,"index":664}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":176096,"byte_end":176107,"line_start":1294,"line_end":1294,"column_start":43,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":668}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":176711,"byte_end":176715,"line_start":1312,"line_end":1312,"column_start":45,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":673},{"krate":0,"index":674},{"krate":0,"index":675},{"krate":0,"index":676},{"krate":0,"index":677},{"krate":0,"index":678},{"krate":0,"index":681}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":177962,"byte_end":177969,"line_start":1357,"line_end":1357,"column_start":45,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":685},{"krate":0,"index":686},{"krate":0,"index":687},{"krate":0,"index":688},{"krate":0,"index":689},{"krate":0,"index":690},{"krate":0,"index":693}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":179236,"byte_end":179243,"line_start":1402,"line_end":1402,"column_start":41,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":697},{"krate":0,"index":698},{"krate":0,"index":699},{"krate":0,"index":700},{"krate":0,"index":701}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":180138,"byte_end":180148,"line_start":1431,"line_end":1431,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":703}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":180300,"byte_end":180323,"line_start":1435,"line_end":1435,"column_start":31,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":705}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":180531,"byte_end":180554,"line_start":1440,"line_end":1440,"column_start":31,"column_end":54},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":181126,"byte_end":181136,"line_start":1454,"line_end":1454,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":708}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/bmp/decoder.rs","byte_start":189939,"byte_end":189950,"line_start":100,"line_end":100,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":783},{"krate":0,"index":784}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/bmp/decoder.rs","byte_start":191873,"byte_end":191885,"line_start":158,"line_end":158,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":786}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/bmp/decoder.rs","byte_start":193956,"byte_end":193966,"line_start":195,"line_end":195,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":788}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/bmp/decoder.rs","byte_start":194122,"byte_end":194134,"line_start":201,"line_end":201,"column_start":23,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/bmp/decoder.rs","byte_start":194481,"byte_end":194498,"line_start":216,"line_end":216,"column_start":23,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":791}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/bmp/decoder.rs","byte_start":203155,"byte_end":203163,"line_start":479,"line_end":479,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":814},{"krate":0,"index":815}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/bmp/decoder.rs","byte_start":204549,"byte_end":204558,"line_start":523,"line_end":523,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":817}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/bmp/decoder.rs","byte_start":205823,"byte_end":205838,"line_start":578,"line_end":578,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":859},{"krate":0,"index":860}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/bmp/decoder.rs","byte_start":207694,"byte_end":207704,"line_start":630,"line_end":630,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":863},{"krate":0,"index":864},{"krate":0,"index":865},{"krate":0,"index":866},{"krate":0,"index":868},{"krate":0,"index":869},{"krate":0,"index":870},{"krate":0,"index":871},{"krate":0,"index":872},{"krate":0,"index":873},{"krate":0,"index":874},{"krate":0,"index":875},{"krate":0,"index":878},{"krate":0,"index":879},{"krate":0,"index":880},{"krate":0,"index":882},{"krate":0,"index":884},{"krate":0,"index":887},{"krate":0,"index":889},{"krate":0,"index":892},{"krate":0,"index":894},{"krate":0,"index":895}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/bmp/decoder.rs","byte_start":239608,"byte_end":239617,"line_start":1420,"line_end":1420,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":903},{"krate":0,"index":904}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/bmp/decoder.rs","byte_start":240037,"byte_end":240047,"line_start":1434,"line_end":1434,"column_start":52,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":908},{"krate":0,"index":909},{"krate":0,"index":910},{"krate":0,"index":911},{"krate":0,"index":912}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/bmp/decoder.rs","byte_start":240722,"byte_end":240732,"line_start":1459,"line_end":1459,"column_start":55,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":916}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/bmp/encoder.rs","byte_start":242253,"byte_end":242263,"line_start":17,"line_end":17,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":944},{"krate":0,"index":945},{"krate":0,"index":949},{"krate":0,"index":950},{"krate":0,"index":951},{"krate":0,"index":952}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/bmp/encoder.rs","byte_start":249383,"byte_end":249393,"line_start":214,"line_end":214,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":956}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dds.rs","byte_start":254577,"byte_end":254589,"line_start":34,"line_end":34,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":983}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dds.rs","byte_start":255229,"byte_end":255239,"line_start":49,"line_end":49,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":985}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dds.rs","byte_start":255395,"byte_end":255407,"line_start":55,"line_end":55,"column_start":23,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dds.rs","byte_start":255876,"byte_end":255887,"line_start":83,"line_end":83,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":988}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dds.rs","byte_start":256611,"byte_end":256617,"line_start":106,"line_end":106,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":991}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dds.rs","byte_start":258293,"byte_end":258303,"line_start":159,"line_end":159,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1001}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dds.rs","byte_start":259795,"byte_end":259805,"line_start":198,"line_end":198,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1006},{"krate":0,"index":1007},{"krate":0,"index":1008},{"krate":0,"index":1009},{"krate":0,"index":1010},{"krate":0,"index":1011}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dxt.rs","byte_start":261606,"byte_end":261616,"line_start":33,"line_end":33,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1033},{"krate":0,"index":1034},{"krate":0,"index":1035}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dxt.rs","byte_start":262573,"byte_end":262583,"line_start":69,"line_end":69,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1045},{"krate":0,"index":1046}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dxt.rs","byte_start":264609,"byte_end":264619,"line_start":120,"line_end":120,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1050},{"krate":0,"index":1051},{"krate":0,"index":1052},{"krate":0,"index":1053},{"krate":0,"index":1054},{"krate":0,"index":1055}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dxt.rs","byte_start":265516,"byte_end":265526,"line_start":152,"line_end":152,"column_start":55,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":1059}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dxt.rs","byte_start":266500,"byte_end":266509,"line_start":182,"line_end":182,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1070}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dxt.rs","byte_start":266769,"byte_end":266779,"line_start":194,"line_end":194,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1077},{"krate":0,"index":1078}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/gif.rs","byte_start":290714,"byte_end":290724,"line_start":51,"line_end":51,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1170}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/gif.rs","byte_start":291176,"byte_end":291185,"line_start":65,"line_end":65,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1178},{"krate":0,"index":1179}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/gif.rs","byte_start":291598,"byte_end":291608,"line_start":79,"line_end":79,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1183},{"krate":0,"index":1184},{"krate":0,"index":1185},{"krate":0,"index":1186},{"krate":0,"index":1187}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/gif.rs","byte_start":294555,"byte_end":294571,"line_start":156,"line_end":156,"column_start":15,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1198}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/gif.rs","byte_start":295183,"byte_end":295199,"line_start":178,"line_end":178,"column_start":28,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1201},{"krate":0,"index":1202}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/gif.rs","byte_start":299905,"byte_end":299915,"line_start":286,"line_end":286,"column_start":49,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1208}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/gif.rs","byte_start":300178,"byte_end":300185,"line_start":298,"line_end":298,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1215},{"krate":0,"index":1216},{"krate":0,"index":1217},{"krate":0,"index":1218},{"krate":0,"index":1220},{"krate":0,"index":1222},{"krate":0,"index":1223},{"krate":0,"index":1225}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Inherent","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/gif.rs","byte_start":304264,"byte_end":304274,"line_start":409,"line_end":409,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1228}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":306563,"byte_end":306575,"line_start":49,"line_end":49,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1271}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":308225,"byte_end":308235,"line_start":78,"line_end":78,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1273}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":308391,"byte_end":308403,"line_start":84,"line_end":84,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1275}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":308905,"byte_end":308913,"line_start":104,"line_end":104,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1277}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":309507,"byte_end":309517,"line_start":124,"line_end":124,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1280},{"krate":0,"index":1281},{"krate":0,"index":1282}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":310888,"byte_end":310897,"line_start":166,"line_end":166,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1290},{"krate":0,"index":1291}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":311313,"byte_end":311323,"line_start":180,"line_end":180,"column_start":48,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1295},{"krate":0,"index":1296},{"krate":0,"index":1297},{"krate":0,"index":1298},{"krate":0,"index":1299}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":311831,"byte_end":311841,"line_start":200,"line_end":200,"column_start":58,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":1303}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Inherent","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":312877,"byte_end":312887,"line_start":243,"line_end":243,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1311},{"krate":0,"index":1312},{"krate":0,"index":1314}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Inherent","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":315193,"byte_end":315203,"line_start":308,"line_end":308,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1320},{"krate":0,"index":1321},{"krate":0,"index":1323},{"krate":0,"index":1324},{"krate":0,"index":1325},{"krate":0,"index":1330},{"krate":0,"index":1332}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":320883,"byte_end":320893,"line_start":461,"line_end":461,"column_start":35,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1336},{"krate":0,"index":1337},{"krate":0,"index":1338}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Inherent","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":321793,"byte_end":321816,"line_start":489,"line_end":489,"column_start":18,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1350}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":322109,"byte_end":322132,"line_start":502,"line_end":502,"column_start":31,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1353},{"krate":0,"index":1354},{"krate":0,"index":1355}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":323940,"byte_end":323963,"line_start":553,"line_end":553,"column_start":40,"column_end":63},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Inherent","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":330414,"byte_end":330425,"line_start":729,"line_end":729,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1377},{"krate":0,"index":1378}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Inherent","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/encoder.rs","byte_start":340358,"byte_end":340368,"line_start":12,"line_end":12,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1417},{"krate":0,"index":1418}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Inherent","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/encoder.rs","byte_start":342930,"byte_end":342941,"line_start":89,"line_end":89,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1430}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/encoder.rs","byte_start":343067,"byte_end":343078,"line_start":95,"line_end":95,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1433},{"krate":0,"index":1434}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Inherent","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/encoder.rs","byte_start":343779,"byte_end":343799,"line_start":124,"line_end":124,"column_start":10,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1442}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/encoder.rs","byte_start":344058,"byte_end":344078,"line_start":134,"line_end":134,"column_start":23,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1445},{"krate":0,"index":1446}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/ico/decoder.rs","byte_start":357764,"byte_end":357776,"line_start":48,"line_end":48,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1490}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/ico/decoder.rs","byte_start":358903,"byte_end":358913,"line_start":69,"line_end":69,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1492}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/ico/decoder.rs","byte_start":359069,"byte_end":359081,"line_start":75,"line_end":75,"column_start":23,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/ico/decoder.rs","byte_start":359322,"byte_end":359341,"line_start":86,"line_end":86,"column_start":23,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1495}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/ico/decoder.rs","byte_start":359581,"byte_end":359600,"line_start":95,"line_end":95,"column_start":28,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1497}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Inherent","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/ico/decoder.rs","byte_start":360239,"byte_end":360249,"line_start":129,"line_end":129,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1512}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Inherent","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/ico/decoder.rs","byte_start":362546,"byte_end":362554,"line_start":201,"line_end":201,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1521},{"krate":0,"index":1522},{"krate":0,"index":1523},{"krate":0,"index":1524},{"krate":0,"index":1526},{"krate":0,"index":1529}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/ico/decoder.rs","byte_start":363867,"byte_end":363876,"line_start":249,"line_end":249,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1538},{"krate":0,"index":1539}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/ico/decoder.rs","byte_start":364296,"byte_end":364306,"line_start":263,"line_end":263,"column_start":52,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1543},{"krate":0,"index":1544},{"krate":0,"index":1545},{"krate":0,"index":1546},{"krate":0,"index":1547}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Inherent","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/ico/encoder.rs","byte_start":369429,"byte_end":369439,"line_start":22,"line_end":22,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1567},{"krate":0,"index":1568}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/ico/encoder.rs","byte_start":370433,"byte_end":370443,"line_start":55,"line_end":55,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1571}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Inherent","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/jpeg/decoder.rs","byte_start":373146,"byte_end":373157,"line_start":18,"line_end":18,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1608}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/jpeg/decoder.rs","byte_start":373866,"byte_end":373876,"line_start":40,"line_end":40,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1616},{"krate":0,"index":1617}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/jpeg/decoder.rs","byte_start":374289,"byte_end":374300,"line_start":54,"line_end":54,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1621},{"krate":0,"index":1622},{"krate":0,"index":1623},{"krate":0,"index":1624},{"krate":0,"index":1625}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Inherent","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/jpeg/decoder.rs","byte_start":376046,"byte_end":376055,"line_start":114,"line_end":114,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1628}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Inherent","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/jpeg/decoder.rs","byte_start":376313,"byte_end":376323,"line_start":125,"line_end":125,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1631}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Inherent","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/jpeg/encoder.rs","byte_start":402595,"byte_end":402604,"line_start":170,"line_end":170,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1705},{"krate":0,"index":1706},{"krate":0,"index":1707},{"krate":0,"index":1708},{"krate":0,"index":1709},{"krate":0,"index":1710}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Inherent","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/jpeg/encoder.rs","byte_start":406113,"byte_end":406125,"line_start":306,"line_end":306,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1712}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/jpeg/encoder.rs","byte_start":406463,"byte_end":406475,"line_start":318,"line_end":318,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1714}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Inherent","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/jpeg/encoder.rs","byte_start":407051,"byte_end":407062,"line_start":343,"line_end":343,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1729},{"krate":0,"index":1730},{"krate":0,"index":1732},{"krate":0,"index":1733},{"krate":0,"index":1734},{"krate":0,"index":1738},{"krate":0,"index":1742}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/jpeg/encoder.rs","byte_start":418468,"byte_end":418479,"line_start":671,"line_end":671,"column_start":37,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1753}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Inherent","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","byte_start":438800,"byte_end":438809,"line_start":34,"line_end":34,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1844}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","byte_start":439567,"byte_end":439576,"line_start":58,"line_end":58,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1847},{"krate":0,"index":1848}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Inherent","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","byte_start":440831,"byte_end":440841,"line_start":104,"line_end":104,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1855},{"krate":0,"index":1856},{"krate":0,"index":1857}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","byte_start":445455,"byte_end":445465,"line_start":193,"line_end":193,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1862},{"krate":0,"index":1863},{"krate":0,"index":1864},{"krate":0,"index":1865},{"krate":0,"index":1866},{"krate":0,"index":1872}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Inherent","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","byte_start":447526,"byte_end":447537,"line_start":256,"line_end":256,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1883},{"krate":0,"index":1884},{"krate":0,"index":1886}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","byte_start":453092,"byte_end":453103,"line_start":396,"line_end":396,"column_start":49,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1890}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","byte_start":453241,"byte_end":453254,"line_start":400,"line_end":400,"column_start":36,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1897},{"krate":0,"index":1898}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Inherent","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","byte_start":455633,"byte_end":455643,"line_start":475,"line_end":475,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1906},{"krate":0,"index":1907},{"krate":0,"index":1908}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","byte_start":459478,"byte_end":459488,"line_start":550,"line_end":550,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1913}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Inherent","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","byte_start":460723,"byte_end":460733,"line_start":582,"line_end":582,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1920}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","byte_start":461750,"byte_end":461765,"line_start":610,"line_end":610,"column_start":18,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1923}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","byte_start":461851,"byte_end":461861,"line_start":616,"line_end":616,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1925}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Inherent","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/autobreak.rs","byte_start":469605,"byte_end":469614,"line_start":15,"line_end":15,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1952},{"krate":0,"index":1953}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/autobreak.rs","byte_start":470875,"byte_end":470884,"line_start":58,"line_end":58,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1956},{"krate":0,"index":1957}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/autobreak.rs","byte_start":471510,"byte_end":471519,"line_start":82,"line_end":82,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1960}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/decoder.rs","byte_start":475369,"byte_end":475381,"line_start":80,"line_end":80,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2009}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/decoder.rs","byte_start":478210,"byte_end":478220,"line_start":128,"line_end":128,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2011}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/decoder.rs","byte_start":478376,"byte_end":478388,"line_start":134,"line_end":134,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2013}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/decoder.rs","byte_start":478864,"byte_end":478877,"line_start":156,"line_end":156,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2015}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/decoder.rs","byte_start":479469,"byte_end":479484,"line_start":178,"line_end":178,"column_start":18,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2017}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Inherent","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/decoder.rs","byte_start":480636,"byte_end":480646,"line_start":226,"line_end":226,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2039},{"krate":0,"index":2040},{"krate":0,"index":2041},{"krate":0,"index":2042},{"krate":0,"index":2043},{"krate":0,"index":2044}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/decoder.rs","byte_start":491322,"byte_end":491331,"line_start":511,"line_end":511,"column_start":32,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/decoder.rs","byte_start":491460,"byte_end":491469,"line_start":515,"line_end":515,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2074},{"krate":0,"index":2075}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/decoder.rs","byte_start":491882,"byte_end":491892,"line_start":529,"line_end":529,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":2079},{"krate":0,"index":2080},{"krate":0,"index":2081},{"krate":0,"index":2082},{"krate":0,"index":2083},{"krate":0,"index":2084}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Inherent","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/decoder.rs","byte_start":493599,"byte_end":493609,"line_start":576,"line_end":576,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2087},{"krate":0,"index":2089},{"krate":0,"index":2091}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/decoder.rs","byte_start":496036,"byte_end":496038,"line_start":642,"line_end":642,"column_start":17,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2101},{"krate":0,"index":2102},{"krate":0,"index":2103}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/decoder.rs","byte_start":496703,"byte_end":496706,"line_start":669,"line_end":669,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2106},{"krate":0,"index":2107},{"krate":0,"index":2108}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/decoder.rs","byte_start":497978,"byte_end":497984,"line_start":708,"line_end":708,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2110},{"krate":0,"index":2111},{"krate":0,"index":2112}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/decoder.rs","byte_start":499606,"byte_end":499611,"line_start":762,"line_end":762,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2115},{"krate":0,"index":2116},{"krate":0,"index":2118}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/decoder.rs","byte_start":500461,"byte_end":500473,"line_start":792,"line_end":792,"column_start":31,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2120}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/decoder.rs","byte_start":500598,"byte_end":500611,"line_start":798,"line_end":798,"column_start":31,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2122}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/decoder.rs","byte_start":500927,"byte_end":500939,"line_start":808,"line_end":808,"column_start":31,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2124}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/decoder.rs","byte_start":501249,"byte_end":501264,"line_start":818,"line_end":818,"column_start":31,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2126}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Inherent","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/encoder.rs","byte_start":518662,"byte_end":518672,"line_start":81,"line_end":81,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2206},{"krate":0,"index":2207},{"krate":0,"index":2208},{"krate":0,"index":2209},{"krate":0,"index":2210},{"krate":0,"index":2213},{"krate":0,"index":2214},{"krate":0,"index":2215}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/encoder.rs","byte_start":526449,"byte_end":526459,"line_start":284,"line_end":284,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2218}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Inherent","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/encoder.rs","byte_start":526692,"byte_end":526710,"line_start":296,"line_end":296,"column_start":10,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2221}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Inherent","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/encoder.rs","byte_start":527580,"byte_end":527595,"line_start":324,"line_end":324,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2225}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Inherent","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/encoder.rs","byte_start":528156,"byte_end":528173,"line_start":345,"line_end":345,"column_start":10,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2228}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Inherent","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/encoder.rs","byte_start":532193,"byte_end":532211,"line_start":439,"line_end":439,"column_start":10,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2231}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Inherent","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/encoder.rs","byte_start":534776,"byte_end":534789,"line_start":506,"line_end":506,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2234},{"krate":0,"index":2235}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Inherent","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/encoder.rs","byte_start":535100,"byte_end":535112,"line_start":519,"line_end":519,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2242},{"krate":0,"index":2244}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Inherent","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/encoder.rs","byte_start":536529,"byte_end":536540,"line_start":564,"line_end":564,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2248},{"krate":0,"index":2249},{"krate":0,"index":2252}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/encoder.rs","byte_start":538251,"byte_end":538262,"line_start":618,"line_end":618,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2255}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/encoder.rs","byte_start":538381,"byte_end":538392,"line_start":624,"line_end":624,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2258}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Inherent","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/encoder.rs","byte_start":538493,"byte_end":538506,"line_start":630,"line_end":630,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2261}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Inherent","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/header.rs","byte_start":543431,"byte_end":543448,"line_start":136,"line_end":136,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2284}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Inherent","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/header.rs","byte_start":543960,"byte_end":543970,"line_start":150,"line_end":150,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2286},{"krate":0,"index":2288}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Inherent","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/header.rs","byte_start":544940,"byte_end":544949,"line_start":175,"line_end":175,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2290},{"krate":0,"index":2291},{"krate":0,"index":2292},{"krate":0,"index":2293},{"krate":0,"index":2294},{"krate":0,"index":2295},{"krate":0,"index":2296},{"krate":0,"index":2297},{"krate":0,"index":2298}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/header.rs","byte_start":549623,"byte_end":549637,"line_start":297,"line_end":297,"column_start":43,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2305}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/header.rs","byte_start":550236,"byte_end":550245,"line_start":316,"line_end":316,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2307}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/header.rs","byte_start":550438,"byte_end":550447,"line_start":325,"line_end":325,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2309}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/header.rs","byte_start":550641,"byte_end":550650,"line_start":334,"line_end":334,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2311}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/header.rs","byte_start":550845,"byte_end":550854,"line_start":343,"line_end":343,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2313}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Inherent","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/tga/decoder.rs","byte_start":551873,"byte_end":551881,"line_start":20,"line_end":20,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2348},{"krate":0,"index":2349}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Inherent","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/tga/decoder.rs","byte_start":552998,"byte_end":553008,"line_start":66,"line_end":66,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2365},{"krate":0,"index":2366},{"krate":0,"index":2367},{"krate":0,"index":2368},{"krate":0,"index":2369},{"krate":0,"index":2370},{"krate":0,"index":2371},{"krate":0,"index":2373},{"krate":0,"index":2374},{"krate":0,"index":2375},{"krate":0,"index":2376},{"krate":0,"index":2377},{"krate":0,"index":2378},{"krate":0,"index":2379}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/tga/decoder.rs","byte_start":563968,"byte_end":563978,"line_start":368,"line_end":368,"column_start":52,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":2383},{"krate":0,"index":2384},{"krate":0,"index":2385},{"krate":0,"index":2386},{"krate":0,"index":2387},{"krate":0,"index":2388}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/tga/decoder.rs","byte_start":565677,"byte_end":565686,"line_start":424,"line_end":424,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2395}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/tga/encoder.rs","byte_start":566331,"byte_end":566343,"line_start":15,"line_end":15,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2412}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/tga/encoder.rs","byte_start":566710,"byte_end":566720,"line_start":26,"line_end":26,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2414}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/tga/encoder.rs","byte_start":566876,"byte_end":566888,"line_start":32,"line_end":32,"column_start":23,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Inherent","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/tga/encoder.rs","byte_start":566977,"byte_end":566987,"line_start":39,"line_end":39,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2421},{"krate":0,"index":2422}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/tga/encoder.rs","byte_start":568436,"byte_end":568446,"line_start":85,"line_end":85,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2427}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Inherent","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/tga/header.rs","byte_start":573818,"byte_end":573827,"line_start":24,"line_end":24,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2471},{"krate":0,"index":2472},{"krate":0,"index":2473},{"krate":0,"index":2474}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Inherent","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/tga/header.rs","byte_start":575873,"byte_end":575879,"line_start":87,"line_end":87,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2476},{"krate":0,"index":2477},{"krate":0,"index":2478}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Inherent","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/tiff.rs","byte_start":579627,"byte_end":579638,"line_start":33,"line_end":33,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2516}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Inherent","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/tiff.rs","byte_start":581307,"byte_end":581317,"line_start":75,"line_end":75,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2519},{"krate":0,"index":2520}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/tiff.rs","byte_start":583072,"byte_end":583082,"line_start":115,"line_end":115,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2528},{"krate":0,"index":2529}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/tiff.rs","byte_start":583502,"byte_end":583513,"line_start":129,"line_end":129,"column_start":52,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":2533},{"krate":0,"index":2534},{"krate":0,"index":2535},{"krate":0,"index":2536},{"krate":0,"index":2537}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Inherent","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/tiff.rs","byte_start":585749,"byte_end":585760,"line_start":198,"line_end":198,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2545},{"krate":0,"index":2546}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/tiff.rs","byte_start":587435,"byte_end":587446,"line_start":232,"line_end":232,"column_start":40,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2549}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/webp/decoder.rs","byte_start":588510,"byte_end":588522,"line_start":25,"line_end":25,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2580}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/webp/decoder.rs","byte_start":588659,"byte_end":588674,"line_start":28,"line_end":28,"column_start":31,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2586}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/webp/decoder.rs","byte_start":589261,"byte_end":589271,"line_start":43,"line_end":43,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2588}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/webp/decoder.rs","byte_start":589428,"byte_end":589440,"line_start":49,"line_end":49,"column_start":23,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Inherent","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/webp/decoder.rs","byte_start":589666,"byte_end":589677,"line_start":59,"line_end":59,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2597},{"krate":0,"index":2598},{"krate":0,"index":2601},{"krate":0,"index":2604},{"krate":0,"index":2605}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/webp/decoder.rs","byte_start":592550,"byte_end":592560,"line_start":150,"line_end":150,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2613},{"krate":0,"index":2614}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/webp/decoder.rs","byte_start":592973,"byte_end":592984,"line_start":164,"line_end":164,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2618},{"krate":0,"index":2619},{"krate":0,"index":2620},{"krate":0,"index":2621},{"krate":0,"index":2622}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/webp/vp8.rs","byte_start":622572,"byte_end":622584,"line_start":687,"line_end":687,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2713}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/webp/vp8.rs","byte_start":623603,"byte_end":623613,"line_start":708,"line_end":708,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2715}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/webp/vp8.rs","byte_start":623770,"byte_end":623782,"line_start":714,"line_end":714,"column_start":23,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Inherent","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/webp/vp8.rs","byte_start":623903,"byte_end":623913,"line_start":725,"line_end":725,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2724},{"krate":0,"index":2725},{"krate":0,"index":2726},{"krate":0,"index":2727},{"krate":0,"index":2728},{"krate":0,"index":2729},{"krate":0,"index":2730}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Inherent","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/webp/vp8.rs","byte_start":628246,"byte_end":628256,"line_start":920,"line_end":920,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2756},{"krate":0,"index":2759},{"krate":0,"index":2760},{"krate":0,"index":2761},{"krate":0,"index":2764},{"krate":0,"index":2765},{"krate":0,"index":2766},{"krate":0,"index":2768},{"krate":0,"index":2772},{"krate":0,"index":2774},{"krate":0,"index":2775},{"krate":0,"index":2779}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Inherent","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/webp/vp8.rs","byte_start":649595,"byte_end":649603,"line_start":1578,"line_end":1578,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2782},{"krate":0,"index":2783}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/webp/vp8.rs","byte_start":650220,"byte_end":650228,"line_start":1601,"line_end":1601,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2785}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Inherent","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/webp/vp8.rs","byte_start":650293,"byte_end":650303,"line_start":1607,"line_end":1607,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2787}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/webp/vp8.rs","byte_start":650592,"byte_end":650602,"line_start":1619,"line_end":1619,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2789}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Inherent","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/webp/vp8.rs","byte_start":650669,"byte_end":650678,"line_start":1625,"line_end":1625,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2791}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/webp/vp8.rs","byte_start":651215,"byte_end":651224,"line_start":1643,"line_end":1643,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2793}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Inherent","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/farbfeld.rs","byte_start":674751,"byte_end":674765,"line_start":39,"line_end":39,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2861}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/farbfeld.rs","byte_start":675932,"byte_end":675946,"line_start":76,"line_end":76,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2870}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/farbfeld.rs","byte_start":676725,"byte_end":676739,"line_start":102,"line_end":102,"column_start":31,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2873}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Inherent","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/farbfeld.rs","byte_start":679345,"byte_end":679360,"line_start":167,"line_end":167,"column_start":15,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2887}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/farbfeld.rs","byte_start":679608,"byte_end":679623,"line_start":174,"line_end":174,"column_start":45,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2891},{"krate":0,"index":2892},{"krate":0,"index":2893},{"krate":0,"index":2894},{"krate":0,"index":2895}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/farbfeld.rs","byte_start":680034,"byte_end":680049,"line_start":194,"line_end":194,"column_start":55,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":2899}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Inherent","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/farbfeld.rs","byte_start":680857,"byte_end":680872,"line_start":220,"line_end":220,"column_start":16,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2909},{"krate":0,"index":2910},{"krate":0,"index":2911}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/farbfeld.rs","byte_start":681860,"byte_end":681875,"line_start":252,"line_end":252,"column_start":33,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2915}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Inherent","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/animation.rs","byte_start":685715,"byte_end":685721,"line_start":14,"line_end":14,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2927},{"krate":0,"index":2928}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/animation.rs","byte_start":686311,"byte_end":686317,"line_start":30,"line_end":30,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2931},{"krate":0,"index":2932}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Inherent","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/animation.rs","byte_start":686836,"byte_end":686841,"line_start":55,"line_end":55,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":2934},{"krate":0,"index":2935},{"krate":0,"index":2936},{"krate":0,"index":2937},{"krate":0,"index":2938},{"krate":0,"index":2939},{"krate":0,"index":2940}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Inherent","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/animation.rs","byte_start":687790,"byte_end":687795,"line_start":102,"line_end":102,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":2942},{"krate":0,"index":2943},{"krate":0,"index":2945},{"krate":0,"index":2946},{"krate":0,"index":2947},{"krate":0,"index":2948}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/animation.rs","byte_start":693831,"byte_end":693839,"line_start":258,"line_end":258,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2955}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":697288,"byte_end":697294,"line_start":26,"line_end":26,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2996},{"krate":0,"index":2997}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":697538,"byte_end":697544,"line_start":38,"line_end":38,"column_start":47,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3002}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":697693,"byte_end":697699,"line_start":47,"line_end":47,"column_start":49,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":3006}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":698069,"byte_end":698078,"line_start":65,"line_end":65,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3015},{"krate":0,"index":3016}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":698334,"byte_end":698343,"line_start":77,"line_end":77,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3021}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":698492,"byte_end":698501,"line_start":86,"line_end":86,"column_start":49,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":3025}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Inherent","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":699070,"byte_end":699074,"line_start":111,"line_end":111,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3030}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":699961,"byte_end":699965,"line_start":132,"line_end":132,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3034},{"krate":0,"index":3035}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":700369,"byte_end":700373,"line_start":148,"line_end":148,"column_start":47,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":3039}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":700522,"byte_end":700526,"line_start":157,"line_end":157,"column_start":49,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3043}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Inherent","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":701222,"byte_end":701229,"line_start":183,"line_end":183,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3051}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":702138,"byte_end":702145,"line_start":204,"line_end":204,"column_start":38,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3055},{"krate":0,"index":3056}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":702562,"byte_end":702569,"line_start":220,"line_end":220,"column_start":47,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":3060}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":702718,"byte_end":702725,"line_start":229,"line_end":229,"column_start":49,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3064}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":703319,"byte_end":703334,"line_start":255,"line_end":255,"column_start":38,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3068},{"krate":0,"index":3069}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":703737,"byte_end":703752,"line_start":273,"line_end":273,"column_start":47,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":3074}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":704081,"byte_end":704094,"line_start":293,"line_end":293,"column_start":38,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":3078},{"krate":0,"index":3079}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":704632,"byte_end":704645,"line_start":317,"line_end":317,"column_start":47,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":3084}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":704981,"byte_end":704999,"line_start":337,"line_end":337,"column_start":38,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3095},{"krate":0,"index":3096}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":705410,"byte_end":705428,"line_start":355,"line_end":355,"column_start":47,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":3101}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":705746,"byte_end":705762,"line_start":374,"line_end":374,"column_start":38,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":3111},{"krate":0,"index":3112}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":706309,"byte_end":706325,"line_start":398,"line_end":398,"column_start":47,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":3117}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Inherent","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":709152,"byte_end":709163,"line_start":487,"line_end":487,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3121},{"krate":0,"index":3122},{"krate":0,"index":3123},{"krate":0,"index":3124},{"krate":0,"index":3125},{"krate":0,"index":3126},{"krate":0,"index":3127},{"krate":0,"index":3128},{"krate":0,"index":3129},{"krate":0,"index":3130},{"krate":0,"index":3131},{"krate":0,"index":3132},{"krate":0,"index":3134},{"krate":0,"index":3137},{"krate":0,"index":3138},{"krate":0,"index":3139},{"krate":0,"index":3140},{"krate":0,"index":3141},{"krate":0,"index":3142}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Inherent","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":715703,"byte_end":715714,"line_start":674,"line_end":674,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3146},{"krate":0,"index":3147},{"krate":0,"index":3148},{"krate":0,"index":3149},{"krate":0,"index":3150},{"krate":0,"index":3151},{"krate":0,"index":3152}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Inherent","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":718306,"byte_end":718317,"line_start":749,"line_end":749,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3156}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Inherent","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":718969,"byte_end":718980,"line_start":774,"line_end":774,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3161}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":719723,"byte_end":719734,"line_start":801,"line_end":801,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3166},{"krate":0,"index":3167}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":719998,"byte_end":720009,"line_start":814,"line_end":814,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3171}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":720275,"byte_end":720286,"line_start":825,"line_end":825,"column_start":42,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3175},{"krate":0,"index":3176}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":720557,"byte_end":720568,"line_start":838,"line_end":838,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3180}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":720829,"byte_end":720840,"line_start":849,"line_end":849,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3184}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":721199,"byte_end":721210,"line_start":864,"line_end":864,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":3188},{"krate":0,"index":3189},{"krate":0,"index":3190},{"krate":0,"index":3191},{"krate":0,"index":3192},{"krate":0,"index":3193},{"krate":0,"index":3194}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":722034,"byte_end":722045,"line_start":897,"line_end":897,"column_start":37,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3198},{"krate":0,"index":3199},{"krate":0,"index":3200},{"krate":0,"index":3201},{"krate":0,"index":3202},{"krate":0,"index":3203},{"krate":0,"index":3204}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Inherent","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":725630,"byte_end":725641,"line_start":989,"line_end":989,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3209},{"krate":0,"index":3210},{"krate":0,"index":3211},{"krate":0,"index":3213},{"krate":0,"index":3214}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Inherent","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":728075,"byte_end":728084,"line_start":1067,"line_end":1067,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3219}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":729482,"byte_end":729493,"line_start":1105,"line_end":1105,"column_start":67,"column_end":78},"value":"","parent":null,"children":[{"krate":0,"index":3227}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Inherent","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":739538,"byte_end":739547,"line_start":37,"line_end":37,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3250},{"krate":0,"index":3251},{"krate":0,"index":3253},{"krate":0,"index":3255},{"krate":0,"index":3256}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Inherent","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":743256,"byte_end":743273,"line_start":148,"line_end":148,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3258}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":744561,"byte_end":744578,"line_start":182,"line_end":182,"column_start":26,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3260}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":750674,"byte_end":750675,"line_start":388,"line_end":388,"column_start":32,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3267}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":751113,"byte_end":751114,"line_start":402,"line_end":402,"column_start":29,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3274}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":752370,"byte_end":752374,"line_start":446,"line_end":446,"column_start":53,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":3285}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":752603,"byte_end":752607,"line_start":454,"line_end":454,"column_start":53,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":3288}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":752835,"byte_end":752839,"line_start":462,"line_end":462,"column_start":52,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3291}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":753064,"byte_end":753068,"line_start":470,"line_end":470,"column_start":52,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3294}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":753295,"byte_end":753299,"line_start":478,"line_end":478,"column_start":54,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":3297}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":753447,"byte_end":753451,"line_start":485,"line_end":485,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3299}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":753695,"byte_end":753699,"line_start":494,"line_end":494,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3301}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":753943,"byte_end":753947,"line_start":503,"line_end":503,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3303}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":754133,"byte_end":754137,"line_start":510,"line_end":510,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3305}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":754323,"byte_end":754327,"line_start":517,"line_end":517,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3307}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":754564,"byte_end":754569,"line_start":527,"line_end":527,"column_start":53,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":3310}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":754831,"byte_end":754836,"line_start":536,"line_end":536,"column_start":53,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":3313}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":755097,"byte_end":755102,"line_start":545,"line_end":545,"column_start":52,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":3316}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":755367,"byte_end":755372,"line_start":554,"line_end":554,"column_start":52,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":3319}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":755638,"byte_end":755643,"line_start":563,"line_end":563,"column_start":53,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":3322}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":755856,"byte_end":755861,"line_start":571,"line_end":571,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3324}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":756161,"byte_end":756166,"line_start":581,"line_end":581,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3326}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":756509,"byte_end":756513,"line_start":594,"line_end":594,"column_start":52,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3329}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":756814,"byte_end":756818,"line_start":605,"line_end":605,"column_start":52,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3332}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":757120,"byte_end":757124,"line_start":616,"line_end":616,"column_start":53,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":3335}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":757425,"byte_end":757429,"line_start":627,"line_end":627,"column_start":54,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":3338}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":757730,"byte_end":757734,"line_start":638,"line_end":638,"column_start":53,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":3341}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":758011,"byte_end":758015,"line_start":649,"line_end":649,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3343}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":758377,"byte_end":758381,"line_start":660,"line_end":660,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3345}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":758778,"byte_end":758782,"line_start":674,"line_end":674,"column_start":52,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3348}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":759083,"byte_end":759087,"line_start":685,"line_end":685,"column_start":52,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3351}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":759389,"byte_end":759393,"line_start":696,"line_end":696,"column_start":53,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":3354}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":759694,"byte_end":759698,"line_start":707,"line_end":707,"column_start":54,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":3357}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":759999,"byte_end":760003,"line_start":718,"line_end":718,"column_start":53,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":3360}],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":760327,"byte_end":760330,"line_start":732,"line_end":732,"column_start":53,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3363}],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":760599,"byte_end":760602,"line_start":742,"line_end":742,"column_start":53,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3366}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":760870,"byte_end":760873,"line_start":752,"line_end":752,"column_start":52,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":3369}],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":761138,"byte_end":761141,"line_start":762,"line_end":762,"column_start":54,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":3372}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":761405,"byte_end":761408,"line_start":772,"line_end":772,"column_start":53,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3375}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":761646,"byte_end":761649,"line_start":782,"line_end":782,"column_start":30,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3377}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":761874,"byte_end":761877,"line_start":790,"line_end":790,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3379}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":762150,"byte_end":762153,"line_start":801,"line_end":801,"column_start":53,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3382}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":762421,"byte_end":762424,"line_start":811,"line_end":811,"column_start":52,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":3385}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":762689,"byte_end":762692,"line_start":822,"line_end":822,"column_start":53,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3388}],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":762962,"byte_end":762965,"line_start":832,"line_end":832,"column_start":54,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":3391}],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":763229,"byte_end":763232,"line_start":842,"line_end":842,"column_start":53,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3394}],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":764898,"byte_end":764903,"line_start":896,"line_end":896,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3400}],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":765908,"byte_end":765912,"line_start":929,"line_end":929,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3403}],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":766022,"byte_end":766026,"line_start":935,"line_end":935,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3406}],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":768234,"byte_end":768238,"line_start":993,"line_end":993,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3409}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":770444,"byte_end":770447,"line_start":1049,"line_end":1049,"column_start":30,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3412}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":770556,"byte_end":770559,"line_start":1055,"line_end":1055,"column_start":30,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3415}],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":770778,"byte_end":770783,"line_start":1068,"line_end":1068,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3420}],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":770956,"byte_end":770960,"line_start":1077,"line_end":1077,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3423}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":771148,"byte_end":771152,"line_start":1088,"line_end":1088,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3426}],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":771365,"byte_end":771369,"line_start":1099,"line_end":1099,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3429}],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":771582,"byte_end":771585,"line_start":1110,"line_end":1110,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3432}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":771847,"byte_end":771850,"line_start":1124,"line_end":1124,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3435}],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Inherent","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":783386,"byte_end":783398,"line_start":134,"line_end":134,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":3487},{"krate":0,"index":3488},{"krate":0,"index":3489},{"krate":0,"index":3490},{"krate":0,"index":3491},{"krate":0,"index":3492},{"krate":0,"index":3493},{"krate":0,"index":3494},{"krate":0,"index":3495},{"krate":0,"index":3496},{"krate":0,"index":3497},{"krate":0,"index":3500},{"krate":0,"index":3501},{"krate":0,"index":3502},{"krate":0,"index":3503},{"krate":0,"index":3504},{"krate":0,"index":3505},{"krate":0,"index":3506},{"krate":0,"index":3507},{"krate":0,"index":3508},{"krate":0,"index":3509},{"krate":0,"index":3510},{"krate":0,"index":3511},{"krate":0,"index":3512},{"krate":0,"index":3513},{"krate":0,"index":3514},{"krate":0,"index":3515},{"krate":0,"index":3516},{"krate":0,"index":3517},{"krate":0,"index":3518},{"krate":0,"index":3519},{"krate":0,"index":3520},{"krate":0,"index":3521},{"krate":0,"index":3522},{"krate":0,"index":3523},{"krate":0,"index":3524},{"krate":0,"index":3525},{"krate":0,"index":3526},{"krate":0,"index":3527},{"krate":0,"index":3528},{"krate":0,"index":3529},{"krate":0,"index":3530},{"krate":0,"index":3531},{"krate":0,"index":3532},{"krate":0,"index":3533},{"krate":0,"index":3534},{"krate":0,"index":3535},{"krate":0,"index":3536},{"krate":0,"index":3537},{"krate":0,"index":3538},{"krate":0,"index":3539},{"krate":0,"index":3540},{"krate":0,"index":3541},{"krate":0,"index":3542},{"krate":0,"index":3543},{"krate":0,"index":3544},{"krate":0,"index":3545},{"krate":0,"index":3546},{"krate":0,"index":3547},{"krate":0,"index":3548},{"krate":0,"index":3549},{"krate":0,"index":3550},{"krate":0,"index":3551},{"krate":0,"index":3552},{"krate":0,"index":3553},{"krate":0,"index":3554},{"krate":0,"index":3555},{"krate":0,"index":3556},{"krate":0,"index":3559},{"krate":0,"index":3561}],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":808035,"byte_end":808047,"line_start":817,"line_end":817,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3564},{"krate":0,"index":3565},{"krate":0,"index":3566},{"krate":0,"index":3567},{"krate":0,"index":3568},{"krate":0,"index":3569}],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":808580,"byte_end":808592,"line_start":839,"line_end":839,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3571},{"krate":0,"index":3572},{"krate":0,"index":3573},{"krate":0,"index":3574},{"krate":0,"index":3575}],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Inherent","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":822869,"byte_end":822880,"line_start":64,"line_end":64,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3617},{"krate":0,"index":3619}],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":825668,"byte_end":825685,"line_start":144,"line_end":144,"column_start":28,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3621}],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Inherent","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":826985,"byte_end":827000,"line_start":181,"line_end":181,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3629},{"krate":0,"index":3630}],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Inherent","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":834870,"byte_end":834878,"line_start":365,"line_end":365,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3645},{"krate":0,"index":3646},{"krate":0,"index":3647}],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":841509,"byte_end":841515,"line_start":554,"line_end":554,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3683},{"krate":0,"index":3684}],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Inherent","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":849974,"byte_end":849982,"line_start":798,"line_end":798,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3723},{"krate":0,"index":3724},{"krate":0,"index":3725}],"docs":"","sig":null,"attributes":[]},{"id":325,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":851119,"byte_end":851127,"line_start":839,"line_end":839,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3728},{"krate":0,"index":3729},{"krate":0,"index":3730},{"krate":0,"index":3731},{"krate":0,"index":3732},{"krate":0,"index":3733},{"krate":0,"index":3734}],"docs":"","sig":null,"attributes":[]},{"id":326,"kind":"Direct","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":851948,"byte_end":851956,"line_start":871,"line_end":871,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3737},{"krate":0,"index":3738},{"krate":0,"index":3739},{"krate":0,"index":3740},{"krate":0,"index":3741},{"krate":0,"index":3742}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":8223,"byte_end":8228,"line_start":181,"line_end":181,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":55}},{"kind":"Mod","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":8621,"byte_end":8625,"line_start":200,"line_end":200,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":128}},{"kind":"Mod","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/math/mod.rs","byte_start":27888,"byte_end":27890,"line_start":2,"line_end":2,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":129}},{"kind":"Mod","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/math/mod.rs","byte_start":27900,"byte_end":27905,"line_start":3,"line_end":3,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":170}},{"kind":"Mod","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":8666,"byte_end":8674,"line_start":203,"line_end":203,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":175}},{"kind":"Mod","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/mod.rs","byte_start":45879,"byte_end":45887,"line_start":27,"line_end":27,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":260}},{"kind":"Mod","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":8700,"byte_end":8702,"line_start":206,"line_end":206,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":428}},{"kind":"Mod","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":8748,"byte_end":8752,"line_start":209,"line_end":209,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":533}},{"kind":"Mod","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":8803,"byte_end":8806,"line_start":213,"line_end":213,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":709}},{"kind":"Mod","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":8840,"byte_end":8843,"line_start":215,"line_end":215,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":959}},{"kind":"Mod","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":8877,"byte_end":8880,"line_start":217,"line_end":217,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":1012}},{"kind":"Mod","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":8914,"byte_end":8917,"line_start":219,"line_end":219,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":1129}},{"kind":"Mod","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":8951,"byte_end":8954,"line_start":221,"line_end":221,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":1230}},{"kind":"Mod","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":8988,"byte_end":8991,"line_start":223,"line_end":223,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":1454}},{"kind":"Mod","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":9026,"byte_end":9030,"line_start":225,"line_end":225,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":1578}},{"kind":"Mod","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":9064,"byte_end":9067,"line_start":227,"line_end":227,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":1795}},{"kind":"Mod","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":9101,"byte_end":9104,"line_start":229,"line_end":229,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":1926}},{"kind":"Mod","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":9138,"byte_end":9141,"line_start":231,"line_end":231,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":2314}},{"kind":"Mod","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":9176,"byte_end":9180,"line_start":233,"line_end":233,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":2479}},{"kind":"Mod","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":9215,"byte_end":9219,"line_start":235,"line_end":235,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":2550}},{"kind":"Mod","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/webp/mod.rs","byte_start":587769,"byte_end":587772,"line_start":8,"line_end":8,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":2629}},{"kind":"Mod","span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/lib.rs","byte_start":9258,"byte_end":9266,"line_start":237,"line_end":237,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":2822}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":17347,"byte_end":17363,"line_start":194,"line_end":194,"column_start":6,"column_end":22},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":3866},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":18061,"byte_end":18074,"line_start":217,"line_end":217,"column_start":6,"column_end":19},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":3929},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":18850,"byte_end":18863,"line_start":245,"line_end":245,"column_start":6,"column_end":19},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":3895},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":19640,"byte_end":19654,"line_start":273,"line_end":273,"column_start":6,"column_end":20},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":3900},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":20033,"byte_end":20043,"line_start":288,"line_end":288,"column_start":6,"column_end":16},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":3934},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":20400,"byte_end":20410,"line_start":302,"line_end":302,"column_start":26,"column_end":36},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":3845},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":20526,"byte_end":20541,"line_start":308,"line_end":308,"column_start":28,"column_end":43},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":3960},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":20670,"byte_end":20685,"line_start":314,"line_end":314,"column_start":36,"column_end":51},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":3960},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":20935,"byte_end":20951,"line_start":323,"line_end":323,"column_start":32,"column_end":48},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":3866},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":21254,"byte_end":21264,"line_start":335,"line_end":335,"column_start":23,"column_end":33},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":3845},"to":{"krate":2,"index":6074}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":21725,"byte_end":21735,"line_start":348,"line_end":348,"column_start":16,"column_end":26},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":3845},"to":{"krate":1,"index":1634}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":22188,"byte_end":22204,"line_start":361,"line_end":361,"column_start":23,"column_end":39},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":3866},"to":{"krate":2,"index":6074}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":23826,"byte_end":23842,"line_start":404,"line_end":404,"column_start":16,"column_end":32},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":3866},"to":{"krate":1,"index":1634}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":23870,"byte_end":23884,"line_start":406,"line_end":406,"column_start":23,"column_end":37},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":3900},"to":{"krate":2,"index":6074}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":24919,"byte_end":24933,"line_start":438,"line_end":438,"column_start":16,"column_end":30},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":3900},"to":{"krate":1,"index":1634}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":25138,"byte_end":25151,"line_start":447,"line_end":447,"column_start":23,"column_end":36},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":3895},"to":{"krate":2,"index":6074}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":25612,"byte_end":25625,"line_start":465,"line_end":465,"column_start":16,"column_end":29},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":3895},"to":{"krate":1,"index":1634}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":25830,"byte_end":25843,"line_start":474,"line_end":474,"column_start":23,"column_end":36},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":3929},"to":{"krate":2,"index":6074}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":26290,"byte_end":26303,"line_start":486,"line_end":486,"column_start":16,"column_end":29},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":3929},"to":{"krate":1,"index":1634}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":26508,"byte_end":26518,"line_start":495,"line_end":495,"column_start":23,"column_end":33},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":3934},"to":{"krate":2,"index":6074}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":26901,"byte_end":26911,"line_start":505,"line_end":505,"column_start":16,"column_end":26},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":3934},"to":{"krate":1,"index":1634}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/error.rs","byte_start":26939,"byte_end":26954,"line_start":507,"line_end":507,"column_start":23,"column_end":38},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":3960},"to":{"krate":2,"index":6074}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/math/nq.rs","byte_start":32049,"byte_end":32057,"line_start":111,"line_end":111,"column_start":6,"column_end":14},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":145},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/colorops.rs","byte_start":72519,"byte_end":72526,"line_start":231,"line_end":231,"column_start":19,"column_end":26},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":4017},"to":{"krate":0,"index":299}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/colorops.rs","byte_start":73284,"byte_end":73292,"line_start":266,"line_end":266,"column_start":23,"column_end":31},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":145},"to":{"krate":0,"index":299}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/imageops/sample.rs","byte_start":88483,"byte_end":88495,"line_start":363,"line_end":363,"column_start":34,"column_end":46},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":364},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":107381,"byte_end":107387,"line_start":68,"line_end":68,"column_start":15,"column_end":21},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":450},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":108769,"byte_end":108775,"line_start":115,"line_end":115,"column_start":6,"column_end":12},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":450},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/reader.rs","byte_start":109561,"byte_end":109567,"line_start":137,"line_end":137,"column_start":25,"column_end":31},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":450},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/io/free_functions.rs","byte_start":124579,"byte_end":124589,"line_start":302,"line_end":302,"column_start":26,"column_end":36},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":3845},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":129592,"byte_end":129604,"line_start":124,"line_end":124,"column_start":6,"column_end":18},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":4049},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":142199,"byte_end":142202,"line_start":437,"line_end":437,"column_start":6,"column_end":9},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":4071},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":142460,"byte_end":142471,"line_start":452,"line_end":452,"column_start":14,"column_end":25},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":4038},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":159626,"byte_end":159637,"line_start":873,"line_end":873,"column_start":22,"column_end":33},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":4038},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":165504,"byte_end":165508,"line_start":1028,"line_end":1028,"column_start":24,"column_end":28},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":4099},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":171093,"byte_end":171100,"line_start":1161,"line_end":1161,"column_start":24,"column_end":31},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":4112},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":175476,"byte_end":175487,"line_start":1275,"line_end":1275,"column_start":40,"column_end":51},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":4038},"to":{"krate":2,"index":2154}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":176096,"byte_end":176107,"line_start":1294,"line_end":1294,"column_start":43,"column_end":54},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":4038},"to":{"krate":2,"index":2158}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":176711,"byte_end":176715,"line_start":1312,"line_end":1312,"column_start":45,"column_end":49},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":4099},"to":{"krate":0,"index":3685}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":177962,"byte_end":177969,"line_start":1357,"line_end":1357,"column_start":45,"column_end":52},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":4112},"to":{"krate":0,"index":3685}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":179236,"byte_end":179243,"line_start":1402,"line_end":1402,"column_start":41,"column_end":48},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":4112},"to":{"krate":0,"index":3698}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":180138,"byte_end":180148,"line_start":1431,"line_end":1431,"column_start":22,"column_end":32},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":3845},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":180300,"byte_end":180323,"line_start":1435,"line_end":1435,"column_start":31,"column_end":54},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":4174},"to":{"krate":2,"index":6074}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":180531,"byte_end":180554,"line_start":1440,"line_end":1440,"column_start":31,"column_end":54},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":4174},"to":{"krate":1,"index":1634}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/flat.rs","byte_start":181126,"byte_end":181136,"line_start":1454,"line_end":1454,"column_start":21,"column_end":31},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":4149},"to":{"krate":2,"index":1671}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/bmp/decoder.rs","byte_start":189939,"byte_end":189950,"line_start":100,"line_end":100,"column_start":23,"column_end":34},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":778},"to":{"krate":2,"index":4852}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/bmp/decoder.rs","byte_start":191873,"byte_end":191885,"line_start":158,"line_end":158,"column_start":23,"column_end":35},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":4232},"to":{"krate":2,"index":6074}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/bmp/decoder.rs","byte_start":193956,"byte_end":193966,"line_start":195,"line_end":195,"column_start":29,"column_end":39},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":3845},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/bmp/decoder.rs","byte_start":194122,"byte_end":194134,"line_start":201,"line_end":201,"column_start":23,"column_end":35},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":4232},"to":{"krate":1,"index":1634}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/bmp/decoder.rs","byte_start":194481,"byte_end":194498,"line_start":216,"line_end":216,"column_start":23,"column_end":40},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":4309},"to":{"krate":2,"index":6074}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/bmp/decoder.rs","byte_start":203155,"byte_end":203163,"line_start":479,"line_end":479,"column_start":6,"column_end":14},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":4340},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/bmp/decoder.rs","byte_start":204549,"byte_end":204558,"line_start":523,"line_end":523,"column_start":6,"column_end":15},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":4350},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/bmp/decoder.rs","byte_start":205823,"byte_end":205838,"line_start":578,"line_end":578,"column_start":32,"column_end":47},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":851},"to":{"krate":2,"index":4852}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/bmp/decoder.rs","byte_start":207694,"byte_end":207704,"line_start":630,"line_end":630,"column_start":22,"column_end":32},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":818},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/bmp/decoder.rs","byte_start":239608,"byte_end":239617,"line_start":1420,"line_end":1420,"column_start":18,"column_end":27},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":896},"to":{"krate":1,"index":2885}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/bmp/decoder.rs","byte_start":240037,"byte_end":240047,"line_start":1434,"line_end":1434,"column_start":52,"column_end":62},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":818},"to":{"krate":0,"index":3648}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/bmp/decoder.rs","byte_start":240722,"byte_end":240732,"line_start":1459,"line_end":1459,"column_start":55,"column_end":65},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":818},"to":{"krate":0,"index":3661}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/bmp/encoder.rs","byte_start":242253,"byte_end":242263,"line_start":17,"line_end":17,"column_start":25,"column_end":35},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":937},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/bmp/encoder.rs","byte_start":249383,"byte_end":249393,"line_start":214,"line_end":214,"column_start":37,"column_end":47},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":937},"to":{"krate":0,"index":3670}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dds.rs","byte_start":254577,"byte_end":254589,"line_start":34,"line_end":34,"column_start":23,"column_end":35},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":4362},"to":{"krate":2,"index":6074}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dds.rs","byte_start":255229,"byte_end":255239,"line_start":49,"line_end":49,"column_start":29,"column_end":39},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":3845},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dds.rs","byte_start":255395,"byte_end":255407,"line_start":55,"line_end":55,"column_start":23,"column_end":35},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":4362},"to":{"krate":1,"index":1634}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dds.rs","byte_start":255876,"byte_end":255887,"line_start":83,"line_end":83,"column_start":6,"column_end":17},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":4409},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dds.rs","byte_start":256611,"byte_end":256617,"line_start":106,"line_end":106,"column_start":6,"column_end":12},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":4397},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dds.rs","byte_start":258293,"byte_end":258303,"line_start":159,"line_end":159,"column_start":15,"column_end":25},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":996},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dds.rs","byte_start":259795,"byte_end":259805,"line_start":198,"line_end":198,"column_start":45,"column_end":55},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":996},"to":{"krate":0,"index":3648}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dxt.rs","byte_start":261606,"byte_end":261616,"line_start":33,"line_end":33,"column_start":6,"column_end":16},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":4420},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dxt.rs","byte_start":262573,"byte_end":262583,"line_start":69,"line_end":69,"column_start":15,"column_end":25},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1036},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dxt.rs","byte_start":264609,"byte_end":264619,"line_start":120,"line_end":120,"column_start":45,"column_end":55},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1036},"to":{"krate":0,"index":3648}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dxt.rs","byte_start":265516,"byte_end":265526,"line_start":152,"line_end":152,"column_start":55,"column_end":65},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1036},"to":{"krate":0,"index":3661}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dxt.rs","byte_start":266500,"byte_end":266509,"line_start":182,"line_end":182,"column_start":24,"column_end":33},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1064},"to":{"krate":1,"index":2885}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dxt.rs","byte_start":266769,"byte_end":266779,"line_start":194,"line_end":194,"column_start":16,"column_end":26},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1072},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/gif.rs","byte_start":290714,"byte_end":290724,"line_start":51,"line_end":51,"column_start":15,"column_end":25},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1165},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/gif.rs","byte_start":291176,"byte_end":291185,"line_start":65,"line_end":65,"column_start":18,"column_end":27},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1171},"to":{"krate":1,"index":2885}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/gif.rs","byte_start":291598,"byte_end":291608,"line_start":79,"line_end":79,"column_start":45,"column_end":55},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1165},"to":{"krate":0,"index":3648}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/gif.rs","byte_start":294555,"byte_end":294571,"line_start":156,"line_end":156,"column_start":15,"column_end":31},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1190},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/gif.rs","byte_start":295183,"byte_end":295199,"line_start":178,"line_end":178,"column_start":28,"column_end":44},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1190},"to":{"krate":2,"index":4852}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/gif.rs","byte_start":299905,"byte_end":299915,"line_start":286,"line_end":286,"column_start":49,"column_end":59},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1165},"to":{"krate":0,"index":3667}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/gif.rs","byte_start":300178,"byte_end":300185,"line_start":298,"line_end":298,"column_start":16,"column_end":23},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1209},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/gif.rs","byte_start":304264,"byte_end":304274,"line_start":409,"line_end":409,"column_start":6,"column_end":16},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":3845},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":306563,"byte_end":306575,"line_start":49,"line_end":49,"column_start":23,"column_end":35},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":4438},"to":{"krate":2,"index":6074}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":308225,"byte_end":308235,"line_start":78,"line_end":78,"column_start":29,"column_end":39},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":3845},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":308391,"byte_end":308403,"line_start":84,"line_end":84,"column_start":23,"column_end":35},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":4438},"to":{"krate":1,"index":1634}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":308905,"byte_end":308913,"line_start":104,"line_end":104,"column_start":23,"column_end":31},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":4482},"to":{"krate":2,"index":6074}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":309507,"byte_end":309517,"line_start":124,"line_end":124,"column_start":18,"column_end":28},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":4511},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":310888,"byte_end":310897,"line_start":166,"line_end":166,"column_start":18,"column_end":27},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1283},"to":{"krate":1,"index":2885}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":311313,"byte_end":311323,"line_start":180,"line_end":180,"column_start":48,"column_end":58},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":4511},"to":{"krate":0,"index":3648}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":311831,"byte_end":311841,"line_start":200,"line_end":200,"column_start":58,"column_end":68},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":4511},"to":{"krate":0,"index":3661}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":312877,"byte_end":312887,"line_start":243,"line_end":243,"column_start":6,"column_end":16},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":4527},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":315193,"byte_end":315203,"line_start":308,"line_end":308,"column_start":18,"column_end":28},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":4518},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":320883,"byte_end":320893,"line_start":461,"line_end":461,"column_start":35,"column_end":45},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":4518},"to":{"krate":2,"index":4759}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":321793,"byte_end":321816,"line_start":489,"line_end":489,"column_start":18,"column_end":41},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1339},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":322109,"byte_end":322132,"line_start":502,"line_end":502,"column_start":31,"column_end":54},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1339},"to":{"krate":2,"index":4852}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":323940,"byte_end":323963,"line_start":553,"line_end":553,"column_start":40,"column_end":63},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1339},"to":{"krate":2,"index":4807}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/decoder.rs","byte_start":330414,"byte_end":330425,"line_start":729,"line_end":729,"column_start":6,"column_end":17},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":4547},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/encoder.rs","byte_start":340358,"byte_end":340368,"line_start":12,"line_end":12,"column_start":16,"column_end":26},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1412},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/encoder.rs","byte_start":342930,"byte_end":342941,"line_start":89,"line_end":89,"column_start":10,"column_end":21},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1424},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/encoder.rs","byte_start":343067,"byte_end":343078,"line_start":95,"line_end":95,"column_start":23,"column_end":34},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1424},"to":{"krate":2,"index":4852}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/encoder.rs","byte_start":343779,"byte_end":343799,"line_start":124,"line_end":124,"column_start":10,"column_end":30},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1436},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/hdr/encoder.rs","byte_start":344058,"byte_end":344078,"line_start":134,"line_end":134,"column_start":23,"column_end":43},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1436},"to":{"krate":2,"index":4852}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/ico/decoder.rs","byte_start":357764,"byte_end":357776,"line_start":48,"line_end":48,"column_start":23,"column_end":35},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":4577},"to":{"krate":2,"index":6074}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/ico/decoder.rs","byte_start":358903,"byte_end":358913,"line_start":69,"line_end":69,"column_start":29,"column_end":39},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":3845},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/ico/decoder.rs","byte_start":359069,"byte_end":359081,"line_start":75,"line_end":75,"column_start":23,"column_end":35},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":4577},"to":{"krate":1,"index":1634}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/ico/decoder.rs","byte_start":359322,"byte_end":359341,"line_start":86,"line_end":86,"column_start":23,"column_end":42},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":4625},"to":{"krate":2,"index":6074}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/ico/decoder.rs","byte_start":359581,"byte_end":359600,"line_start":95,"line_end":95,"column_start":28,"column_end":47},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":4625},"to":{"krate":2,"index":1822}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/ico/decoder.rs","byte_start":360239,"byte_end":360249,"line_start":129,"line_end":129,"column_start":22,"column_end":32},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":1498},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/ico/decoder.rs","byte_start":362546,"byte_end":362554,"line_start":201,"line_end":201,"column_start":6,"column_end":14},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":4648},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/ico/decoder.rs","byte_start":363867,"byte_end":363876,"line_start":249,"line_end":249,"column_start":18,"column_end":27},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1531},"to":{"krate":1,"index":2885}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/ico/decoder.rs","byte_start":364296,"byte_end":364306,"line_start":263,"line_end":263,"column_start":52,"column_end":62},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1498},"to":{"krate":0,"index":3648}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/ico/encoder.rs","byte_start":369429,"byte_end":369439,"line_start":22,"line_end":22,"column_start":16,"column_end":26},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":1562},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/ico/encoder.rs","byte_start":370433,"byte_end":370443,"line_start":55,"line_end":55,"column_start":33,"column_end":43},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":1562},"to":{"krate":0,"index":3670}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/jpeg/decoder.rs","byte_start":373146,"byte_end":373157,"line_start":18,"line_end":18,"column_start":15,"column_end":26},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":1602},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/jpeg/decoder.rs","byte_start":373866,"byte_end":373876,"line_start":40,"line_end":40,"column_start":18,"column_end":28},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":1609},"to":{"krate":1,"index":2885}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/jpeg/decoder.rs","byte_start":374289,"byte_end":374300,"line_start":54,"line_end":54,"column_start":45,"column_end":56},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":1602},"to":{"krate":0,"index":3648}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/jpeg/decoder.rs","byte_start":376046,"byte_end":376055,"line_start":114,"line_end":114,"column_start":6,"column_end":15},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":5334},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/jpeg/decoder.rs","byte_start":376313,"byte_end":376323,"line_start":125,"line_end":125,"column_start":6,"column_end":16},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":3845},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/jpeg/encoder.rs","byte_start":402595,"byte_end":402604,"line_start":170,"line_end":170,"column_start":25,"column_end":34},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":1696},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/jpeg/encoder.rs","byte_start":406113,"byte_end":406125,"line_start":306,"line_end":306,"column_start":6,"column_end":18},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":4697},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/jpeg/encoder.rs","byte_start":406463,"byte_end":406475,"line_start":318,"line_end":318,"column_start":18,"column_end":30},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":4697},"to":{"krate":2,"index":1895}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/jpeg/encoder.rs","byte_start":407051,"byte_end":407062,"line_start":343,"line_end":343,"column_start":20,"column_end":31},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":1715},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/jpeg/encoder.rs","byte_start":418468,"byte_end":418479,"line_start":671,"line_end":671,"column_start":37,"column_end":48},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":1715},"to":{"krate":0,"index":3670}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","byte_start":438800,"byte_end":438809,"line_start":34,"line_end":34,"column_start":15,"column_end":24},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":1837},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","byte_start":439567,"byte_end":439576,"line_start":58,"line_end":58,"column_start":24,"column_end":33},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":1837},"to":{"krate":1,"index":2885}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","byte_start":440831,"byte_end":440841,"line_start":104,"line_end":104,"column_start":15,"column_end":25},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":1849},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","byte_start":445455,"byte_end":445465,"line_start":193,"line_end":193,"column_start":45,"column_end":55},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":1849},"to":{"krate":0,"index":3648}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","byte_start":447526,"byte_end":447537,"line_start":256,"line_end":256,"column_start":15,"column_end":26},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":1873},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","byte_start":453092,"byte_end":453103,"line_start":396,"line_end":396,"column_start":49,"column_end":60},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":1873},"to":{"krate":0,"index":3667}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","byte_start":453241,"byte_end":453254,"line_start":400,"line_end":400,"column_start":36,"column_end":49},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":1891},"to":{"krate":2,"index":4852}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","byte_start":455633,"byte_end":455643,"line_start":475,"line_end":475,"column_start":16,"column_end":26},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":1899},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","byte_start":459478,"byte_end":459488,"line_start":550,"line_end":550,"column_start":33,"column_end":43},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":1899},"to":{"krate":0,"index":3670}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","byte_start":460723,"byte_end":460733,"line_start":582,"line_end":582,"column_start":6,"column_end":16},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":3845},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","byte_start":461750,"byte_end":461765,"line_start":610,"line_end":610,"column_start":18,"column_end":33},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":4712},"to":{"krate":2,"index":1895}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/png.rs","byte_start":461851,"byte_end":461861,"line_start":616,"line_end":616,"column_start":18,"column_end":28},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":4738},"to":{"krate":2,"index":1895}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/autobreak.rs","byte_start":469605,"byte_end":469614,"line_start":15,"line_end":15,"column_start":20,"column_end":29},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":1943},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/autobreak.rs","byte_start":470875,"byte_end":470884,"line_start":58,"line_end":58,"column_start":34,"column_end":43},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":1943},"to":{"krate":1,"index":2943}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/autobreak.rs","byte_start":471510,"byte_end":471519,"line_start":82,"line_end":82,"column_start":29,"column_end":38},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":1943},"to":{"krate":2,"index":2097}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/decoder.rs","byte_start":475369,"byte_end":475381,"line_start":80,"line_end":80,"column_start":18,"column_end":30},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":4764},"to":{"krate":2,"index":6074}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/decoder.rs","byte_start":478210,"byte_end":478220,"line_start":128,"line_end":128,"column_start":29,"column_end":39},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":3845},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/decoder.rs","byte_start":478376,"byte_end":478388,"line_start":134,"line_end":134,"column_start":23,"column_end":35},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":4764},"to":{"krate":1,"index":1634}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/decoder.rs","byte_start":478864,"byte_end":478877,"line_start":156,"line_end":156,"column_start":18,"column_end":31},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":4821},"to":{"krate":2,"index":6074}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/decoder.rs","byte_start":479469,"byte_end":479484,"line_start":178,"line_end":178,"column_start":18,"column_end":33},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":4848},"to":{"krate":2,"index":6074}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/decoder.rs","byte_start":480636,"byte_end":480646,"line_start":226,"line_end":226,"column_start":15,"column_end":25},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":2032},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/decoder.rs","byte_start":483798,"byte_end":483805,"line_start":317,"line_end":317,"column_start":21,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":2966},"to":{"krate":0,"index":2045}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/decoder.rs","byte_start":491322,"byte_end":491331,"line_start":511,"line_end":511,"column_start":32,"column_end":41},"kind":{"Impl":{"id":142}},"from":{"krate":1,"index":2336},"to":{"krate":0,"index":2045}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/decoder.rs","byte_start":491460,"byte_end":491469,"line_start":515,"line_end":515,"column_start":18,"column_end":27},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":2067},"to":{"krate":1,"index":2885}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/decoder.rs","byte_start":491882,"byte_end":491892,"line_start":529,"line_end":529,"column_start":45,"column_end":55},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":2032},"to":{"krate":0,"index":3648}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/decoder.rs","byte_start":493599,"byte_end":493609,"line_start":576,"line_end":576,"column_start":15,"column_end":25},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":2032},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/decoder.rs","byte_start":496036,"byte_end":496038,"line_start":642,"line_end":642,"column_start":17,"column_end":19},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":2022},"to":{"krate":0,"index":2018}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/decoder.rs","byte_start":496703,"byte_end":496706,"line_start":669,"line_end":669,"column_start":17,"column_end":20},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":2024},"to":{"krate":0,"index":2018}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/decoder.rs","byte_start":497978,"byte_end":497984,"line_start":708,"line_end":708,"column_start":17,"column_end":23},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":2026},"to":{"krate":0,"index":2018}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/decoder.rs","byte_start":499606,"byte_end":499611,"line_start":762,"line_end":762,"column_start":17,"column_end":22},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":2028},"to":{"krate":0,"index":2018}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/decoder.rs","byte_start":500461,"byte_end":500473,"line_start":792,"line_end":792,"column_start":31,"column_end":43},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":4948},"to":{"krate":0,"index":2030}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/decoder.rs","byte_start":500598,"byte_end":500611,"line_start":798,"line_end":798,"column_start":31,"column_end":44},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":4957},"to":{"krate":0,"index":2030}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/decoder.rs","byte_start":500927,"byte_end":500939,"line_start":808,"line_end":808,"column_start":31,"column_end":43},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":4967},"to":{"krate":0,"index":2030}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/decoder.rs","byte_start":501249,"byte_end":501264,"line_start":818,"line_end":818,"column_start":31,"column_end":46},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":4977},"to":{"krate":0,"index":2030}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/encoder.rs","byte_start":518662,"byte_end":518672,"line_start":81,"line_end":81,"column_start":16,"column_end":26},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":2168},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/encoder.rs","byte_start":526449,"byte_end":526459,"line_start":284,"line_end":284,"column_start":33,"column_end":43},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":2168},"to":{"krate":0,"index":3670}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/encoder.rs","byte_start":526692,"byte_end":526710,"line_start":296,"line_end":296,"column_start":10,"column_end":28},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":2172},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/encoder.rs","byte_start":527580,"byte_end":527595,"line_start":324,"line_end":324,"column_start":10,"column_end":25},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":2178},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/encoder.rs","byte_start":528156,"byte_end":528173,"line_start":345,"line_end":345,"column_start":10,"column_end":27},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":2181},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/encoder.rs","byte_start":532193,"byte_end":532211,"line_start":439,"line_end":439,"column_start":10,"column_end":28},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":2186},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/encoder.rs","byte_start":534776,"byte_end":534789,"line_start":506,"line_end":506,"column_start":10,"column_end":23},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":2190},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/encoder.rs","byte_start":535100,"byte_end":535112,"line_start":519,"line_end":519,"column_start":10,"column_end":22},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":2236},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/encoder.rs","byte_start":536529,"byte_end":536540,"line_start":564,"line_end":564,"column_start":10,"column_end":21},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":4895},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/encoder.rs","byte_start":538251,"byte_end":538262,"line_start":618,"line_end":618,"column_start":29,"column_end":40},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":4895},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/encoder.rs","byte_start":538381,"byte_end":538392,"line_start":624,"line_end":624,"column_start":30,"column_end":41},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":4895},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/encoder.rs","byte_start":538493,"byte_end":538506,"line_start":630,"line_end":630,"column_start":10,"column_end":23},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":2195},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/header.rs","byte_start":543431,"byte_end":543448,"line_start":136,"line_end":136,"column_start":6,"column_end":23},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":4987},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/header.rs","byte_start":543960,"byte_end":543970,"line_start":150,"line_end":150,"column_start":6,"column_end":16},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":4924},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/header.rs","byte_start":544940,"byte_end":544949,"line_start":175,"line_end":175,"column_start":6,"column_end":15},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":2267},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/header.rs","byte_start":549623,"byte_end":549637,"line_start":297,"line_end":297,"column_start":43,"column_end":57},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":2299},"to":{"krate":2,"index":6074}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/header.rs","byte_start":550236,"byte_end":550245,"line_start":316,"line_end":316,"column_start":29,"column_end":38},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":2267},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/header.rs","byte_start":550438,"byte_end":550447,"line_start":325,"line_end":325,"column_start":30,"column_end":39},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":2267},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/header.rs","byte_start":550641,"byte_end":550650,"line_start":334,"line_end":334,"column_start":29,"column_end":38},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":2267},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/pnm/header.rs","byte_start":550845,"byte_end":550854,"line_start":343,"line_end":343,"column_start":32,"column_end":41},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":2267},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/tga/decoder.rs","byte_start":551873,"byte_end":551881,"line_start":20,"line_end":20,"column_start":6,"column_end":14},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":2343},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/tga/decoder.rs","byte_start":552998,"byte_end":553008,"line_start":66,"line_end":66,"column_start":22,"column_end":32},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":2350},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/tga/decoder.rs","byte_start":563968,"byte_end":563978,"line_start":368,"line_end":368,"column_start":52,"column_end":62},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":2350},"to":{"krate":0,"index":3648}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/tga/decoder.rs","byte_start":565677,"byte_end":565686,"line_start":424,"line_end":424,"column_start":31,"column_end":40},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":2389},"to":{"krate":1,"index":2885}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/tga/encoder.rs","byte_start":566331,"byte_end":566343,"line_start":15,"line_end":15,"column_start":23,"column_end":35},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":5007},"to":{"krate":2,"index":6074}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/tga/encoder.rs","byte_start":566710,"byte_end":566720,"line_start":26,"line_end":26,"column_start":29,"column_end":39},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":3845},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/tga/encoder.rs","byte_start":566876,"byte_end":566888,"line_start":32,"line_end":32,"column_start":23,"column_end":35},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":5007},"to":{"krate":1,"index":1634}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/tga/encoder.rs","byte_start":566977,"byte_end":566987,"line_start":39,"line_end":39,"column_start":16,"column_end":26},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":2416},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/tga/encoder.rs","byte_start":568436,"byte_end":568446,"line_start":85,"line_end":85,"column_start":33,"column_end":43},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":2416},"to":{"krate":0,"index":3670}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/tga/header.rs","byte_start":573818,"byte_end":573827,"line_start":24,"line_end":24,"column_start":6,"column_end":15},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":2446},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/tga/header.rs","byte_start":575873,"byte_end":575879,"line_start":87,"line_end":87,"column_start":6,"column_end":12},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":5037},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/tiff.rs","byte_start":579627,"byte_end":579638,"line_start":33,"line_end":33,"column_start":9,"column_end":20},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":2509},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/tiff.rs","byte_start":581307,"byte_end":581317,"line_start":75,"line_end":75,"column_start":6,"column_end":16},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":3845},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/tiff.rs","byte_start":583072,"byte_end":583082,"line_start":115,"line_end":115,"column_start":18,"column_end":28},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":2521},"to":{"krate":1,"index":2885}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/tiff.rs","byte_start":583502,"byte_end":583513,"line_start":129,"line_end":129,"column_start":52,"column_end":63},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":2509},"to":{"krate":0,"index":3648}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/tiff.rs","byte_start":585749,"byte_end":585760,"line_start":198,"line_end":198,"column_start":23,"column_end":34},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":2538},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/tiff.rs","byte_start":587435,"byte_end":587446,"line_start":232,"line_end":232,"column_start":40,"column_end":51},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":2538},"to":{"krate":0,"index":3670}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/webp/decoder.rs","byte_start":588510,"byte_end":588522,"line_start":25,"line_end":25,"column_start":23,"column_end":35},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":5054},"to":{"krate":2,"index":6074}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/webp/decoder.rs","byte_start":588659,"byte_end":588674,"line_start":28,"line_end":28,"column_start":31,"column_end":46},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":2581},"to":{"krate":2,"index":6074}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/webp/decoder.rs","byte_start":589261,"byte_end":589271,"line_start":43,"line_end":43,"column_start":29,"column_end":39},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":3845},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/webp/decoder.rs","byte_start":589428,"byte_end":589440,"line_start":49,"line_end":49,"column_start":23,"column_end":35},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":5054},"to":{"krate":1,"index":1634}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/webp/decoder.rs","byte_start":589666,"byte_end":589677,"line_start":59,"line_end":59,"column_start":15,"column_end":26},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":2590},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/webp/decoder.rs","byte_start":592550,"byte_end":592560,"line_start":150,"line_end":150,"column_start":18,"column_end":28},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":2606},"to":{"krate":1,"index":2885}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/webp/decoder.rs","byte_start":592973,"byte_end":592984,"line_start":164,"line_end":164,"column_start":45,"column_end":56},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":2590},"to":{"krate":0,"index":3648}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/webp/vp8.rs","byte_start":622572,"byte_end":622584,"line_start":687,"line_end":687,"column_start":23,"column_end":35},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":5167},"to":{"krate":2,"index":6074}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/webp/vp8.rs","byte_start":623603,"byte_end":623613,"line_start":708,"line_end":708,"column_start":29,"column_end":39},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":3845},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/webp/vp8.rs","byte_start":623770,"byte_end":623782,"line_start":714,"line_end":714,"column_start":23,"column_end":35},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":5167},"to":{"krate":1,"index":1634}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/webp/vp8.rs","byte_start":623903,"byte_end":623913,"line_start":725,"line_end":725,"column_start":6,"column_end":16},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":2717},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/webp/vp8.rs","byte_start":628246,"byte_end":628256,"line_start":920,"line_end":920,"column_start":15,"column_end":25},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":2731},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/webp/vp8.rs","byte_start":649595,"byte_end":649603,"line_start":1578,"line_end":1578,"column_start":6,"column_end":14},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":5070},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/webp/vp8.rs","byte_start":650220,"byte_end":650228,"line_start":1601,"line_end":1601,"column_start":18,"column_end":26},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":5070},"to":{"krate":2,"index":1895}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/webp/vp8.rs","byte_start":650293,"byte_end":650303,"line_start":1607,"line_end":1607,"column_start":6,"column_end":16},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":5097},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/webp/vp8.rs","byte_start":650592,"byte_end":650602,"line_start":1619,"line_end":1619,"column_start":18,"column_end":28},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":5097},"to":{"krate":2,"index":1895}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/webp/vp8.rs","byte_start":650669,"byte_end":650678,"line_start":1625,"line_end":1625,"column_start":6,"column_end":15},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":5121},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/webp/vp8.rs","byte_start":651215,"byte_end":651224,"line_start":1643,"line_end":1643,"column_start":18,"column_end":27},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":5121},"to":{"krate":2,"index":1895}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/farbfeld.rs","byte_start":674751,"byte_end":674765,"line_start":39,"line_end":39,"column_start":15,"column_end":29},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":2852},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/farbfeld.rs","byte_start":675932,"byte_end":675946,"line_start":76,"line_end":76,"column_start":24,"column_end":38},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":2852},"to":{"krate":1,"index":2885}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/farbfeld.rs","byte_start":676725,"byte_end":676739,"line_start":102,"line_end":102,"column_start":31,"column_end":45},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":2852},"to":{"krate":1,"index":2960}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/farbfeld.rs","byte_start":679345,"byte_end":679360,"line_start":167,"line_end":167,"column_start":15,"column_end":30},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":2882},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/farbfeld.rs","byte_start":679608,"byte_end":679623,"line_start":174,"line_end":174,"column_start":45,"column_end":60},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":2882},"to":{"krate":0,"index":3648}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/farbfeld.rs","byte_start":680034,"byte_end":680049,"line_start":194,"line_end":194,"column_start":55,"column_end":70},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":2882},"to":{"krate":0,"index":3661}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/farbfeld.rs","byte_start":680857,"byte_end":680872,"line_start":220,"line_end":220,"column_start":16,"column_end":31},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":2904},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/farbfeld.rs","byte_start":681860,"byte_end":681875,"line_start":252,"line_end":252,"column_start":33,"column_end":48},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":2904},"to":{"krate":0,"index":3670}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/animation.rs","byte_start":685715,"byte_end":685721,"line_start":14,"line_end":14,"column_start":10,"column_end":16},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":2922},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/animation.rs","byte_start":686311,"byte_end":686317,"line_start":30,"line_end":30,"column_start":23,"column_end":29},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":2922},"to":{"krate":2,"index":4852}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/animation.rs","byte_start":686836,"byte_end":686841,"line_start":55,"line_end":55,"column_start":6,"column_end":11},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":5239},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/animation.rs","byte_start":687790,"byte_end":687795,"line_start":102,"line_end":102,"column_start":6,"column_end":11},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":5246},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/animation.rs","byte_start":693831,"byte_end":693839,"line_start":258,"line_end":258,"column_start":22,"column_end":30},"kind":{"Impl":{"id":221}},"from":{"krate":2,"index":31999},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":697288,"byte_end":697294,"line_start":26,"line_end":26,"column_start":38,"column_end":44},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":5266},"to":{"krate":2,"index":4852}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":697538,"byte_end":697544,"line_start":38,"line_end":38,"column_start":47,"column_end":53},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":5266},"to":{"krate":2,"index":4807}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":697693,"byte_end":697699,"line_start":47,"line_end":47,"column_start":49,"column_end":55},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":5266},"to":{"krate":2,"index":4778}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":698069,"byte_end":698078,"line_start":65,"line_end":65,"column_start":38,"column_end":47},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":3008},"to":{"krate":2,"index":4852}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":698334,"byte_end":698343,"line_start":77,"line_end":77,"column_start":47,"column_end":56},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":3008},"to":{"krate":2,"index":4807}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":698492,"byte_end":698501,"line_start":86,"line_end":86,"column_start":49,"column_end":58},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":3008},"to":{"krate":2,"index":4778}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":699070,"byte_end":699074,"line_start":111,"line_end":111,"column_start":25,"column_end":29},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":5274},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":699961,"byte_end":699965,"line_start":132,"line_end":132,"column_start":38,"column_end":42},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":5274},"to":{"krate":2,"index":4852}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":700369,"byte_end":700373,"line_start":148,"line_end":148,"column_start":47,"column_end":51},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":5274},"to":{"krate":2,"index":4807}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":700522,"byte_end":700526,"line_start":157,"line_end":157,"column_start":49,"column_end":53},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":5274},"to":{"krate":2,"index":4778}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":701222,"byte_end":701229,"line_start":183,"line_end":183,"column_start":25,"column_end":32},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":3044},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":702138,"byte_end":702145,"line_start":204,"line_end":204,"column_start":38,"column_end":45},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":3044},"to":{"krate":2,"index":4852}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":702562,"byte_end":702569,"line_start":220,"line_end":220,"column_start":47,"column_end":54},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":3044},"to":{"krate":2,"index":4807}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":702718,"byte_end":702725,"line_start":229,"line_end":229,"column_start":49,"column_end":56},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":3044},"to":{"krate":2,"index":4778}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":703319,"byte_end":703334,"line_start":255,"line_end":255,"column_start":38,"column_end":53},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":5282},"to":{"krate":2,"index":4852}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":703737,"byte_end":703752,"line_start":273,"line_end":273,"column_start":47,"column_end":62},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":5282},"to":{"krate":2,"index":4807}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":704081,"byte_end":704094,"line_start":293,"line_end":293,"column_start":38,"column_end":51},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":5293},"to":{"krate":2,"index":4852}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":704632,"byte_end":704645,"line_start":317,"line_end":317,"column_start":47,"column_end":60},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":5293},"to":{"krate":2,"index":4807}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":704981,"byte_end":704999,"line_start":337,"line_end":337,"column_start":38,"column_end":56},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":3085},"to":{"krate":2,"index":4852}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":705410,"byte_end":705428,"line_start":355,"line_end":355,"column_start":47,"column_end":65},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":3085},"to":{"krate":2,"index":4807}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":705746,"byte_end":705762,"line_start":374,"line_end":374,"column_start":38,"column_end":54},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":3102},"to":{"krate":2,"index":4852}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":706309,"byte_end":706325,"line_start":398,"line_end":398,"column_start":47,"column_end":63},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":3102},"to":{"krate":2,"index":4807}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":709152,"byte_end":709163,"line_start":487,"line_end":487,"column_start":20,"column_end":31},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":5303},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":715703,"byte_end":715714,"line_start":674,"line_end":674,"column_start":20,"column_end":31},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":5303},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":718306,"byte_end":718317,"line_start":749,"line_end":749,"column_start":20,"column_end":31},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":5303},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":718969,"byte_end":718980,"line_start":774,"line_end":774,"column_start":20,"column_end":31},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":5303},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":719723,"byte_end":719734,"line_start":801,"line_end":801,"column_start":30,"column_end":41},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":5303},"to":{"krate":2,"index":2073}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":719998,"byte_end":720009,"line_start":814,"line_end":814,"column_start":33,"column_end":44},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":5303},"to":{"krate":2,"index":2086}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":720275,"byte_end":720286,"line_start":825,"line_end":825,"column_start":42,"column_end":53},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":5303},"to":{"krate":2,"index":2154}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":720557,"byte_end":720568,"line_start":838,"line_end":838,"column_start":45,"column_end":56},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":5303},"to":{"krate":2,"index":2158}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":720829,"byte_end":720840,"line_start":849,"line_end":849,"column_start":30,"column_end":41},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":5303},"to":{"krate":2,"index":1606}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":721199,"byte_end":721210,"line_start":864,"line_end":864,"column_start":41,"column_end":52},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":5303},"to":{"krate":0,"index":3685}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":722034,"byte_end":722045,"line_start":897,"line_end":897,"column_start":37,"column_end":48},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":5303},"to":{"krate":0,"index":3698}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":725630,"byte_end":725641,"line_start":989,"line_end":989,"column_start":26,"column_end":37},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":5303},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":728075,"byte_end":728084,"line_start":1067,"line_end":1067,"column_start":6,"column_end":15},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":3230},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/buffer.rs","byte_start":729482,"byte_end":729493,"line_start":1105,"line_end":1105,"column_start":67,"column_end":78},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":5303},"to":{"krate":0,"index":3215}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":739538,"byte_end":739547,"line_start":37,"line_end":37,"column_start":6,"column_end":15},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":5334},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":743256,"byte_end":743273,"line_start":148,"line_end":148,"column_start":6,"column_end":23},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":5373},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":744561,"byte_end":744578,"line_start":182,"line_end":182,"column_start":26,"column_end":43},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":5373},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":750674,"byte_end":750675,"line_start":388,"line_end":388,"column_start":32,"column_end":33},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":3266},"to":{"krate":0,"index":3262}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":751113,"byte_end":751114,"line_start":402,"line_end":402,"column_start":29,"column_end":30},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":3273},"to":{"krate":0,"index":3268}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":752370,"byte_end":752374,"line_start":446,"line_end":446,"column_start":53,"column_end":57},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":5797},"to":{"krate":0,"index":3262}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":752603,"byte_end":752607,"line_start":454,"line_end":454,"column_start":53,"column_end":57},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":5797},"to":{"krate":0,"index":3262}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":752835,"byte_end":752839,"line_start":462,"line_end":462,"column_start":52,"column_end":56},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":5797},"to":{"krate":0,"index":3262}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":753064,"byte_end":753068,"line_start":470,"line_end":470,"column_start":52,"column_end":56},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":5797},"to":{"krate":0,"index":3262}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":753295,"byte_end":753299,"line_start":478,"line_end":478,"column_start":54,"column_end":58},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":5797},"to":{"krate":0,"index":3262}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":753447,"byte_end":753451,"line_start":485,"line_end":485,"column_start":31,"column_end":35},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":5797},"to":{"krate":0,"index":3262}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":753695,"byte_end":753699,"line_start":494,"line_end":494,"column_start":30,"column_end":34},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":5797},"to":{"krate":0,"index":3262}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":753943,"byte_end":753947,"line_start":503,"line_end":503,"column_start":31,"column_end":35},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":5797},"to":{"krate":0,"index":3262}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":754133,"byte_end":754137,"line_start":510,"line_end":510,"column_start":30,"column_end":34},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":5797},"to":{"krate":0,"index":3262}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":754323,"byte_end":754327,"line_start":517,"line_end":517,"column_start":32,"column_end":36},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":5797},"to":{"krate":0,"index":3262}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":754564,"byte_end":754569,"line_start":527,"line_end":527,"column_start":53,"column_end":58},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":5884},"to":{"krate":0,"index":3262}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":754831,"byte_end":754836,"line_start":536,"line_end":536,"column_start":53,"column_end":58},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":5884},"to":{"krate":0,"index":3262}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":755097,"byte_end":755102,"line_start":545,"line_end":545,"column_start":52,"column_end":57},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":5884},"to":{"krate":0,"index":3262}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":755367,"byte_end":755372,"line_start":554,"line_end":554,"column_start":52,"column_end":57},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":5884},"to":{"krate":0,"index":3262}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":755638,"byte_end":755643,"line_start":563,"line_end":563,"column_start":53,"column_end":58},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":5884},"to":{"krate":0,"index":3262}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":755856,"byte_end":755861,"line_start":571,"line_end":571,"column_start":32,"column_end":37},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":5884},"to":{"krate":0,"index":3262}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":756161,"byte_end":756166,"line_start":581,"line_end":581,"column_start":31,"column_end":36},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":5884},"to":{"krate":0,"index":3262}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":756509,"byte_end":756513,"line_start":594,"line_end":594,"column_start":52,"column_end":56},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":5826},"to":{"krate":0,"index":3262}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":756814,"byte_end":756818,"line_start":605,"line_end":605,"column_start":52,"column_end":56},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":5826},"to":{"krate":0,"index":3262}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":757120,"byte_end":757124,"line_start":616,"line_end":616,"column_start":53,"column_end":57},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":5826},"to":{"krate":0,"index":3262}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":757425,"byte_end":757429,"line_start":627,"line_end":627,"column_start":54,"column_end":58},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":5826},"to":{"krate":0,"index":3262}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":757730,"byte_end":757734,"line_start":638,"line_end":638,"column_start":53,"column_end":57},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":5826},"to":{"krate":0,"index":3262}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":758011,"byte_end":758015,"line_start":649,"line_end":649,"column_start":31,"column_end":35},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":5826},"to":{"krate":0,"index":3262}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":758377,"byte_end":758381,"line_start":660,"line_end":660,"column_start":30,"column_end":34},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":5826},"to":{"krate":0,"index":3262}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":758778,"byte_end":758782,"line_start":674,"line_end":674,"column_start":52,"column_end":56},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":5855},"to":{"krate":0,"index":3262}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":759083,"byte_end":759087,"line_start":685,"line_end":685,"column_start":52,"column_end":56},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":5855},"to":{"krate":0,"index":3262}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":759389,"byte_end":759393,"line_start":696,"line_end":696,"column_start":53,"column_end":57},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":5855},"to":{"krate":0,"index":3262}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":759694,"byte_end":759698,"line_start":707,"line_end":707,"column_start":54,"column_end":58},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":5855},"to":{"krate":0,"index":3262}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":759999,"byte_end":760003,"line_start":718,"line_end":718,"column_start":53,"column_end":57},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":5855},"to":{"krate":0,"index":3262}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":760327,"byte_end":760330,"line_start":732,"line_end":732,"column_start":53,"column_end":56},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":5739},"to":{"krate":0,"index":3262}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":760599,"byte_end":760602,"line_start":742,"line_end":742,"column_start":53,"column_end":56},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":5739},"to":{"krate":0,"index":3262}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":760870,"byte_end":760873,"line_start":752,"line_end":752,"column_start":52,"column_end":55},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":5739},"to":{"krate":0,"index":3262}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":761138,"byte_end":761141,"line_start":762,"line_end":762,"column_start":54,"column_end":57},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":5739},"to":{"krate":0,"index":3262}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":761405,"byte_end":761408,"line_start":772,"line_end":772,"column_start":53,"column_end":56},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":5739},"to":{"krate":0,"index":3262}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":761646,"byte_end":761649,"line_start":782,"line_end":782,"column_start":30,"column_end":33},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":5739},"to":{"krate":0,"index":3262}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":761874,"byte_end":761877,"line_start":790,"line_end":790,"column_start":29,"column_end":32},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":5739},"to":{"krate":0,"index":3262}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":762150,"byte_end":762153,"line_start":801,"line_end":801,"column_start":53,"column_end":56},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":5768},"to":{"krate":0,"index":3262}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":762421,"byte_end":762424,"line_start":811,"line_end":811,"column_start":52,"column_end":55},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":5768},"to":{"krate":0,"index":3262}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":762689,"byte_end":762692,"line_start":822,"line_end":822,"column_start":53,"column_end":56},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":5768},"to":{"krate":0,"index":3262}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":762962,"byte_end":762965,"line_start":832,"line_end":832,"column_start":54,"column_end":57},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":5768},"to":{"krate":0,"index":3262}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":763229,"byte_end":763232,"line_start":842,"line_end":842,"column_start":53,"column_end":56},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":5768},"to":{"krate":0,"index":3262}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":764898,"byte_end":764903,"line_start":896,"line_end":896,"column_start":30,"column_end":35},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":5884},"to":{"krate":0,"index":3396}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":765908,"byte_end":765912,"line_start":929,"line_end":929,"column_start":30,"column_end":34},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":5797},"to":{"krate":0,"index":3396}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":766022,"byte_end":766026,"line_start":935,"line_end":935,"column_start":30,"column_end":34},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":5826},"to":{"krate":0,"index":3396}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":768234,"byte_end":768238,"line_start":993,"line_end":993,"column_start":30,"column_end":34},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":5855},"to":{"krate":0,"index":3396}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":770444,"byte_end":770447,"line_start":1049,"line_end":1049,"column_start":30,"column_end":33},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":5739},"to":{"krate":0,"index":3396}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":770556,"byte_end":770559,"line_start":1055,"line_end":1055,"column_start":30,"column_end":33},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":5768},"to":{"krate":0,"index":3396}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":770778,"byte_end":770783,"line_start":1068,"line_end":1068,"column_start":31,"column_end":36},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":5884},"to":{"krate":0,"index":3416}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":770956,"byte_end":770960,"line_start":1077,"line_end":1077,"column_start":31,"column_end":35},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":5797},"to":{"krate":0,"index":3416}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":771148,"byte_end":771152,"line_start":1088,"line_end":1088,"column_start":31,"column_end":35},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":5826},"to":{"krate":0,"index":3416}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":771365,"byte_end":771369,"line_start":1099,"line_end":1099,"column_start":31,"column_end":35},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":5855},"to":{"krate":0,"index":3416}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":771582,"byte_end":771585,"line_start":1110,"line_end":1110,"column_start":31,"column_end":34},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":5739},"to":{"krate":0,"index":3416}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/color.rs","byte_start":771847,"byte_end":771850,"line_start":1124,"line_end":1124,"column_start":31,"column_end":34},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":5768},"to":{"krate":0,"index":3416}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":783386,"byte_end":783398,"line_start":134,"line_end":134,"column_start":6,"column_end":18},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":5964},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":808035,"byte_end":808047,"line_start":817,"line_end":817,"column_start":27,"column_end":39},"kind":{"Impl":{"id":317}},"from":{"krate":0,"index":5964},"to":{"krate":0,"index":3685}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/dynimage.rs","byte_start":808580,"byte_end":808592,"line_start":839,"line_end":839,"column_start":23,"column_end":35},"kind":{"Impl":{"id":318}},"from":{"krate":0,"index":5964},"to":{"krate":0,"index":3698}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":822869,"byte_end":822880,"line_start":64,"line_end":64,"column_start":6,"column_end":17},"kind":{"Impl":{"id":319}},"from":{"krate":0,"index":5997},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":825668,"byte_end":825685,"line_start":144,"line_end":144,"column_start":28,"column_end":45},"kind":{"Impl":{"id":320}},"from":{"krate":0,"index":6040},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":826985,"byte_end":827000,"line_start":181,"line_end":181,"column_start":6,"column_end":21},"kind":{"Impl":{"id":321}},"from":{"krate":0,"index":3622},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":834870,"byte_end":834878,"line_start":365,"line_end":365,"column_start":6,"column_end":14},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":6076},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":835384,"byte_end":835389,"line_start":385,"line_end":385,"column_start":29,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":1909},"to":{"krate":0,"index":3648}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":839085,"byte_end":839097,"line_start":482,"line_end":482,"column_start":32,"column_end":44},"kind":"SuperTrait","from":{"krate":0,"index":3648},"to":{"krate":0,"index":3661}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":839104,"byte_end":839109,"line_start":482,"line_end":482,"column_start":51,"column_end":56},"kind":"SuperTrait","from":{"krate":2,"index":1909},"to":{"krate":0,"index":3661}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":841509,"byte_end":841515,"line_start":554,"line_end":554,"column_start":44,"column_end":50},"kind":{"Impl":{"id":323}},"from":{"krate":0,"index":3672},"to":{"krate":2,"index":4852}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":844320,"byte_end":844336,"line_start":652,"line_end":652,"column_start":25,"column_end":41},"kind":"SuperTrait","from":{"krate":0,"index":3685},"to":{"krate":0,"index":3698}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":849974,"byte_end":849982,"line_start":798,"line_end":798,"column_start":9,"column_end":17},"kind":{"Impl":{"id":324}},"from":{"krate":0,"index":3710},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":851119,"byte_end":851127,"line_start":839,"line_end":839,"column_start":30,"column_end":38},"kind":{"Impl":{"id":325}},"from":{"krate":0,"index":3710},"to":{"krate":0,"index":3685}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/image.rs","byte_start":851948,"byte_end":851956,"line_start":871,"line_end":871,"column_start":26,"column_end":34},"kind":{"Impl":{"id":326}},"from":{"krate":0,"index":3710},"to":{"krate":0,"index":3698}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/traits.rs","byte_start":863981,"byte_end":863996,"line_start":12,"line_end":12,"column_start":35,"column_end":50},"kind":"SuperTrait","from":{"krate":0,"index":3828},"to":{"krate":0,"index":3757}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/traits.rs","byte_start":864350,"byte_end":864354,"line_start":30,"line_end":30,"column_start":22,"column_end":26},"kind":"SuperTrait","from":{"krate":2,"index":1914},"to":{"krate":0,"index":3763}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/traits.rs","byte_start":864357,"byte_end":864364,"line_start":30,"line_end":30,"column_start":29,"column_end":36},"kind":"SuperTrait","from":{"krate":20,"index":176},"to":{"krate":0,"index":3763}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/traits.rs","byte_start":864367,"byte_end":864370,"line_start":30,"line_end":30,"column_start":39,"column_end":42},"kind":"SuperTrait","from":{"krate":20,"index":589},"to":{"krate":0,"index":3763}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/traits.rs","byte_start":864373,"byte_end":864383,"line_start":30,"line_end":30,"column_start":45,"column_end":55},"kind":"SuperTrait","from":{"krate":2,"index":1671},"to":{"krate":0,"index":3763}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/traits.rs","byte_start":864392,"byte_end":864397,"line_start":30,"line_end":30,"column_start":64,"column_end":69},"kind":"SuperTrait","from":{"krate":2,"index":1606},"to":{"krate":0,"index":3763}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/traits.rs","byte_start":864400,"byte_end":864407,"line_start":30,"line_end":30,"column_start":72,"column_end":79},"kind":"SuperTrait","from":{"krate":20,"index":92},"to":{"krate":0,"index":3763}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/traits.rs","byte_start":864883,"byte_end":864888,"line_start":47,"line_end":47,"column_start":24,"column_end":29},"kind":"SuperTrait","from":{"krate":2,"index":1909},"to":{"krate":0,"index":3776}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/traits.rs","byte_start":864891,"byte_end":864898,"line_start":47,"line_end":47,"column_start":32,"column_end":39},"kind":"SuperTrait","from":{"krate":20,"index":92},"to":{"krate":0,"index":3776}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/traits.rs","byte_start":864901,"byte_end":864908,"line_start":47,"line_end":47,"column_start":42,"column_end":49},"kind":"SuperTrait","from":{"krate":20,"index":176},"to":{"krate":0,"index":3776}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/traits.rs","byte_start":865512,"byte_end":865516,"line_start":73,"line_end":73,"column_start":18,"column_end":22},"kind":"SuperTrait","from":{"krate":2,"index":1914},"to":{"krate":0,"index":3785}},{"span":{"file_name":"/Users/volchan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.7/./src/traits.rs","byte_start":865519,"byte_end":865524,"line_start":73,"line_end":73,"column_start":25,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":1606},"to":{"krate":0,"index":3785}}]}